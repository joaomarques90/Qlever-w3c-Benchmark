
Python 3.9.13 (main, May 23 2022, 22:01:06) 
[GCC 9.4.0] on Linux-4.4.0-19041-Microsoft-x86_64-with-glibc2.31

Number of arguments: 3 arguments.
Argument List: ['/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/w3c_sparql1.1_benchmarking.py', 'sparql11/', '/mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter Semester/git_ad_freiburg_qlever/qlever-code/'] 

Found manifest in: sparql11/data-r2/algebra/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[14] == expected_tests [14] :: 
[parse_manifest] INFO: expected_tests[14] == tests__names [14] :: 

		name = join-combo-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<join-combo-1.rq>'], ['qt:data', '<join-combo-graph-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'join-combo-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Join operator with OPTs, BGPs, and UNIONs"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0096/21-dawg-minutes.html>'}, 'actions': [['qt:query', '<join-combo-1.rq>'], ['qt:data', '<join-combo-graph-2.ttl>']], 'result': ['<join-combo-1.srx>'], 'comment': {'rdfs:comment': '"""Tests nested combination of Join with a BGP / OPT and a BGP / UNION"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<join-combo-1.rq>'], ['qt:data', '<join-combo-graph-2.ttl>']]
		result = ['<join-combo-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = join-combo-2
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<join-combo-2.rq>'], ['qt:graphData', '<join-combo-graph-1.ttl>'], ['qt:data', '<join-combo-graph-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'join-combo-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Join operator with Graph and Union"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0096/21-dawg-minutes.html>'}, 'actions': [['qt:query', '<join-combo-2.rq>'], ['qt:graphData', '<join-combo-graph-1.ttl>'], ['qt:data', '<join-combo-graph-2.ttl>']], 'result': ['<join-combo-2.srx>'], 'comment': {'rdfs:comment': '"""Tests combination of Join operator with Graph on LHS and Union on RHS"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<join-combo-2.rq>'], ['qt:graphData', '<join-combo-graph-1.ttl>'], ['qt:data', '<join-combo-graph-2.ttl>']]
		result = ['<join-combo-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = nested-opt-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<two-nested-opt.rq>'], ['qt:data', '<two-nested-opt.ttl>']]
			assigned_type_number = 3
		test = {'name': 'nested-opt-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Nested Optionals - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<two-nested-opt.rq>'], ['qt:data', '<two-nested-opt.ttl>']], 'result': ['<two-nested-opt.srx>'], 'comment': {'rdfs:comment': '"""Nested-optionals with a shared variable that does not appear in the middle pattern (a not well-formed query pattern as per "Semantics'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<two-nested-opt.rq>'], ['qt:data', '<two-nested-opt.ttl>']]
		result = ['<two-nested-opt.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = nested-opt-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<two-nested-opt-alt.rq>'], ['qt:data', '<two-nested-opt.ttl>']]
			assigned_type_number = 3
		test = {'name': 'nested-opt-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Nested Optionals - 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<two-nested-opt-alt.rq>'], ['qt:data', '<two-nested-opt.ttl>']], 'result': ['<two-nested-opt-alt.srx>'], 'comment': {'rdfs:comment': '"OPTIONALs parse in a left-associative manner"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<two-nested-opt-alt.rq>'], ['qt:data', '<two-nested-opt.ttl>']]
		result = ['<two-nested-opt-alt.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = opt-filter-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<opt-filter-1.rq>'], ['qt:data', '<opt-filter-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'opt-filter-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Optional-filter - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<opt-filter-1.rq>'], ['qt:data', '<opt-filter-1.ttl>']], 'result': ['<opt-filter-1.srx>'], 'comment': {'rdfs:comment': '"A FILTER inside an OPTIONAL can reference a variable bound in the required part of the OPTIONAL"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<opt-filter-1.rq>'], ['qt:data', '<opt-filter-1.ttl>']]
		result = ['<opt-filter-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = opt-filter-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<opt-filter-2.rq>'], ['qt:data', '<opt-filter-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'opt-filter-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Optional-filter - 2 filters"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<opt-filter-2.rq>'], ['qt:data', '<opt-filter-2.ttl>']], 'result': ['<opt-filter-2.srx>'], 'comment': {'rdfs:comment': '"FILTERs inside an OPTIONAL can refer to variables from both the required and optional parts of the construct."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<opt-filter-2.rq>'], ['qt:data', '<opt-filter-2.ttl>']]
		result = ['<opt-filter-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = opt-filter-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<opt-filter-3.rq>'], ['qt:data', '<opt-filter-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'opt-filter-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Optional-filter - scope of variable"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<opt-filter-3.rq>'], ['qt:data', '<opt-filter-3.ttl>']], 'result': ['<opt-filter-3.srx>'], 'comment': {'rdfs:comment': '"FILTERs in an OPTIONAL do not extend to variables bound outside of the LeftJoin(...) operation"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<opt-filter-3.rq>'], ['qt:data', '<opt-filter-3.ttl>']]
		result = ['<opt-filter-3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = filter-place-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<filter-placement-1.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'filter-place-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-placement - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-placement-1.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<filter-placement-1.srx>'], 'comment': {'rdfs:comment': '"FILTER placed after the triple pattern that contains the variable tested"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<filter-placement-1.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<filter-placement-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = filter-place-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<filter-placement-2.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'filter-place-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-placement - 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-placement-2.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<filter-placement-2.srx>'], 'comment': {'rdfs:comment': '"FILTERs are scoped to the nearest enclosing group - placement within that group does not matter"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<filter-placement-2.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<filter-placement-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = filter-place-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<filter-placement-3.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'filter-place-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-placement - 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-placement-3.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<filter-placement-3.srx>'], 'comment': {'rdfs:comment': '"FILTERs are scoped to the nearest enclosing group - placement within that group does not matter"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<filter-placement-3.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<filter-placement-3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = filter-nested-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<filter-nested-1.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'filter-nested-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-nested - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-nested-1.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<filter-nested-1.srx>'], 'comment': {'rdfs:comment': '"A FILTER is in scope for variables bound at the same level of the query tree"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<filter-nested-1.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<filter-nested-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = filter-nested-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<filter-nested-2.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'filter-nested-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-nested - 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-nested-2.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<filter-nested-2.srx>'], 'comment': {'rdfs:comment': '"A FILTER in a group { ... } cannot see variables bound outside that group"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<filter-nested-2.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<filter-nested-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = filter-scope-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<filter-scope-1.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'filter-scope-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-scope - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-scope-1.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<filter-scope-1.srx>'], 'comment': {'rdfs:comment': '"FILTERs in an OPTIONAL do not extend to variables bound outside of the LeftJoin(...) operation"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<filter-scope-1.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<filter-scope-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = join-scope-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<var-scope-join-1.rq>'], ['qt:data', '<var-scope-join-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'join-scope-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Join scope - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<var-scope-join-1.rq>'], ['qt:data', '<var-scope-join-1.ttl>']], 'result': ['<var-scope-join-1.srx>'], 'comment': {'rdfs:comment': '"Variables have query scope."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<var-scope-join-1.rq>'], ['qt:data', '<var-scope-join-1.ttl>']]
		result = ['<var-scope-join-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/algebra/manifest.ttl done!

Found manifest in: sparql11/data-r2/ask/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[4] == expected_tests [4] :: 
[parse_manifest] INFO: expected_tests[4] == tests__names [4] :: 

		name = ask-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<ask-1.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'ask-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ASK-1 (SPARQL XML results)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<ask-1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<ask-1.srx>'], 'comment': {}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'ASK', 'manifest': 'sparql11/data-r2/ask/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<ask-1.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<ask-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = ask-4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<ask-4.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'ask-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ASK-4 (SPARQL XML results)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<ask-4.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<ask-4.srx>'], 'comment': {}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'ASK', 'manifest': 'sparql11/data-r2/ask/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<ask-4.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<ask-4.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = ask-7
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<ask-7.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'ask-7', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ASK-7 (SPARQL XML results)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<ask-7.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<ask-7.srx>'], 'comment': {}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'ASK', 'manifest': 'sparql11/data-r2/ask/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<ask-7.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<ask-7.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = ask-8
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<ask-8.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'ask-8', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ASK-8 (SPARQL XML results)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<ask-8.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<ask-8.srx>'], 'comment': {}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'ASK', 'manifest': 'sparql11/data-r2/ask/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<ask-8.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<ask-8.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/ask/manifest.ttl done!

Found manifest in: sparql11/data-r2/basic/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[27] == expected_tests [27] :: 
[parse_manifest] INFO: expected_tests[27] == tests__names [27] :: 

		name = bgp-no-match
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bgp-no-match.rq>'], ['qt:data', '<data-7.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bgp-no-match', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Non-matching triple pattern"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<bgp-no-match.rq>'], ['qt:data', '<data-7.ttl>']], 'result': ['<bgp-no-match.srx>'], 'comment': {'rdfs:comment': '"Patterns not in data don\'t match"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<bgp-no-match.rq>'], ['qt:data', '<data-7.ttl>']]
		result = ['<bgp-no-match.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = prefix-name-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<prefix-name-1.rq>'], ['qt:data', '<data-6.ttl>']]
			assigned_type_number = 3
		test = {'name': 'prefix-name-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Prefix name 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<prefix-name-1.rq>'], ['qt:data', '<data-6.ttl>']], 'result': ['<prefix-name-1.srx>'], 'comment': {'rdfs:comment': '"No local name - foo:"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<prefix-name-1.rq>'], ['qt:data', '<data-6.ttl>']]
		result = ['<prefix-name-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = spoo-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<spoo-1.rq>'], ['qt:data', '<data-6.ttl>']]
			assigned_type_number = 3
		test = {'name': 'spoo-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic graph pattern - spoo"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<spoo-1.rq>'], ['qt:data', '<data-6.ttl>']], 'result': ['<spoo-1.srx>'], 'comment': {'rdfs:comment': '"Test the :x :y :o1, :o2 construct"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<spoo-1.rq>'], ['qt:data', '<data-6.ttl>']]
		result = ['<spoo-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = base-prefix-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<base-prefix-1.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'base-prefix-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Prefix/Base 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<base-prefix-1.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<base-prefix-1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<base-prefix-1.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<base-prefix-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = base-prefix-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<base-prefix-2.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'base-prefix-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Prefix/Base 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<base-prefix-2.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<base-prefix-2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<base-prefix-2.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<base-prefix-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = base-prefix-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<base-prefix-3.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'base-prefix-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Prefix/Base 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<base-prefix-3.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<base-prefix-3.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<base-prefix-3.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<base-prefix-3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = base-prefix-4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<base-prefix-4.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'base-prefix-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Prefix/Base 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<base-prefix-4.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<base-prefix-4.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<base-prefix-4.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<base-prefix-4.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = base-prefix-5
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<base-prefix-5.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'base-prefix-5', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Prefix/Base 5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<base-prefix-5.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<base-prefix-5.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<base-prefix-5.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<base-prefix-5.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = list-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<list-1.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'list-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - List 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<list-1.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<list-1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<list-1.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<list-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = list-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<list-2.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'list-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - List 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<list-2.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<list-2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<list-2.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<list-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = list-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<list-3.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'list-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - List 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<list-3.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<list-3.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<list-3.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<list-3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = list-4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<list-4.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'list-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - List 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<list-4.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<list-4.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<list-4.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<list-4.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = quotes-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<quotes-1.rq>'], ['qt:data', '<data-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'quotes-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Quotes 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<quotes-1.rq>'], ['qt:data', '<data-3.ttl>']], 'result': ['<quotes-1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<quotes-1.rq>'], ['qt:data', '<data-3.ttl>']]
		result = ['<quotes-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = quotes-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<quotes-2.rq>'], ['qt:data', '<data-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'quotes-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Quotes 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<quotes-2.rq>'], ['qt:data', '<data-3.ttl>']], 'result': ['<quotes-2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<quotes-2.rq>'], ['qt:data', '<data-3.ttl>']]
		result = ['<quotes-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = quotes-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<quotes-3.rq>'], ['qt:data', '<data-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'quotes-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Quotes 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<quotes-3.rq>'], ['qt:data', '<data-3.ttl>']], 'result': ['<quotes-3.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<quotes-3.rq>'], ['qt:data', '<data-3.ttl>']]
		result = ['<quotes-3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = quotes-4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<quotes-4.rq>'], ['qt:data', '<data-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'quotes-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Quotes 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<quotes-4.rq>'], ['qt:data', '<data-3.ttl>']], 'result': ['<quotes-4.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<quotes-4.rq>'], ['qt:data', '<data-3.ttl>']]
		result = ['<quotes-4.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = term-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<term-1.rq>'], ['qt:data', '<data-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'term-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Term 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<term-1.rq>'], ['qt:data', '<data-4.ttl>']], 'result': ['<term-1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<term-1.rq>'], ['qt:data', '<data-4.ttl>']]
		result = ['<term-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = term-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<term-2.rq>'], ['qt:data', '<data-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'term-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Term 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<term-2.rq>'], ['qt:data', '<data-4.ttl>']], 'result': ['<term-2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<term-2.rq>'], ['qt:data', '<data-4.ttl>']]
		result = ['<term-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = term-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<term-3.rq>'], ['qt:data', '<data-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'term-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Term 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<term-3.rq>'], ['qt:data', '<data-4.ttl>']], 'result': ['<term-3.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<term-3.rq>'], ['qt:data', '<data-4.ttl>']]
		result = ['<term-3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = term-4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<term-4.rq>'], ['qt:data', '<data-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'term-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Term 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<term-4.rq>'], ['qt:data', '<data-4.ttl>']], 'result': ['<term-4.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<term-4.rq>'], ['qt:data', '<data-4.ttl>']]
		result = ['<term-4.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = term-5
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<term-5.rq>'], ['qt:data', '<data-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'term-5', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Term 5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<term-5.rq>'], ['qt:data', '<data-4.ttl>']], 'result': ['<term-5.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<term-5.rq>'], ['qt:data', '<data-4.ttl>']]
		result = ['<term-5.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = term-6
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<term-6.rq>'], ['qt:data', '<data-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'term-6', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Term 6"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<term-6.rq>'], ['qt:data', '<data-4.ttl>']], 'result': ['<term-6.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<term-6.rq>'], ['qt:data', '<data-4.ttl>']]
		result = ['<term-6.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = term-7
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<term-7.rq>'], ['qt:data', '<data-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'term-7', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Term 7"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<term-7.rq>'], ['qt:data', '<data-4.ttl>']], 'result': ['<term-7.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<term-7.rq>'], ['qt:data', '<data-4.ttl>']]
		result = ['<term-7.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = term-8
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<term-8.rq>'], ['qt:data', '<data-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'term-8', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Term 8"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<term-8.rq>'], ['qt:data', '<data-4.ttl>']], 'result': ['<term-8.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<term-8.rq>'], ['qt:data', '<data-4.ttl>']]
		result = ['<term-8.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = term-9
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<term-9.rq>'], ['qt:data', '<data-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'term-9', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Term 9"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<term-9.rq>'], ['qt:data', '<data-4.ttl>']], 'result': ['<term-9.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<term-9.rq>'], ['qt:data', '<data-4.ttl>']]
		result = ['<term-9.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = var-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<var-1.rq>'], ['qt:data', '<data-5.ttl>']]
			assigned_type_number = 3
		test = {'name': 'var-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Var 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<var-1.rq>'], ['qt:data', '<data-5.ttl>']], 'result': ['<var-1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<var-1.rq>'], ['qt:data', '<data-5.ttl>']]
		result = ['<var-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = var-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<var-2.rq>'], ['qt:data', '<data-5.ttl>']]
			assigned_type_number = 3
		test = {'name': 'var-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Var 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<var-2.rq>'], ['qt:data', '<data-5.ttl>']], 'result': ['<var-2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<var-2.rq>'], ['qt:data', '<data-5.ttl>']]
		result = ['<var-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/basic/manifest.ttl done!

Found manifest in: sparql11/data-r2/bnode-coreference/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[1] == expected_tests [1] :: 
[parse_manifest] INFO: expected_tests[1] == tests__names [1] :: 

		name = dawg-bnode-coref-001
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-bnode-coref-001', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-bnode-coreference"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<query.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result.ttl>'], 'comment': {'"Query results must maintain bnode co-references in the dataset"': '"Query results must maintain bnode co-references in the dataset"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'bnode co-reference', 'manifest': 'sparql11/data-r2/bnode-coreference/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/bnode-coreference', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<result.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/bnode-coreference/manifest.ttl done!

Found manifest in: sparql11/data-r2/boolean-effective-value/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[7] == expected_tests [7] :: 
[parse_manifest] INFO: expected_tests[7] == tests__names [7] :: 

		name = dawg-boolean-literal
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-boolean-literal.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-boolean-literal', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test literal \'true\'"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-boolean-literal.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<result-boolean-literal.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-boolean-literal.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<result-boolean-literal.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-bev-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-bev-1.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-bev-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - true"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-1.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<result-bev-1.ttl>'], 'comment': {'rdfs:comment': '"Non-zero numerics, non-empty strings, and the true boolean have an EBV of true"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-bev-1.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<result-bev-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-bev-2
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-bev-2.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-bev-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - false"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-2.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<result-bev-2.ttl>'], 'comment': {'rdfs:comment': '"Zero-valued numerics, the empty string, and the false boolean have an EBV of false"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-bev-2.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<result-bev-2.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-bev-3
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-bev-3.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-bev-3', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - &&"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-3.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<result-bev-3.ttl>'], 'comment': {'rdfs:comment': '"The && operator takes the EBV of its operands"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-bev-3.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<result-bev-3.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-bev-4
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-bev-4.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-bev-4', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - ||"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-4.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<result-bev-4.ttl>'], 'comment': {'rdfs:comment': '"The || operator takes the EBV of its operands"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-bev-4.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<result-bev-4.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-bev-5
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-bev-5.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-bev-5', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - optional"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-5.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<result-bev-5.ttl>'], 'comment': {'rdfs:comment': '"The EBV of an unbound value or a literal with an unknown datatype is a type error, which eliminates the solution in question"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-bev-5.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<result-bev-5.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-bev-6
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-bev-6.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-bev-6', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - unknown types"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-6.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<result-bev-6.ttl>'], 'comment': {'rdfs:comment': '"Negating a type error is still a type error"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-bev-6.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<result-bev-6.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/boolean-effective-value/manifest.ttl done!

Found manifest in: sparql11/data-r2/bound/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[1] == expected_tests [1] :: 
[parse_manifest] INFO: expected_tests[1] == tests__names [1] :: 

		name = dawg-bound-query-001
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bound1.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-bound-query-001', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-bound-query-001"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<bound1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bound1-result.ttl>'], 'comment': {'"BOUND test case."': '"BOUND test case."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'bound', 'manifest': 'sparql11/data-r2/bound/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/bound', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<bound1.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bound1-result.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/bound/manifest.ttl done!

Found manifest in: sparql11/data-r2/cast/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[7] == expected_tests [7] :: 
[parse_manifest] INFO: expected_tests[7] == tests__names [7] :: 

		name = cast-str
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-str.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-str', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:string"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-str.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-str.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<cast-str.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-str.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = cast-flt
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-flt.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-flt', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:float"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-flt.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-flt.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<cast-flt.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-flt.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = cast-dbl
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-dbl.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-dbl', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:double"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-dbl.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-dbl.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<cast-dbl.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-dbl.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = cast-dec
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-dec.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-dec', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:decimal"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-dec.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-dec.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<cast-dec.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-dec.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = cast-int
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-int.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-int', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:integer"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-int.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-int.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<cast-int.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-int.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = cast-dT
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-dT.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-dT', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:dateTime"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-dT.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-dT.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<cast-dT.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-dT.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = cast-bool
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-bool.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-bool', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:boolean"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-bool.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-bool.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<cast-bool.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-bool.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/cast/manifest.ttl done!

Found manifest in: sparql11/data-r2/construct/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[5] == expected_tests [5] :: 
[parse_manifest] INFO: expected_tests[5] == tests__names [5] :: 

		name = construct-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-ident.rq>'], ['qt:data', '<data-ident.ttl>']]
			assigned_type_number = 3
		test = {'name': 'construct-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-construct-identity"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<query-ident.rq>'], ['qt:data', '<data-ident.ttl>']], 'result': ['<result-ident.ttl>'], 'comment': {'rdfs:comment': '"Graph equivalent result graph"'}, 'query_form': {'qt:queryForm': 'qt:QueryConstruct'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-r2/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-ident.rq>'], ['qt:data', '<data-ident.ttl>']]
		result = ['<result-ident.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = construct-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-subgraph.rq>'], ['qt:data', '<data-ident.ttl>']]
			assigned_type_number = 3
		test = {'name': 'construct-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-construct-subgraph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<query-subgraph.rq>'], ['qt:data', '<data-ident.ttl>']], 'result': ['<result-subgraph.ttl>'], 'comment': {'rdfs:comment': '"Result subgraph of original graph"'}, 'query_form': {'qt:queryForm': 'qt:QueryConstruct'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-r2/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-subgraph.rq>'], ['qt:data', '<data-ident.ttl>']]
		result = ['<result-subgraph.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = construct-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-reif-1.rq>'], ['qt:data', '<data-reif.ttl>']]
			assigned_type_number = 3
		test = {'name': 'construct-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-construct-reification-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<query-reif-1.rq>'], ['qt:data', '<data-reif.ttl>']], 'result': ['<result-reif.ttl>'], 'comment': {'rdfs:comment': '"Reification of the default graph"'}, 'query_form': {'qt:queryForm': 'qt:QueryConstruct'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-r2/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-reif-1.rq>'], ['qt:data', '<data-reif.ttl>']]
		result = ['<result-reif.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = construct-4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-reif-2.rq>'], ['qt:data', '<data-reif.ttl>']]
			assigned_type_number = 3
		test = {'name': 'construct-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-construct-reification-2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<query-reif-2.rq>'], ['qt:data', '<data-reif.ttl>']], 'result': ['<result-reif.ttl>'], 'comment': {'rdfs:comment': '"Reification of the default graph"'}, 'query_form': {'qt:queryForm': 'qt:QueryConstruct'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-r2/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-reif-2.rq>'], ['qt:data', '<data-reif.ttl>']]
		result = ['<result-reif.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = construct-5
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-construct-optional.rq>'], ['qt:data', '<data-opt.ttl>']]
			assigned_type_number = 3
		test = {'name': 'construct-5', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-construct-optional"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<query-construct-optional.rq>'], ['qt:data', '<data-opt.ttl>']], 'result': ['<result-construct-optional.ttl>'], 'comment': {'rdfs:comment': '"Reification of the default graph"'}, 'query_form': {'qt:queryForm': 'qt:QueryConstruct'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-r2/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-construct-optional.rq>'], ['qt:data', '<data-opt.ttl>']]
		result = ['<result-construct-optional.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/construct/manifest.ttl done!

Found manifest in: sparql11/data-r2/dataset/manifest.ttl
Parsing.....
[parse_manifest] WARNING: tests_number[12] != expected_tests [15] :: 
[parse_manifest] WARNING: expected_tests[15] != tests__names [12] :: 

		name = dawg-dataset-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-01.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<dataset-01.rq>']], 'result': ['<dataset-01.ttl>'], 'comment': {'rdfs:comment': '"Data: default dataset / Query: default dataset"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-01.rq>']]
		result = ['<dataset-01.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-dataset-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-02.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-02"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<dataset-02.rq>']], 'result': ['<dataset-02.ttl>'], 'comment': {'rdfs:comment': '"Data: named dataset / Query: default dataset"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-02.rq>']]
		result = ['<dataset-02.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-dataset-03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-03.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-03"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<dataset-03.rq>']], 'result': ['<dataset-03.ttl>'], 'comment': {'rdfs:comment': '"Data: named dataset / Query: named dataset dataset"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-03.rq>']]
		result = ['<dataset-03.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-dataset-04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-04.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-04"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<dataset-04.rq>']], 'result': ['<dataset-04.ttl>'], 'comment': {'rdfs:comment': '"Data: named dataset / Query: default dataset"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-04.rq>']]
		result = ['<dataset-04.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-dataset-05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-05.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-05"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<dataset-05.rq>']], 'result': ['<dataset-05.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named / Query: default dataset"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-05.rq>']]
		result = ['<dataset-05.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-dataset-06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-06.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-06"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<dataset-06.rq>']], 'result': ['<dataset-06.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named / Query: named dataset"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-06.rq>']]
		result = ['<dataset-06.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-dataset-07
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-07.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-07', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-07"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<dataset-07.rq>']], 'result': ['<dataset-07.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named / Query: all data by UNION"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-07.rq>']]
		result = ['<dataset-07.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-dataset-08
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-08.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-08', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-08"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<dataset-08.rq>']], 'result': ['<dataset-08.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named / Query: common subjects"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-08.rq>']]
		result = ['<dataset-08.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-dataset-09b
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-09b.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-09b', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-09b"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/10/09-dawg-minutes.html>'}, 'actions': [['qt:query', '<dataset-09b.rq>']], 'result': ['<dataset-09.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named (bnodes) / Query: common subjects"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-09b.rq>']]
		result = ['<dataset-09.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-dataset-10b
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-10b.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-10b', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-10b"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/10/09-dawg-minutes.html>'}, 'actions': [['qt:query', '<dataset-10b.rq>']], 'result': ['<dataset-10.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named (same data, with bnodes) / Query: common subjects"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-10b.rq>']]
		result = ['<dataset-10.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-dataset-11
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-11.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-11', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-11"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['qt:query', '<dataset-11.rq>']], 'result': ['<dataset-11.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named (several) / Query: get everything"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-11.rq>']]
		result = ['<dataset-11.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-dataset-12b
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dataset-12b.rq>']]
			assigned_type_number = 3
		test = {'name': 'dawg-dataset-12b', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-12b"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/10/09-dawg-minutes.html>'}, 'actions': [['qt:query', '<dataset-12b.rq>']], 'result': ['<dataset-12.ttl>'], 'comment': {'rdfs:comment': '"Data: default (several) and named (several) / Query: get everything"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dataset-12b.rq>']]
		result = ['<dataset-12.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
Parsing sparql11/data-r2/dataset/manifest.ttl done!

Found manifest in: sparql11/data-r2/distinct/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[11] == expected_tests [11] :: 
[parse_manifest] INFO: expected_tests[11] == tests__names [11] :: 

		name = distinct-star-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<distinct-star-1.rq>'], ['qt:data', '<data-star.ttl>']]
			assigned_type_number = 3
		test = {'name': 'distinct-star-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SELECT DISTINCT *"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<distinct-star-1.rq>'], ['qt:data', '<data-star.ttl>']], 'result': ['<distinct-star-1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DISTINCT', 'manifest': 'sparql11/data-r2/distinct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/distinct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<distinct-star-1.rq>'], ['qt:data', '<data-star.ttl>']]
		result = ['<distinct-star-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = no-distinct-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-num.ttl>']]
			assigned_type_number = 3
		test = {'name': 'no-distinct-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Numbers: No distinct"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-num.ttl>']], 'result': ['<no-distinct-num.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DISTINCT', 'manifest': 'sparql11/data-r2/distinct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/distinct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-num.ttl>']]
		result = ['<no-distinct-num.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = distinct-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-num.ttl>']]
			assigned_type_number = 3
		test = {'name': 'distinct-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Numbers: Distinct"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-num.ttl>']], 'result': ['<distinct-num.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DISTINCT', 'manifest': 'sparql11/data-r2/distinct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/distinct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-num.ttl>']]
		result = ['<distinct-num.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = no-distinct-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-str.ttl>']]
			assigned_type_number = 3
		test = {'name': 'no-distinct-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Strings: No distinct"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-str.ttl>']], 'result': ['<no-distinct-str.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DISTINCT', 'manifest': 'sparql11/data-r2/distinct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/distinct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-str.ttl>']]
		result = ['<no-distinct-str.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = distinct-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-str.ttl>']]
			assigned_type_number = 3
		test = {'name': 'distinct-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Strings: Distinct"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-str.ttl>']], 'result': ['<distinct-str.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DISTINCT', 'manifest': 'sparql11/data-r2/distinct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/distinct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-str.ttl>']]
		result = ['<distinct-str.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = no-distinct-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-node.ttl>']]
			assigned_type_number = 3
		test = {'name': 'no-distinct-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Nodes: No distinct"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-node.ttl>']], 'result': ['<no-distinct-node.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DISTINCT', 'manifest': 'sparql11/data-r2/distinct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/distinct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-node.ttl>']]
		result = ['<no-distinct-node.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = distinct-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-node.ttl>']]
			assigned_type_number = 3
		test = {'name': 'distinct-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Nodes: Distinct"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-node.ttl>']], 'result': ['<distinct-node.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DISTINCT', 'manifest': 'sparql11/data-r2/distinct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/distinct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-node.ttl>']]
		result = ['<distinct-node.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = no-distinct-4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<no-distinct-2.rq>'], ['qt:data', '<data-opt.ttl>']]
			assigned_type_number = 3
		test = {'name': 'no-distinct-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Opt: No distinct"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:query', '<no-distinct-2.rq>'], ['qt:data', '<data-opt.ttl>']], 'result': ['<no-distinct-opt.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DISTINCT', 'manifest': 'sparql11/data-r2/distinct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/distinct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<no-distinct-2.rq>'], ['qt:data', '<data-opt.ttl>']]
		result = ['<no-distinct-opt.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = distinct-4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<distinct-2.rq>'], ['qt:data', '<data-opt.ttl>']]
			assigned_type_number = 3
		test = {'name': 'distinct-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Opt: Distinct"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:query', '<distinct-2.rq>'], ['qt:data', '<data-opt.ttl>']], 'result': ['<distinct-opt.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DISTINCT', 'manifest': 'sparql11/data-r2/distinct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/distinct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<distinct-2.rq>'], ['qt:data', '<data-opt.ttl>']]
		result = ['<distinct-opt.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = no-distinct-9
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-all.ttl>']]
			assigned_type_number = 3
		test = {'name': 'no-distinct-9', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"All: No distinct"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-all.ttl>']], 'result': ['<no-distinct-all.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DISTINCT', 'manifest': 'sparql11/data-r2/distinct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/distinct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<no-distinct-1.rq>'], ['qt:data', '<data-all.ttl>']]
		result = ['<no-distinct-all.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = distinct-9
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-all.ttl>']]
			assigned_type_number = 3
		test = {'name': 'distinct-9', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"All: Distinct"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-all.ttl>']], 'result': ['<distinct-all.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DISTINCT', 'manifest': 'sparql11/data-r2/distinct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/distinct', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<distinct-1.rq>'], ['qt:data', '<data-all.ttl>']]
		result = ['<distinct-all.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/distinct/manifest.ttl done!

Found manifest in: sparql11/data-r2/expr-builtin/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[24] == expected_tests [24] :: 
[parse_manifest] INFO: expected_tests[24] == tests__names [24] :: 

		name = dawg-isLiteral-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-isliteral-1.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-isLiteral-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"isLiteral"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<q-isliteral-1.rq>'], ['qt:data', '<data-builtin-2.ttl>']], 'result': ['<result-isliteral-1.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-isliteral-1.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
		result = ['<result-isliteral-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-str-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-str-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-str-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"str-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-str-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']], 'result': ['<result-str-1.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-str-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
		result = ['<result-str-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-str-2
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-str-2.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-str-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"str-2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-str-2.rq>'], ['qt:data', '<data-builtin-1.ttl>']], 'result': ['<result-str-2.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-str-2.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
		result = ['<result-str-2.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-str-3
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-str-3.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-str-3', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"str-3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-str-3.rq>'], ['qt:data', '<data-builtin-1.ttl>']], 'result': ['<result-str-3.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-str-3.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
		result = ['<result-str-3.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-str-4
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-str-4.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-str-4', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"str-4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-str-4.rq>'], ['qt:data', '<data-builtin-1.ttl>']], 'result': ['<result-str-4.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-str-4.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
		result = ['<result-str-4.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-isBlank-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-blank-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-isBlank-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"isBlank-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-blank-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']], 'result': ['<result-blank-1.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-blank-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
		result = ['<result-blank-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-datatype-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-datatype-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-datatype-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"datatype-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-datatype-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']], 'result': ['<result-datatype-1.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-datatype-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
		result = ['<result-datatype-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-datatype-2
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-datatype-2.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-datatype-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"datatype-2 : Literals with a datatype"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-datatype-2.rq>'], ['qt:data', '<data-builtin-2.ttl>']], 'result': ['<result-datatype-2.srx>'], 'comment': {'rdfs:comment': '"updated from original test case: eliminated ordering from test"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-datatype-2.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
		result = ['<result-datatype-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-datatype-3
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-datatype-3.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-datatype-3', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"datatype-3 : Literals with a datatype of xsd:string"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-datatype-3.rq>'], ['qt:data', '<data-builtin-2.ttl>']], 'result': ['<result-datatype-3.srx>'], 'comment': {'rdfs:comment': '"updated from original test case: eliminated ordering from test"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-datatype-3.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
		result = ['<result-datatype-3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-lang-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-lang-1.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-lang-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"lang-1 : Literals with a lang tag of some kind"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-lang-1.rq>'], ['qt:data', '<data-builtin-2.ttl>']], 'result': ['<result-lang-1.srx>'], 'comment': {'rdfs:comment': '"updated from original test case: eliminated ordering from test"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-lang-1.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
		result = ['<result-lang-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-lang-2
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-lang-2.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-lang-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"lang-2 : Literals with a lang tag of \'\'"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-lang-2.rq>'], ['qt:data', '<data-builtin-2.ttl>']], 'result': ['<result-lang-2.srx>'], 'comment': {'rdfs:comment': '"updated from original test case: eliminated ordering from test"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-lang-2.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
		result = ['<result-lang-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-lang-3
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-lang-3.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-lang-3', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"lang-3 : Graph matching with lang tag being a different case"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-lang-3.rq>'], ['qt:data', '<data-builtin-2.ttl>']], 'result': ['<result-lang-3.srx>'], 'comment': {'rdfs:comment': '"updated from original test case: eliminated ordering from test"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-lang-3.rq>'], ['qt:data', '<data-builtin-2.ttl>']]
		result = ['<result-lang-3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-isURI-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-uri-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-isURI-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"isURI-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-uri-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']], 'result': ['<result-uri-1.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-uri-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
		result = ['<result-uri-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-isIRI-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-iri-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-isIRI-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"isIRI-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<q-iri-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']], 'result': ['<result-iri-1.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-iri-1.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
		result = ['<result-iri-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-langMatches-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-langMatches-1.rq>'], ['qt:data', '<data-langMatches.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-langMatches-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"LangMatches-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-langMatches-1.rq>'], ['qt:data', '<data-langMatches.ttl>']], 'result': ['<result-langMatches-1.ttl>'], 'comment': {'rdfs:comment': '"langMatches(lang(?v), \'en-GB\') matches \'abc\'@en-gb"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-langMatches-1.rq>'], ['qt:data', '<data-langMatches.ttl>']]
		result = ['<result-langMatches-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-langMatches-2
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-langMatches-2.rq>'], ['qt:data', '<data-langMatches.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-langMatches-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"LangMatches-2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-langMatches-2.rq>'], ['qt:data', '<data-langMatches.ttl>']], 'result': ['<result-langMatches-2.ttl>'], 'comment': {'rdfs:comment': '"langMatches(lang(?v), \'en\') matches \'abc\'@en, \'abc\'@en-gb"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-langMatches-2.rq>'], ['qt:data', '<data-langMatches.ttl>']]
		result = ['<result-langMatches-2.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-langMatches-3
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-langMatches-3.rq>'], ['qt:data', '<data-langMatches.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-langMatches-3', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"LangMatches-3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-langMatches-3.rq>'], ['qt:data', '<data-langMatches.ttl>']], 'result': ['<result-langMatches-3.ttl>'], 'comment': {'rdfs:comment': '"langMatches(lang(?v), \'*\') matches \'abc\'@en, \'abc\'@en-gb, \'abc\'@fr"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-langMatches-3.rq>'], ['qt:data', '<data-langMatches.ttl>']]
		result = ['<result-langMatches-3.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-langMatches-4
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-langMatches-4.rq>'], ['qt:data', '<data-langMatches.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-langMatches-4', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"LangMatches-4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-langMatches-4.rq>'], ['qt:data', '<data-langMatches.ttl>']], 'result': ['<result-langMatches-4.ttl>'], 'comment': {'rdfs:comment': '"! langMatches(lang(?v), \'*\') matches \'abc\'"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-langMatches-4.rq>'], ['qt:data', '<data-langMatches.ttl>']]
		result = ['<result-langMatches-4.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-langMatches-basic
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-langMatches-de-de.rq>'], ['qt:data', '<data-langMatches-de.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-langMatches-basic', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"LangMatches-basic"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<q-langMatches-de-de.rq>'], ['qt:data', '<data-langMatches-de.ttl>']], 'result': ['<result-langMatches-de.ttl>'], 'comment': {'rdfs:comment': '"the basic range \'de-de\' does not match \'de-Latn-de\'"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-langMatches-de-de.rq>'], ['qt:data', '<data-langMatches-de.ttl>']]
		result = ['<result-langMatches-de.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = lang-case-insensitive-eq
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<lang-case-sensitivity-eq.rq>'], ['qt:data', '<lang-case-sensitivity.ttl>']]
			assigned_type_number = 3
		test = {'name': 'lang-case-insensitive-eq', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"lang-case-insensitive-eq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<lang-case-sensitivity-eq.rq>'], ['qt:data', '<lang-case-sensitivity.ttl>']], 'result': ['<lang-case-insensitive-eq.srx>'], 'comment': {'rdfs:comment': '"\'xyz\'@en = \'xyz\'@EN"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<lang-case-sensitivity-eq.rq>'], ['qt:data', '<lang-case-sensitivity.ttl>']]
		result = ['<lang-case-insensitive-eq.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = lang-case-insensitive-ne
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<lang-case-sensitivity-ne.rq>'], ['qt:data', '<lang-case-sensitivity.ttl>']]
			assigned_type_number = 3
		test = {'name': 'lang-case-insensitive-ne', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"lang-case-insensitive-ne"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<lang-case-sensitivity-ne.rq>'], ['qt:data', '<lang-case-sensitivity.ttl>']], 'result': ['<lang-case-insensitive-ne.srx>'], 'comment': {'rdfs:comment': '"\'xyz\'@en != \'xyz\'@EN"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<lang-case-sensitivity-ne.rq>'], ['qt:data', '<lang-case-sensitivity.ttl>']]
		result = ['<lang-case-insensitive-ne.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sameTerm-simple
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sameTerm.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'sameTerm-simple', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sameTerm-simple"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['qt:query', '<sameTerm.rq>'], ['qt:data', '<data-builtin-1.ttl>']], 'result': ['<result-sameTerm.ttl>'], 'comment': {'rdfs:comment': '"sameTerm(?v1, ?v2)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<sameTerm.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
		result = ['<result-sameTerm.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sameTerm-eq
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sameTerm-eq.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'sameTerm-eq', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sameTerm-eq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['qt:query', '<sameTerm-eq.rq>'], ['qt:data', '<data-builtin-1.ttl>']], 'result': ['<result-sameTerm-eq.ttl>'], 'comment': {'rdfs:comment': '"sameTerm(?v1, ?v2) && ?v1 = ?v2"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<sameTerm-eq.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
		result = ['<result-sameTerm-eq.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sameTerm-not-eq
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sameTerm-not-eq.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'sameTerm-not-eq', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sameTerm-not-eq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['qt:query', '<sameTerm-not-eq.rq>'], ['qt:data', '<data-builtin-1.ttl>']], 'result': ['<result-sameTerm-not-eq.ttl>'], 'comment': {'rdfs:comment': '"!sameTerm(?v1, ?v2) && ?v1 = ?v2"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-ins', 'manifest': 'sparql11/data-r2/expr-builtin/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-builtin', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<sameTerm-not-eq.rq>'], ['qt:data', '<data-builtin-1.ttl>']]
		result = ['<result-sameTerm-not-eq.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/expr-builtin/manifest.ttl done!

Found manifest in: sparql11/data-r2/expr-equals/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[12] == expected_tests [12] :: 
[parse_manifest] INFO: expected_tests[12] == tests__names [12] :: 

		name = eq-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq-1.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Equality 1-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq-1.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq-1.ttl>'], 'comment': {'rdfs:comment': '"= in FILTER expressions is value equality"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq-1.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = eq-2
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq-2.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Equality 1-2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq-2.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq-2.ttl>'], 'comment': {'rdfs:comment': '"= in FILTER expressions is value equality"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq-2.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq-2.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = eq-3
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq-3.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-3', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Equality 1-3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq-3.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq-3.ttl>'], 'comment': {'rdfs:comment': '"Numerics are not value-equivalent to plain literals"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq-3.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq-3.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = eq-4
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq-4.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-4', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Equality 1-4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq-4.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq-4.ttl>'], 'comment': {'rdfs:comment': '"= compares plain literals and unknown types with the same lexical form as false"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq-4.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq-4.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = eq-5
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq-5.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-5', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Equality 1-5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq-5.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq-5.ttl>'], 'comment': {'rdfs:comment': '"= on IRI terms"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq-5.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq-5.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = eq-2-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq2-1.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-2-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Equality - 2 var - test equals"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq2-1.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq2-1.ttl>'], 'comment': {'rdfs:comment': '"= in FILTER is value equality"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq2-1.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq2-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = eq-2-2
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq2-1.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-2-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq2-1.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq2-1.ttl>'], 'comment': {'rdfs:comment': '"!= in FILTER is value inequality"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq2-1.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq2-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = eq-graph-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq-graph-1.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-graph-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Equality 1-1 -- graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq-graph-1.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq-graph-1.ttl>'], 'comment': {'rdfs:comment': '"Graph pattern matching matches exact terms, not values"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq-graph-1.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq-graph-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = eq-graph-2
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq-graph-2.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-graph-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Equality 1-2 -- graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq-graph-2.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq-graph-2.ttl>'], 'comment': {'rdfs:comment': '"Graph pattern matching matches exact terms, not values"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq-graph-2.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq-graph-2.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = eq-graph-3
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq-graph-3.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-graph-3', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Equality 1-3 -- graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq-graph-3.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq-graph-3.ttl>'], 'comment': {'rdfs:comment': '"Graph pattern matching matches exact terms, not values"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq-graph-3.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq-graph-3.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = eq-graph-4
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq-graph-4.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-graph-4', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Equality 1-4 -- graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq-graph-4.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq-graph-4.ttl>'], 'comment': {'rdfs:comment': '"Graph pattern matching matches exact terms, not values"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq-graph-4.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq-graph-4.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = eq-graph-5
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-eq-graph-5.rq>'], ['qt:data', '<data-eq.ttl>']]
			assigned_type_number = 3
		test = {'name': 'eq-graph-5', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Equality 1-5 -- graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-eq-graph-5.rq>'], ['qt:data', '<data-eq.ttl>']], 'result': ['<result-eq-graph-5.ttl>'], 'comment': {'rdfs:comment': '"Graph pattern matching matches exact terms, not values"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'equality of values', 'manifest': 'sparql11/data-r2/expr-equals/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-equals', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-eq-graph-5.rq>'], ['qt:data', '<data-eq.ttl>']]
		result = ['<result-eq-graph-5.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/expr-equals/manifest.ttl done!

Found manifest in: sparql11/data-r2/expr-ops/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[7] == expected_tests [7] :: 
[parse_manifest] INFO: expected_tests[7] == tests__names [7] :: 

		name = unplus-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-unplus-1.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'unplus-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Unary Plusn"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-unplus-1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result-unplus-1.srx>'], 'comment': {'rdfs:comment': '"+A in FILTER expressions"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'XPath operators', 'manifest': 'sparql11/data-r2/expr-ops/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-ops', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-unplus-1.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<result-unplus-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = unminus-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-unminus-1.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'unminus-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Unary Minus"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-unminus-1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result-unminus-1.srx>'], 'comment': {'rdfs:comment': '"-A in FILTER expressions"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'XPath operators', 'manifest': 'sparql11/data-r2/expr-ops/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-ops', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-unminus-1.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<result-unminus-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = plus-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-plus-1.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'plus-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Addition"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-plus-1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result-plus-1.srx>'], 'comment': {'rdfs:comment': '"A + B in FILTER expressions"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'XPath operators', 'manifest': 'sparql11/data-r2/expr-ops/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-ops', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-plus-1.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<result-plus-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = minus-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-minus-1.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'minus-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Subtraction"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-minus-1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result-minus-1.srx>'], 'comment': {'rdfs:comment': '"A - B in FILTER expressions"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'XPath operators', 'manifest': 'sparql11/data-r2/expr-ops/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-ops', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-minus-1.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<result-minus-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = mul-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-mul-1.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'mul-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Multiplication"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-mul-1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result-mul-1.srx>'], 'comment': {'rdfs:comment': '"A * B in FILTER expressions"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'XPath operators', 'manifest': 'sparql11/data-r2/expr-ops/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-ops', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-mul-1.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<result-mul-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = ge-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-ge-1.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'ge-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Greater-than or equals"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-ge-1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result-ge-1.srx>'], 'comment': {'rdfs:comment': '">= in FILTER expressions"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'XPath operators', 'manifest': 'sparql11/data-r2/expr-ops/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-ops', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-ge-1.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<result-ge-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = le-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<query-le-1.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'le-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Less-than or equals"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-le-1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result-le-1.srx>'], 'comment': {'rdfs:comment': '"<= in FILTER expressions"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'XPath operators', 'manifest': 'sparql11/data-r2/expr-ops/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/expr-ops', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-le-1.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<result-le-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/expr-ops/manifest.ttl done!

Found manifest in: sparql11/data-r2/graph/manifest.ttl
Parsing.....
[parse_manifest] WARNING: tests_number[11] != expected_tests [12] :: 
[parse_manifest] WARNING: expected_tests[12] != tests__names [11] :: 

		name = dawg-graph-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<graph-01.rq>'], ['qt:data', '<data-g1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-graph-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"graph-01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<graph-01.rq>'], ['qt:data', '<data-g1.ttl>']], 'result': ['<graph-01.ttl>'], 'comment': {'rdfs:comment': '"Data: default graph / Query: default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'GRAPH', 'manifest': 'sparql11/data-r2/graph/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/graph', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<graph-01.rq>'], ['qt:data', '<data-g1.ttl>']]
		result = ['<graph-01.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-graph-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<graph-02.rq>'], ['qt:graphData', '<data-g1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-graph-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"graph-02"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<graph-02.rq>'], ['qt:graphData', '<data-g1.ttl>']], 'result': ['<graph-02.ttl>'], 'comment': {'rdfs:comment': '"Data: named graph / Query: default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'GRAPH', 'manifest': 'sparql11/data-r2/graph/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/graph', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<graph-02.rq>'], ['qt:graphData', '<data-g1.ttl>']]
		result = ['<graph-02.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-graph-03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<graph-03.rq>'], ['qt:graphData', '<data-g1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-graph-03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"graph-03"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<graph-03.rq>'], ['qt:graphData', '<data-g1.ttl>']], 'result': ['<graph-03.ttl>'], 'comment': {'rdfs:comment': '"Data: named graph / Query: named graph graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'GRAPH', 'manifest': 'sparql11/data-r2/graph/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/graph', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<graph-03.rq>'], ['qt:graphData', '<data-g1.ttl>']]
		result = ['<graph-03.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = dawg-graph-04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<graph-04.rq>'], ['qt:data', '<data-g1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-graph-04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"graph-04"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<graph-04.rq>'], ['qt:data', '<data-g1.ttl>']], 'result': ['<graph-04.ttl>'], 'comment': {'rdfs:comment': '"Data: named graph / Query: default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'GRAPH', 'manifest': 'sparql11/data-r2/graph/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/graph', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<graph-04.rq>'], ['qt:data', '<data-g1.ttl>']]
		result = ['<graph-04.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-graph-05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<graph-05.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-graph-05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"graph-05"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<graph-05.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']], 'result': ['<graph-05.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named / Query: default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'GRAPH', 'manifest': 'sparql11/data-r2/graph/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/graph', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<graph-05.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']]
		result = ['<graph-05.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-graph-06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<graph-06.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-graph-06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"graph-06"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<graph-06.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']], 'result': ['<graph-06.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named / Query: named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'GRAPH', 'manifest': 'sparql11/data-r2/graph/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/graph', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<graph-06.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']]
		result = ['<graph-06.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-graph-07
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<graph-07.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-graph-07', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"graph-07"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<graph-07.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']], 'result': ['<graph-07.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named / Query: all data by UNION"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'GRAPH', 'manifest': 'sparql11/data-r2/graph/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/graph', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<graph-07.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']]
		result = ['<graph-07.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-graph-08
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<graph-08.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-graph-08', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"graph-08"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<graph-08.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']], 'result': ['<graph-08.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named / Query: common subjects"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'GRAPH', 'manifest': 'sparql11/data-r2/graph/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/graph', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<graph-08.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>']]
		result = ['<graph-08.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-graph-09
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<graph-09.rq>'], ['qt:data', '<data-g3.ttl>'], ['qt:graphData', '<data-g4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-graph-09', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"graph-09"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<graph-09.rq>'], ['qt:data', '<data-g3.ttl>'], ['qt:graphData', '<data-g4.ttl>']], 'result': ['<graph-09.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named (bnodes) / Query: common subjects"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'GRAPH', 'manifest': 'sparql11/data-r2/graph/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/graph', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<graph-09.rq>'], ['qt:data', '<data-g3.ttl>'], ['qt:graphData', '<data-g4.ttl>']]
		result = ['<graph-09.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-graph-10b
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<graph-10.rq>'], ['qt:data', '<data-g3.ttl>'], ['qt:graphData', '<data-g3-dup.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-graph-10b', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"graph-10b"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/10/09-dawg-minutes.html>'}, 'actions': [['qt:query', '<graph-10.rq>'], ['qt:data', '<data-g3.ttl>'], ['qt:graphData', '<data-g3-dup.ttl>']], 'result': ['<graph-10.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named (same data, with bnodes) / Query: common subjects"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'GRAPH', 'manifest': 'sparql11/data-r2/graph/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/graph', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<graph-10.rq>'], ['qt:data', '<data-g3.ttl>'], ['qt:graphData', '<data-g3-dup.ttl>']]
		result = ['<graph-10.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-graph-11
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<graph-11.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>'], ['qt:graphData', '<data-g3.ttl>'], ['qt:graphData', '<data-g4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-graph-11', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"graph-11"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<graph-11.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>'], ['qt:graphData', '<data-g3.ttl>'], ['qt:graphData', '<data-g4.ttl>']], 'result': ['<graph-11.ttl>'], 'comment': {'rdfs:comment': '"Data: default and named (several) / Query: get everything"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'GRAPH', 'manifest': 'sparql11/data-r2/graph/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/graph', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<graph-11.rq>'], ['qt:data', '<data-g1.ttl>'], ['qt:graphData', '<data-g1.ttl>'], ['qt:graphData', '<data-g2.ttl>'], ['qt:graphData', '<data-g3.ttl>'], ['qt:graphData', '<data-g4.ttl>']]
		result = ['<graph-11.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/graph/manifest.ttl done!

Found manifest in: sparql11/data-r2/i18n/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[5] == expected_tests [5] :: 
[parse_manifest] INFO: expected_tests[5] == tests__names [5] :: 

		name = kanji-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<kanji.ttl>'], ['qt:query', '<kanji-01.rq>']]
			assigned_type_number = 3
		test = {'name': 'kanji-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"kanji-01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:data', '<kanji.ttl>'], ['qt:query', '<kanji-01.rq>']], 'result': ['<kanji-01-results.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'I18N', 'manifest': 'sparql11/data-r2/i18n/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/i18n', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<kanji.ttl>'], ['qt:query', '<kanji-01.rq>']]
		result = ['<kanji-01-results.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = kanji-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<kanji.ttl>'], ['qt:query', '<kanji-02.rq>']]
			assigned_type_number = 3
		test = {'name': 'kanji-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"kanji-02"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:data', '<kanji.ttl>'], ['qt:query', '<kanji-02.rq>']], 'result': ['<kanji-02-results.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'I18N', 'manifest': 'sparql11/data-r2/i18n/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/i18n', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<kanji.ttl>'], ['qt:query', '<kanji-02.rq>']]
		result = ['<kanji-02-results.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = normalization-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<normalization-01.ttl>'], ['qt:query', '<normalization-01.rq>']]
			assigned_type_number = 3
		test = {'name': 'normalization-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"normalization-01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['qt:data', '<normalization-01.ttl>'], ['qt:query', '<normalization-01.rq>']], 'result': ['<normalization-01-results.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'I18N', 'manifest': 'sparql11/data-r2/i18n/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/i18n', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<normalization-01.ttl>'], ['qt:query', '<normalization-01.rq>']]
		result = ['<normalization-01-results.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = normalization-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<normalization-02.ttl>'], ['qt:query', '<normalization-02.rq>']]
			assigned_type_number = 3
		test = {'name': 'normalization-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"normalization-02"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:data', '<normalization-02.ttl>'], ['qt:query', '<normalization-02.rq>']], 'result': ['<normalization-02-results.ttl>'], 'comment': {'"Example 1 from http://lists.w3.org/Archives/Public/public-rdf-dawg/2005JulSep/0096"': '"Example 1 from http://lists.w3.org/Archives/Public/public-rdf-dawg/2005JulSep/0096"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'I18N', 'manifest': 'sparql11/data-r2/i18n/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/i18n', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<normalization-02.ttl>'], ['qt:query', '<normalization-02.rq>']]
		result = ['<normalization-02-results.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = normalization-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<normalization-03.ttl>'], ['qt:query', '<normalization-03.rq>']]
			assigned_type_number = 3
		test = {'name': 'normalization-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"normalization-03"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:data', '<normalization-03.ttl>'], ['qt:query', '<normalization-03.rq>']], 'result': ['<normalization-03-results.ttl>'], 'comment': {'"Example 2 from http://lists.w3.org/Archives/Public/public-rdf-dawg/2005JulSep/0096"': '"Example 2 from http://lists.w3.org/Archives/Public/public-rdf-dawg/2005JulSep/0096"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'I18N', 'manifest': 'sparql11/data-r2/i18n/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/i18n', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<normalization-03.ttl>'], ['qt:query', '<normalization-03.rq>']]
		result = ['<normalization-03-results.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
Parsing sparql11/data-r2/i18n/manifest.ttl done!

Found manifest in: sparql11/data-r2/open-world/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[18] == expected_tests [18] :: 
[parse_manifest] INFO: expected_tests[18] == tests__names [18] :: 

		name = open-eq-01
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-01.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-01', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-01.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<open-eq-01-result.srx>'], 'comment': {'rdfs:comment': '"graph match - no lexical form in data (assumes no value matching)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-01.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<open-eq-01-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-eq-02
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-02.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-02', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-02"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-02.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<open-eq-02-result.srx>'], 'comment': {'rdfs:comment': '"graph match - unknown type"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-02.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<open-eq-02-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-eq-03
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-03.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-03', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-03"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-03.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<open-eq-03-result.srx>'], 'comment': {'rdfs:comment': '"Filter(?v=1)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-03.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<open-eq-03-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-eq-04
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-04.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-04', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-04"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-04.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<open-eq-04-result.srx>'], 'comment': {'rdfs:comment': '"Filter(?v!=1)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-04.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<open-eq-04-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-eq-05
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-05.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-05', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-05"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-05.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<open-eq-05-result.srx>'], 'comment': {'rdfs:comment': '"FILTER(?v = unknown type)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-05.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<open-eq-05-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-eq-06
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-06.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-06', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-06"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-06.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<open-eq-06-result.srx>'], 'comment': {'rdfs:comment': '"FILTER(?v != unknown type)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-06.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<open-eq-06-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-eq-07
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-07.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-07', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-07"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-07.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<open-eq-07-result.srx>'], 'comment': {'rdfs:comment': '"'}, 'query_form': {}, 'requires': ['mf:LangTagAwareness', 'mf:StringSimpleLiteralCmp'], 'notable': ['mf:IllFormedLiteral'], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-07.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<open-eq-07-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-eq-08
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-08.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-08', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-08"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-08.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<open-eq-08-result.srx>'], 'comment': {'rdfs:comment': '"Test of \'!=\'"'}, 'query_form': {}, 'requires': ['mf:StringSimpleLiteralCmp', 'mf:LangTagAwareness', 'mf:KnownTypesDefault2Neq'], 'notable': ['mf:IllFormedLiteral'], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-08.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<open-eq-08-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-eq-09
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-09.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-09', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-09"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-09.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<open-eq-09-result.srx>'], 'comment': {'rdfs:comment': '"Test of \'=\'"'}, 'query_form': {}, 'requires': [], 'notable': ['mf:IllFormedLiteral'], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-09.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<open-eq-09-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-eq-10
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-10.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-10', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-10"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-10.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<open-eq-10-result.srx>'], 'comment': {'rdfs:comment': '"Test of \'!=\'"'}, 'query_form': {}, 'requires': ['mf:KnownTypesDefault2Neq', 'mf:LangTagAwareness'], 'notable': ['mf:IllFormedLiteral'], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-10.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<open-eq-10-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-eq-11
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-11.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-11', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-11"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-11.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<open-eq-11-result.srx>'], 'comment': {'rdfs:comment': '"test of \'=\' || \'!=\'"'}, 'query_form': {}, 'requires': ['mf:KnownTypesDefault2Neq'], 'notable': ['mf:IllFormedLiteral'], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-11.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<open-eq-11-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-eq-12
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-eq-12.rq>'], ['qt:data', '<data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-eq-12', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-eq-12"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-eq-12.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<open-eq-12-result.srx>'], 'comment': {'rdfs:comment': '"find pairs that don\'t value-compare"'}, 'query_form': {}, 'requires': ['mf:KnownTypesDefault2Neq', 'mf:LangTagAwareness'], 'notable': ['mf:IllFormedLiteral'], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-eq-12.rq>'], ['qt:data', '<data-2.ttl>']]
		result = ['<open-eq-12-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = date-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<date-1.rq>'], ['qt:data', '<data-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'date-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"date-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [['qt:query', '<date-1.rq>'], ['qt:data', '<data-3.ttl>']], 'result': ['<date-1-result.srx>'], 'comment': {'rdfs:comment': '"Added type : xsd:date \'=\'"'}, 'query_form': {}, 'requires': ['mf:XsdDateOperations'], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<date-1.rq>'], ['qt:data', '<data-3.ttl>']]
		result = ['<date-1-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = date-2
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<date-2.rq>'], ['qt:data', '<data-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'date-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"date-2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<date-2.rq>'], ['qt:data', '<data-3.ttl>']], 'result': ['<date-2-result.srx>'], 'comment': {'rdfs:comment': '"Added type : xsd:date \'!=\'"'}, 'query_form': {}, 'requires': ['mf:XsdDateOperations'], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<date-2.rq>'], ['qt:data', '<data-3.ttl>']]
		result = ['<date-2-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = date-3
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<date-3.rq>'], ['qt:data', '<data-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'date-3', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"date-3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<date-3.rq>'], ['qt:data', '<data-3.ttl>']], 'result': ['<date-3-result.srx>'], 'comment': {'rdfs:comment': '"Added type : xsd:date \'>\'"'}, 'query_form': {}, 'requires': ['mf:XsdDateOperations'], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<date-3.rq>'], ['qt:data', '<data-3.ttl>']]
		result = ['<date-3-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = date-4
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<date-4.rq>'], ['qt:data', '<data-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'date-4', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"date-4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<date-4.rq>'], ['qt:data', '<data-3.ttl>']], 'result': ['<date-4-result.srx>'], 'comment': {'rdfs:comment': '"xsd:date ORDER BY"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<date-4.rq>'], ['qt:data', '<data-3.ttl>']]
		result = ['<date-4-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-cmp-01
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-cmp-01.rq>'], ['qt:data', '<data-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-cmp-01', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-cmp-01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-cmp-01.rq>'], ['qt:data', '<data-4.ttl>']], 'result': ['<open-cmp-01-result.srx>'], 'comment': {'rdfs:comment': '"Find things that compare with < or >"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-cmp-01.rq>'], ['qt:data', '<data-4.ttl>']]
		result = ['<open-cmp-01-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = open-cmp-02
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<open-cmp-02.rq>'], ['qt:data', '<data-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'open-cmp-02', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"open-cmp-02"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['qt:query', '<open-cmp-02.rq>'], ['qt:data', '<data-4.ttl>']], 'result': ['<open-cmp-02-result.srx>'], 'comment': {'rdfs:comment': '"Find things that compare with <= and >"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'open world value testing tests', 'manifest': 'sparql11/data-r2/open-world/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/open-world', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<open-cmp-02.rq>'], ['qt:data', '<data-4.ttl>']]
		result = ['<open-cmp-02-result.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/open-world/manifest.ttl done!

Found manifest in: sparql11/data-r2/optional/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[7] == expected_tests [7] :: 
[parse_manifest] INFO: expected_tests[7] == tests__names [7] :: 

		name = dawg-optional-complex-1
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-opt-complex-1.rq>'], ['qt:data', '<complex-data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-complex-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Complex optional semantics: 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0096/21-dawg-minutes.html>'}, 'actions': [['qt:query', '<q-opt-complex-1.rq>'], ['qt:data', '<complex-data-1.ttl>']], 'result': ['<result-opt-complex-1.ttl>'], 'comment': {'"Complex optional: LeftJoin(LeftJoin(BGP(..),{..}),Join(BGP(..),Union(..,..)))"': '"Complex optional: LeftJoin(LeftJoin(BGP(..),{..}),Join(BGP(..),Union(..,..)))"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL', 'manifest': 'sparql11/data-r2/optional/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-opt-complex-1.rq>'], ['qt:data', '<complex-data-1.ttl>']]
		result = ['<result-opt-complex-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-optional-complex-2
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-opt-complex-2.rq>'], ['qt:graphData', '<complex-data-1.ttl>'], ['qt:data', '<complex-data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-complex-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Complex optional semantics: 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0096/21-dawg-minutes.html>'}, 'actions': [['qt:query', '<q-opt-complex-2.rq>'], ['qt:graphData', '<complex-data-1.ttl>'], ['qt:data', '<complex-data-2.ttl>']], 'result': ['<result-opt-complex-2.ttl>'], 'comment': {'"Complex optional: LeftJoin(Join(BGP(..),Graph(var,{..})),Union(..,..))"': '"Complex optional: LeftJoin(Join(BGP(..),Graph(var,{..})),Union(..,..))"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL', 'manifest': 'sparql11/data-r2/optional/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-opt-complex-2.rq>'], ['qt:graphData', '<complex-data-1.ttl>'], ['qt:data', '<complex-data-2.ttl>']]
		result = ['<result-opt-complex-2.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-optional-complex-3
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-opt-complex-3.rq>'], ['qt:graphData', '<complex-data-1.ttl>'], ['qt:data', '<complex-data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-complex-3', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Complex optional semantics: 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0096/21-dawg-minutes.html>'}, 'actions': [['qt:query', '<q-opt-complex-3.rq>'], ['qt:graphData', '<complex-data-1.ttl>'], ['qt:data', '<complex-data-2.ttl>']], 'result': ['<result-opt-complex-3.ttl>'], 'comment': {'"Complex optional: LeftJoin(Join(BGP(..),Graph(var,{..})),LeftJoin(BGP(..),{..}))"': '"Complex optional: LeftJoin(Join(BGP(..),Graph(var,{..})),LeftJoin(BGP(..),{..}))"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL', 'manifest': 'sparql11/data-r2/optional/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-opt-complex-3.rq>'], ['qt:graphData', '<complex-data-1.ttl>'], ['qt:data', '<complex-data-2.ttl>']]
		result = ['<result-opt-complex-3.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-optional-complex-4
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-opt-complex-4.rq>'], ['qt:graphData', '<complex-data-1.ttl>'], ['qt:data', '<complex-data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-complex-4', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Complex optional semantics: 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0096/21-dawg-minutes.html>'}, 'actions': [['qt:query', '<q-opt-complex-4.rq>'], ['qt:graphData', '<complex-data-1.ttl>'], ['qt:data', '<complex-data-2.ttl>']], 'result': ['<result-opt-complex-4.ttl>'], 'comment': {'"Complex optional: LeftJoin(Join(BGP(..),Union(..,..)),Join(BGP(..),Graph(varOrIRI,{..})))"': '"Complex optional: LeftJoin(Join(BGP(..),Union(..,..)),Join(BGP(..),Graph(varOrIRI,{..})))"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL', 'manifest': 'sparql11/data-r2/optional/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-opt-complex-4.rq>'], ['qt:graphData', '<complex-data-1.ttl>'], ['qt:data', '<complex-data-2.ttl>']]
		result = ['<result-opt-complex-4.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-optional-001
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-opt-1.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-001', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"One optional clause"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-opt-1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result-opt-1.ttl>'], 'comment': {'"One optional clause"': '"One optional clause"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL', 'manifest': 'sparql11/data-r2/optional/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-opt-1.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<result-opt-1.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-optional-002
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-opt-2.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-002', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Two optional clauses"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-opt-2.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result-opt-2.ttl>'], 'comment': {'"One optional clause"': '"One optional clause"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL', 'manifest': 'sparql11/data-r2/optional/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-opt-2.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<result-opt-2.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-union-001
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<q-opt-3.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-union-001', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Union is not optional"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<q-opt-3.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result-opt-3.ttl>'], 'comment': {'rdfs:comment': '"Union is not optional"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL', 'manifest': 'sparql11/data-r2/optional/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<q-opt-3.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<result-opt-3.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/optional/manifest.ttl done!

Found manifest in: sparql11/data-r2/optional-filter/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[6] == expected_tests [6] :: 
[parse_manifest] INFO: expected_tests[6] == tests__names [6] :: 

		name = dawg-optional-filter-001
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<expr-1.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-filter-001', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"OPTIONAL-FILTER"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<expr-1.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<expr-1-result.ttl>'], 'comment': {'rdfs:comment': '"FILTER inside an OPTIONAL does not block an entire solution"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL FILTER', 'manifest': 'sparql11/data-r2/optional-filter/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional-filter', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<expr-1.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<expr-1-result.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-optional-filter-002
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<expr-2.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-filter-002', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"OPTIONAL - Outer FILTER"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<expr-2.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<expr-2-result.ttl>'], 'comment': {'rdfs:comment': '"FILTER outside an OPTIONAL tests bound and unbound variables"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL FILTER', 'manifest': 'sparql11/data-r2/optional-filter/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional-filter', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<expr-2.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<expr-2-result.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-optional-filter-003
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<expr-3.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-filter-003', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"OPTIONAL - Outer FILTER with BOUND"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<expr-3.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<expr-3-result.ttl>'], 'comment': {'rdfs:comment': '"Use !bound to only run outer FILTERs against variables bound in an OPTIONAL"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL FILTER', 'manifest': 'sparql11/data-r2/optional-filter/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional-filter', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<expr-3.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<expr-3-result.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-optional-filter-004
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<expr-4.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-filter-004', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"OPTIONAL - Inner FILTER with negative EBV for outer variables"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007OctDec/att-0006/02-dawg-minutes.html>'}, 'actions': [['qt:query', '<expr-4.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<expr-4-result.ttl>'], 'comment': {'rdfs:comment': '"FILTER inside an OPTIONAL does not corrupt the entire solution"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL FILTER', 'manifest': 'sparql11/data-r2/optional-filter/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional-filter', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<expr-4.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<expr-4-result.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-optional-filter-005-simplified
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<expr-5.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-filter-005-simplified', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-optional-filter-005-simplified"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [['qt:query', '<expr-5.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<expr-5-result-simplified.ttl>'], 'comment': {'rdfs:comment': '"Double curly braces get simplified to single curly braces early on, before filters are scoped";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL FILTER', 'manifest': 'sparql11/data-r2/optional-filter/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional-filter', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<expr-5.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<expr-5-result-simplified.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-optional-filter-005-not-simplified
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<expr-5.rq>'], ['qt:data', '<data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-optional-filter-005-not-simplified', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-optional-filter-005-not-simplified"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [['qt:query', '<expr-5.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<expr-5-result-not-simplified.ttl>'], 'comment': {'rdfs:comment': '"Double curly braces do NOT get simplified to single curly braces early on, before filters are scoped";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'OPTIONAL FILTER', 'manifest': 'sparql11/data-r2/optional-filter/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/optional-filter', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<expr-5.rq>'], ['qt:data', '<data-1.ttl>']]
		result = ['<expr-5-result-not-simplified.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/optional-filter/manifest.ttl done!

Found manifest in: sparql11/data-r2/reduced/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[2] == expected_tests [2] :: 
[parse_manifest] INFO: expected_tests[2] == tests__names [2] :: 

		name = reduced-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<reduced-1.rq>'], ['qt:data', '<reduced-star.ttl>']]
			assigned_type_number = 31
		test = {'name': 'reduced-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SELECT REDUCED *"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': 'mf:LaxCardinality', 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007OctDec/att-0069/13-dawg-minutes.html>'}, 'actions': [['qt:query', '<reduced-1.rq>'], ['qt:data', '<reduced-star.ttl>']], 'result': ['<reduced-1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'REDUCED', 'manifest': 'sparql11/data-r2/reduced/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/reduced', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<reduced-1.rq>'], ['qt:data', '<reduced-star.ttl>']]
		result = ['<reduced-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = reduced-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<reduced-2.rq>'], ['qt:data', '<reduced-str.ttl>']]
			assigned_type_number = 31
		test = {'name': 'reduced-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SELECT REDUCED ?x with strings"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': 'mf:LaxCardinality', 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007OctDec/att-0069/13-dawg-minutes.html>'}, 'actions': [['qt:query', '<reduced-2.rq>'], ['qt:data', '<reduced-str.ttl>']], 'result': ['<reduced-2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'REDUCED', 'manifest': 'sparql11/data-r2/reduced/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/reduced', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<reduced-2.rq>'], ['qt:data', '<reduced-str.ttl>']]
		result = ['<reduced-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/reduced/manifest.ttl done!

Found manifest in: sparql11/data-r2/regex/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[4] == expected_tests [4] :: 
[parse_manifest] INFO: expected_tests[4] == tests__names [4] :: 

		name = dawg-regex-001
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<regex-query-001.rq>'], ['qt:data', '<regex-data-01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-regex-001', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"regex-query-001"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0029.html>'}, 'actions': [['qt:query', '<regex-query-001.rq>'], ['qt:data', '<regex-data-01.ttl>']], 'result': ['<regex-result-001.ttl>'], 'comment': {'"Simple unanchored match test"': '"Simple unanchored match test"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'REGEX', 'manifest': 'sparql11/data-r2/regex/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/regex', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<regex-query-001.rq>'], ['qt:data', '<regex-data-01.ttl>']]
		result = ['<regex-result-001.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-regex-002
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<regex-query-002.rq>'], ['qt:data', '<regex-data-01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-regex-002', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"regex-query-002"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0029.html>'}, 'actions': [['qt:query', '<regex-query-002.rq>'], ['qt:data', '<regex-data-01.ttl>']], 'result': ['<regex-result-002.ttl>'], 'comment': {'"Case insensitive unanchored match test"': '"Case insensitive unanchored match test"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'REGEX', 'manifest': 'sparql11/data-r2/regex/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/regex', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<regex-query-002.rq>'], ['qt:data', '<regex-data-01.ttl>']]
		result = ['<regex-result-002.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-regex-003
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<regex-query-003.rq>'], ['qt:data', '<regex-data-01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-regex-003', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"regex-query-003"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0029.html>'}, 'actions': [['qt:query', '<regex-query-003.rq>'], ['qt:data', '<regex-data-01.ttl>']], 'result': ['<regex-result-003.ttl>'], 'comment': {'"Use/mention test"': '"Use/mention test"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'REGEX', 'manifest': 'sparql11/data-r2/regex/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/regex', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<regex-query-003.rq>'], ['qt:data', '<regex-data-01.ttl>']]
		result = ['<regex-result-003.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-regex-004
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<regex-query-004.rq>'], ['qt:data', '<regex-data-01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-regex-004', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"regex-query-004"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0029.html>'}, 'actions': [['qt:query', '<regex-query-004.rq>'], ['qt:data', '<regex-data-01.ttl>']], 'result': ['<regex-result-004.ttl>'], 'comment': {'"str()+URI test"': '"str()+URI test"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'REGEX', 'manifest': 'sparql11/data-r2/regex/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/regex', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<regex-query-004.rq>'], ['qt:data', '<regex-data-01.ttl>']]
		result = ['<regex-result-004.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/regex/manifest.ttl done!

Found manifest in: sparql11/data-r2/solution-seq/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[13] == expected_tests [13] :: 
[parse_manifest] INFO: expected_tests[13] == tests__names [13] :: 

		name = limit-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'limit-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Limit 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-01.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-01.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = limit-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'limit-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Limit 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-02.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-02.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = limit-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-03.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'limit-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Limit 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-03.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-03.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-03.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-03.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = limit-4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-04.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'limit-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Limit 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-04.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-04.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-04.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-04.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = offset-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-10.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'offset-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Offset 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-10.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-10.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-10.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-10.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = offset-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-11.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'offset-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Offset 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-11.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-11.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-11.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-11.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = offset-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-12.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'offset-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Offset 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-12.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-12.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-12.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-12.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = offset-4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-13.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'offset-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Offset 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-13.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-13.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-13.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-13.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = slice-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-20.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'slice-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Slice 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-20.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-20.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-20.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-20.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = slice-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-21.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'slice-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Slice 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-21.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-21.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-21.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-21.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = slice-3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-22.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'slice-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Slice 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-22.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-22.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-22.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-22.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = slice-4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-23.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'slice-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Slice 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-23.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-23.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-23.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-23.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = slice-5
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<slice-24.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'slice-5', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Slice 5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes#item03>'}, 'actions': [['qt:query', '<slice-24.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<slice-results-24.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Solution Sequence', 'manifest': 'sparql11/data-r2/solution-seq/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/solution-seq', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<slice-24.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<slice-results-24.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/solution-seq/manifest.ttl done!

Found manifest in: sparql11/data-r2/sort/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[13] == expected_tests [13] :: 
[parse_manifest] INFO: expected_tests[13] == tests__names [13] :: 

		name = dawg-sort-1
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-1.rq>'], ['qt:data', '<data-sort-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-1', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"sort-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/26-dawg-minutes>'}, 'actions': [['qt:query', '<query-sort-1.rq>'], ['qt:data', '<data-sort-1.ttl>']], 'result': ['<result-sort-1.rdf>'], 'comment': {'rdfs:comment': '"Alphabetic sort (ascending) on untyped literals"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-1.rq>'], ['qt:data', '<data-sort-1.ttl>']]
		result = ['<result-sort-1.rdf>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_rdf

		name = dawg-sort-2
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-2.rq>'], ['qt:data', '<data-sort-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-2', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"sort-2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/26-dawg-minutes>'}, 'actions': [['qt:query', '<query-sort-2.rq>'], ['qt:data', '<data-sort-1.ttl>']], 'result': ['<result-sort-2.rdf>'], 'comment': {'rdfs:comment': '"Alphabetic sort (descending) on untyped literals"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-2.rq>'], ['qt:data', '<data-sort-1.ttl>']]
		result = ['<result-sort-2.rdf>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_rdf

		name = dawg-sort-3
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-3.rq>'], ['qt:data', '<data-sort-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-3', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"sort-3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/26-dawg-minutes>'}, 'actions': [['qt:query', '<query-sort-3.rq>'], ['qt:data', '<data-sort-3.ttl>']], 'result': ['<result-sort-3.rdf>'], 'comment': {'rdfs:comment': '"Sort on (possibly unbound) URIs"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-3.rq>'], ['qt:data', '<data-sort-3.ttl>']]
		result = ['<result-sort-3.rdf>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_rdf

		name = dawg-sort-4
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-4.rq>'], ['qt:data', '<data-sort-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-4', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"sort-4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/26-dawg-minutes>'}, 'actions': [['qt:query', '<query-sort-4.rq>'], ['qt:data', '<data-sort-4.ttl>']], 'result': ['<result-sort-4.rdf>'], 'comment': {'rdfs:comment': '"Sort on datatyped (integer) literals"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-4.rq>'], ['qt:data', '<data-sort-4.ttl>']]
		result = ['<result-sort-4.rdf>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_rdf

		name = dawg-sort-5
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-5.rq>'], ['qt:data', '<data-sort-4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-5', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"sort-5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/26-dawg-minutes>'}, 'actions': [['qt:query', '<query-sort-5.rq>'], ['qt:data', '<data-sort-4.ttl>']], 'result': ['<result-sort-5.rdf>'], 'comment': {'rdfs:comment': '"Sort first on untyped literals (ascending), then on datatyped (integer) literals (descending"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-5.rq>'], ['qt:data', '<data-sort-4.ttl>']]
		result = ['<result-sort-5.rdf>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_rdf

		name = dawg-sort-6
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-6.rq>'], ['qt:data', '<data-sort-6.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-6', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"sort-6"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/26-dawg-minutes>'}, 'actions': [['qt:query', '<query-sort-6.rq>'], ['qt:data', '<data-sort-6.ttl>']], 'result': ['<result-sort-6.rdf>'], 'comment': {'rdfs:comment': '"Sort on mixed result of uris and literals."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-6.rq>'], ['qt:data', '<data-sort-6.ttl>']]
		result = ['<result-sort-6.rdf>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_rdf

		name = dawg-sort-7
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-4.rq>'], ['qt:data', '<data-sort-7.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-7', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"sort-7"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/26-dawg-minutes>'}, 'actions': [['qt:query', '<query-sort-4.rq>'], ['qt:data', '<data-sort-7.ttl>']], 'result': ['<result-sort-7.rdf>'], 'comment': {'rdfs:comment': '"Sort on comparable mixed typed literals (integer and float)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-4.rq>'], ['qt:data', '<data-sort-7.ttl>']]
		result = ['<result-sort-7.rdf>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_rdf

		name = dawg-sort-8
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-4.rq>'], ['qt:data', '<data-sort-8.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-8', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"sort-8"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/26-dawg-minutes>'}, 'actions': [['qt:query', '<query-sort-4.rq>'], ['qt:data', '<data-sort-8.ttl>']], 'result': ['<result-sort-8.rdf>'], 'comment': {'rdfs:comment': '"Sort on several mixed values (bnode, uri, literal)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-4.rq>'], ['qt:data', '<data-sort-8.ttl>']]
		result = ['<result-sort-8.rdf>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_rdf

		name = dawg-sort-9
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-9.rq>'], ['qt:data', '<data-sort-9.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-9', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"sort-9"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/26-dawg-minutes>'}, 'actions': [['qt:query', '<query-sort-9.rq>'], ['qt:data', '<data-sort-9.ttl>']], 'result': ['<result-sort-9.rdf>'], 'comment': {'rdfs:comment': '"Alphabetic sort (ascending) on datatyped (string) literals"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-9.rq>'], ['qt:data', '<data-sort-9.ttl>']]
		result = ['<result-sort-9.rdf>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_rdf

		name = dawg-sort-10
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-10.rq>'], ['qt:data', '<data-sort-9.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-10', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"sort-10"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/26-dawg-minutes>'}, 'actions': [['qt:query', '<query-sort-10.rq>'], ['qt:data', '<data-sort-9.ttl>']], 'result': ['<result-sort-10.rdf>'], 'comment': {'rdfs:comment': '"Alphabetic sort (descending) on datatyped (string) literals"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-10.rq>'], ['qt:data', '<data-sort-9.ttl>']]
		result = ['<result-sort-10.rdf>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_rdf

		name = dawg-sort-numbers
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-numbers.rq>'], ['qt:data', '<data-sort-numbers.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-numbers', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"Expression sort"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0096/21-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-sort-numbers.rq>'], ['qt:data', '<data-sort-numbers.ttl>']], 'result': ['<result-sort-numbers.ttl>'], 'comment': {'rdfs:comment': '"Sort by a bracketted expression"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-numbers.rq>'], ['qt:data', '<data-sort-numbers.ttl>']]
		result = ['<result-sort-numbers.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-sort-builtin
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-builtin.rq>'], ['qt:data', '<data-sort-builtin.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-builtin', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"Builtin sort"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0096/21-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-sort-builtin.rq>'], ['qt:data', '<data-sort-builtin.ttl>']], 'result': ['<result-sort-builtin.ttl>'], 'comment': {'rdfs:comment': '"Sort by a builtin operator"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-builtin.rq>'], ['qt:data', '<data-sort-builtin.ttl>']]
		result = ['<result-sort-builtin.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-sort-function
		type = {'a': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<query-sort-function.rq>'], ['qt:data', '<data-sort-function.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-sort-function', 'type': {'a': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"Function sort"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0096/21-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-sort-function.rq>'], ['qt:data', '<data-sort-function.ttl>']], 'result': ['<result-sort-function.ttl>'], 'comment': {'rdfs:comment': '"Sort by function invocation"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SORT', 'manifest': 'sparql11/data-r2/sort/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/sort', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<query-sort-function.rq>'], ['qt:data', '<data-sort-function.ttl>']]
		result = ['<result-sort-function.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/sort/manifest.ttl done!

Found manifest in: sparql11/data-r2/syntax-sparql1/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[81] == expected_tests [81] :: 
[parse_manifest] INFO: expected_tests[81] == tests__names [81] :: 

		name = syntax-basic-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-basic-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-basic-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-basic-01.rq>']]
		result = []

		name = syntax-basic-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-basic-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-basic-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-basic-02.rq>']]
		result = []

		name = syntax-basic-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-basic-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-basic-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-basic-03.rq>']]
		result = []

		name = syntax-basic-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-basic-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-basic-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-basic-04.rq>']]
		result = []

		name = syntax-basic-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-basic-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-basic-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-basic-05.rq>']]
		result = []

		name = syntax-basic-06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-basic-06', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-basic-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-basic-06.rq>']]
		result = []

		name = syntax-qname-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-qname-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-qname-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-qname-01.rq>']]
		result = []

		name = syntax-qname-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-qname-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-qname-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-qname-02.rq>']]
		result = []

		name = syntax-qname-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-qname-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-qname-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-qname-03.rq>']]
		result = []

		name = syntax-qname-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-qname-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-qname-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-qname-04.rq>']]
		result = []

		name = syntax-qname-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-qname-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-qname-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-qname-05.rq>']]
		result = []

		name = syntax-qname-06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-qname-06', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-qname-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-qname-06.rq>']]
		result = []

		name = syntax-qname-07
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-qname-07', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-qname-07.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-qname-07.rq>']]
		result = []

		name = syntax-qname-08
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-qname-08', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-qname-08.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-qname-08.rq>']]
		result = []

		name = syntax-lit-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-01.rq>']]
		result = []

		name = syntax-lit-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-02.rq>']]
		result = []

		name = syntax-lit-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-03.rq>']]
		result = []

		name = syntax-lit-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-04.rq>']]
		result = []

		name = syntax-lit-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-05.rq>']]
		result = []

		name = syntax-lit-06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-06', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-06.rq>']]
		result = []

		name = syntax-lit-07
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-07', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-07.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-07.rq>']]
		result = []

		name = syntax-lit-08
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-08', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-08.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-08.rq>']]
		result = []

		name = syntax-lit-09
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-09', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-09.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-09.rq>']]
		result = []

		name = syntax-lit-10
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-10', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-10.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-10.rq>']]
		result = []

		name = syntax-lit-11
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-11', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-11.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-11.rq>']]
		result = []

		name = syntax-lit-12
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-12', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-12.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-12.rq>']]
		result = []

		name = syntax-lit-13
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-13', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-13.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-13.rq>']]
		result = []

		name = syntax-lit-14
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-14', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-14.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-14.rq>']]
		result = []

		name = syntax-lit-15
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-15', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-15.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-15.rq>']]
		result = []

		name = syntax-lit-16
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-16', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-16.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-16.rq>']]
		result = []

		name = syntax-lit-17
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-17', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-17.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-17.rq>']]
		result = []

		name = syntax-lit-18
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-18', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-18.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-18.rq>']]
		result = []

		name = syntax-lit-19
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-19', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-19.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-19.rq>']]
		result = []

		name = syntax-lit-20
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lit-20', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lit-20.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lit-20.rq>']]
		result = []

		name = syntax-struct-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-01.rq>']]
		result = []

		name = syntax-struct-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-02.rq>']]
		result = []

		name = syntax-struct-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-03.rq>']]
		result = []

		name = syntax-struct-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-05.rq>']]
		result = []

		name = syntax-struct-06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-06', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-06.rq>']]
		result = []

		name = syntax-struct-07
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-07', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-07.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-07.rq>']]
		result = []

		name = syntax-struct-08
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-08', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-08.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-08.rq>']]
		result = []

		name = syntax-struct-09
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-09', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-09.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-09.rq>']]
		result = []

		name = syntax-struct-10
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-10', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-10.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-10.rq>']]
		result = []

		name = syntax-struct-11
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-11', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-11.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-11.rq>']]
		result = []

		name = syntax-struct-12
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-12', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-12.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-12.rq>']]
		result = []

		name = syntax-struct-13
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-13', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-13.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-13.rq>']]
		result = []

		name = syntax-struct-14
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-struct-14', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-struct-14.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-struct-14.rq>']]
		result = []

		name = syntax-lists-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lists-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lists-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lists-01.rq>']]
		result = []

		name = syntax-lists-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lists-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lists-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lists-02.rq>']]
		result = []

		name = syntax-lists-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lists-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lists-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lists-03.rq>']]
		result = []

		name = syntax-lists-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lists-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lists-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lists-04.rq>']]
		result = []

		name = syntax-lists-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lists-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lists-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lists-05.rq>']]
		result = []

		name = syntax-bnodes-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-bnodes-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-bnodes-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-bnodes-01.rq>']]
		result = []

		name = syntax-bnodes-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-bnodes-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-bnodes-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-bnodes-02.rq>']]
		result = []

		name = syntax-bnodes-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-bnodes-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-bnodes-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-bnodes-03.rq>']]
		result = []

		name = syntax-bnodes-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-bnodes-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-bnodes-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-bnodes-04.rq>']]
		result = []

		name = syntax-bnodes-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-bnodes-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-bnodes-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-bnodes-05.rq>']]
		result = []

		name = syntax-forms-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-forms-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-forms-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-forms-01.rq>']]
		result = []

		name = syntax-forms-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-forms-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-forms-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-forms-02.rq>']]
		result = []

		name = syntax-union-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-union-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-union-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-union-01.rq>']]
		result = []

		name = syntax-union-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-union-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-union-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-union-02.rq>']]
		result = []

		name = syntax-expr-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-expr-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-expr-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-expr-01.rq>']]
		result = []

		name = syntax-expr-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-expr-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-expr-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-expr-02.rq>']]
		result = []

		name = syntax-expr-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-expr-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-expr-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-expr-03.rq>']]
		result = []

		name = syntax-expr-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-expr-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-expr-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-expr-04.rq>']]
		result = []

		name = syntax-expr-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-expr-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-expr-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-expr-05.rq>']]
		result = []

		name = syntax-order-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-order-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-order-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-order-01.rq>']]
		result = []

		name = syntax-order-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-order-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-order-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-order-02.rq>']]
		result = []

		name = syntax-order-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-order-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-order-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-order-03.rq>']]
		result = []

		name = syntax-order-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-order-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-order-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-order-04.rq>']]
		result = []

		name = syntax-order-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-order-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-order-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-order-05.rq>']]
		result = []

		name = syntax-order-06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-order-06', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-order-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-order-06.rq>']]
		result = []

		name = syntax-order-07
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-order-07', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-order-07.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-order-07.rq>']]
		result = []

		name = syntax-limit-offset-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-limit-offset-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-limit-offset-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-limit-offset-01.rq>']]
		result = []

		name = syntax-limit-offset-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-limit-offset-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-limit-offset-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-limit-offset-02.rq>']]
		result = []

		name = syntax-limit-offset-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-limit-offset-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-limit-offset-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-limit-offset-03.rq>']]
		result = []

		name = syntax-limit-offset-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-limit-offset-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-limit-offset-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-limit-offset-04.rq>']]
		result = []

		name = syntax-pat-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-pat-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['mf:action', '<syntax-pat-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-pat-01.rq>']]
		result = []

		name = syntax-pat-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-pat-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['mf:action', '<syntax-pat-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-pat-02.rq>']]
		result = []

		name = syntax-pat-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-pat-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['mf:action', '<syntax-pat-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-pat-03.rq>']]
		result = []

		name = syntax-pat-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-pat-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['mf:action', '<syntax-pat-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 1', 'manifest': 'sparql11/data-r2/syntax-sparql1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql1', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-pat-04.rq>']]
		result = []
Parsing sparql11/data-r2/syntax-sparql1/manifest.ttl done!

Found manifest in: sparql11/data-r2/syntax-sparql2/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[53] == expected_tests [53] :: 
[parse_manifest] INFO: expected_tests[53] == tests__names [53] :: 

		name = syntax-general-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-01.rq>']]
		result = []

		name = syntax-general-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-02.rq>']]
		result = []

		name = syntax-general-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-03.rq>']]
		result = []

		name = syntax-general-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-04.rq>']]
		result = []

		name = syntax-general-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-05.rq>']]
		result = []

		name = syntax-general-06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-06', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-06.rq>']]
		result = []

		name = syntax-general-07
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-07', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-07.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-07.rq>']]
		result = []

		name = syntax-general-08
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-08', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-08.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-08.rq>']]
		result = []

		name = syntax-general-09
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-09', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-09.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-09.rq>']]
		result = []

		name = syntax-general-10
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-10', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-10.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-10.rq>']]
		result = []

		name = syntax-general-11
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-11', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-11.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-11.rq>']]
		result = []

		name = syntax-general-12
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-12', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-12.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-12.rq>']]
		result = []

		name = syntax-general-13
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-13', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-13.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-13.rq>']]
		result = []

		name = syntax-general-14
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-general-14', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-general-14.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-general-14.rq>']]
		result = []

		name = syntax-keywords-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-keywords-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-keywords-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-keywords-01.rq>']]
		result = []

		name = syntax-keywords-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-keywords-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-keywords-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-keywords-02.rq>']]
		result = []

		name = syntax-keywords-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-keywords-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-keywords-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-keywords-03.rq>']]
		result = []

		name = syntax-lists-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lists-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lists-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lists-01.rq>']]
		result = []

		name = syntax-lists-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lists-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lists-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lists-02.rq>']]
		result = []

		name = syntax-lists-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lists-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lists-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lists-03.rq>']]
		result = []

		name = syntax-lists-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lists-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lists-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lists-04.rq>']]
		result = []

		name = syntax-lists-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-lists-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-lists-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-lists-05.rq>']]
		result = []

		name = syntax-bnode-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-bnode-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-bnode-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-bnode-01.rq>']]
		result = []

		name = syntax-bnode-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-bnode-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-bnode-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-bnode-02.rq>']]
		result = []

		name = syntax-bnode-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-bnode-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-bnode-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-bnode-03.rq>']]
		result = []

		name = syntax-function-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-function-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-function-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-function-01.rq>']]
		result = []

		name = syntax-function-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-function-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-function-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-function-02.rq>']]
		result = []

		name = syntax-function-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-function-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-function-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-function-03.rq>']]
		result = []

		name = syntax-function-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-function-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-function-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-function-04.rq>']]
		result = []

		name = syntax-form-select-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-form-select-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-form-select-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-form-select-01.rq>']]
		result = []

		name = syntax-form-select-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-form-select-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-form-select-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-form-select-02.rq>']]
		result = []

		name = syntax-form-ask-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-form-ask-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-form-ask-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-form-ask-02.rq>']]
		result = []

		name = syntax-form-construct01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-form-construct01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-form-construct01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-form-construct01.rq>']]
		result = []

		name = syntax-form-construct02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-form-construct02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-form-construct02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-form-construct02.rq>']]
		result = []

		name = syntax-form-construct03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-form-construct03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-form-construct03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-form-construct03.rq>']]
		result = []

		name = syntax-form-construct04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-form-construct04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-form-construct04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-form-construct04.rq>']]
		result = []

		name = syntax-form-construct06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-form-construct06', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-form-construct06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-form-construct06.rq>']]
		result = []

		name = syntax-form-describe01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-form-describe01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-form-describe01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-form-describe01.rq>']]
		result = []

		name = syntax-form-describe02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-form-describe02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-form-describe02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-form-describe02.rq>']]
		result = []

		name = syntax-dataset-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-dataset-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-dataset-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-dataset-01.rq>']]
		result = []

		name = syntax-dataset-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-dataset-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-dataset-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-dataset-02.rq>']]
		result = []

		name = syntax-dataset-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-dataset-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-dataset-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-dataset-03.rq>']]
		result = []

		name = syntax-dataset-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-dataset-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-dataset-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-dataset-04.rq>']]
		result = []

		name = syntax-graph-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-graph-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-graph-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-graph-01.rq>']]
		result = []

		name = syntax-graph-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-graph-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-graph-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-graph-02.rq>']]
		result = []

		name = syntax-graph-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-graph-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-graph-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-graph-03.rq>']]
		result = []

		name = syntax-graph-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-graph-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-graph-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-graph-04.rq>']]
		result = []

		name = syntax-graph-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-graph-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-graph-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-graph-05.rq>']]
		result = []

		name = syntax-esc-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-esc-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-esc-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-esc-01.rq>']]
		result = []

		name = syntax-esc-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-esc-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-esc-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-esc-02.rq>']]
		result = []

		name = syntax-esc-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-esc-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-esc-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-esc-03.rq>']]
		result = []

		name = syntax-esc-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-esc-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-esc-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-esc-04.rq>']]
		result = []

		name = syntax-esc-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-esc-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syntax-esc-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 2', 'manifest': 'sparql11/data-r2/syntax-sparql2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql2', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-esc-05.rq>']]
		result = []
Parsing sparql11/data-r2/syntax-sparql2/manifest.ttl done!

Found manifest in: sparql11/data-r2/syntax-sparql3/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[51] == expected_tests [51] :: 
[parse_manifest] INFO: expected_tests[51] == tests__names [51] :: 

		name = syn-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-01.rq>']]
		result = []

		name = syn-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-02.rq>']]
		result = []

		name = syn-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-03.rq>']]
		result = []

		name = syn-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-04.rq>']]
		result = []

		name = syn-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-05.rq>']]
		result = []

		name = syn-06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-06', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-06.rq>']]
		result = []

		name = syn-07
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-07', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-07.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-07.rq>']]
		result = []

		name = syn-08
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-08', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-08.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-08.rq>']]
		result = []

		name = syn-bad-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-01', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-01.rq>']]
		result = []

		name = syn-bad-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-02', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-02.rq>']]
		result = []

		name = syn-bad-03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-03', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-03.rq>']]
		result = []

		name = syn-bad-04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-04', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-04.rq>']]
		result = []

		name = syn-bad-05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-05', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-05.rq>']]
		result = []

		name = syn-bad-06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-06', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-06.rq>']]
		result = []

		name = syn-bad-07
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-07', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-07.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-07.rq>']]
		result = []

		name = syn-bad-08
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-08', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-08.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-08.rq>']]
		result = []

		name = syn-bad-09
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-09', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-09.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-09.rq>']]
		result = []

		name = syn-bad-10
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-10', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-10.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-10.rq>']]
		result = []

		name = syn-bad-11
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-11', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-11.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-11.rq>']]
		result = []

		name = syn-bad-12
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-12', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-12.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-12.rq>']]
		result = []

		name = syn-bad-13
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-13', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-13.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-13.rq>']]
		result = []

		name = syn-bad-14
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-14', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-14.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-14.rq>']]
		result = []

		name = syn-bad-15
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-15', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-15.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-15.rq>']]
		result = []

		name = syn-bad-16
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-16', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-16.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-16.rq>']]
		result = []

		name = syn-bad-17
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-17', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-17.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-17.rq>']]
		result = []

		name = syn-bad-18
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-18', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-18.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-18.rq>']]
		result = []

		name = syn-bad-19
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-19', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-19.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-19.rq>']]
		result = []

		name = syn-bad-20
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-20', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-20.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-20.rq>']]
		result = []

		name = syn-bad-21
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-21', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-21.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-21.rq>']]
		result = []

		name = syn-bad-22
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-22', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-22.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-22.rq>']]
		result = []

		name = syn-bad-23
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-23', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-23.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-23.rq>']]
		result = []

		name = syn-bad-24
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-24', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-24.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-24.rq>']]
		result = []

		name = syn-bad-25
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-25', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-25.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-25.rq>']]
		result = []

		name = syn-bad-26
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-26', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-bad-26.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-26.rq>']]
		result = []

		name = syn-bad-27
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-27', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-27.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-27.rq>']]
		result = []

		name = syn-bad-28
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-28', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-28.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-28.rq>']]
		result = []

		name = syn-bad-29
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-29', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-29.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-29.rq>']]
		result = []

		name = syn-bad-30
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-30', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-30.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-30.rq>']]
		result = []

		name = syn-bad-31
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-31', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-31.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-31.rq>']]
		result = []

		name = bnode-dot
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'bnode-dot', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-bnode-dot.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-bnode-dot.rq>']]
		result = []

		name = bnodes-missing-pvalues-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'bnodes-missing-pvalues-01', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-bnodes-missing-pvalues-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-bnodes-missing-pvalues-01.rq>']]
		result = []

		name = bnodes-missing-pvalues-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'bnodes-missing-pvalues-02', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-bnodes-missing-pvalues-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-bnodes-missing-pvalues-02.rq>']]
		result = []

		name = empty-optional-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'empty-optional-01', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-empty-optional-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-empty-optional-01.rq>']]
		result = []

		name = empty-optional-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'empty-optional-02', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-empty-optional-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-empty-optional-02.rq>']]
		result = []

		name = filter-missing-parens
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'filter-missing-parens', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-filter-missing-parens.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-filter-missing-parens.rq>']]
		result = []

		name = lone-list
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'lone-list', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-lone-list.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-lone-list.rq>']]
		result = []

		name = lone-node
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'lone-node', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JanMar/0047>'}, 'actions': [['mf:action', '<syn-bad-lone-node.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-lone-node.rq>']]
		result = []

		name = blabel-cross-filter
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'blabel-cross-filter', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0012/2007-04-10-dawg-minutes.html#item06>'}, 'actions': [['mf:action', '<syn-blabel-cross-filter.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-blabel-cross-filter.rq>']]
		result = []

		name = blabel-cross-graph-bad
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'blabel-cross-graph-bad', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0012/2007-04-10-dawg-minutes.html#item06>'}, 'actions': [['mf:action', '<syn-blabel-cross-graph-bad.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-blabel-cross-graph-bad.rq>']]
		result = []

		name = blabel-cross-optional-bad
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'blabel-cross-optional-bad', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-blabel-cross-optional-bad.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-blabel-cross-optional-bad.rq>']]
		result = []

		name = blabel-cross-union-bad
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'blabel-cross-union-bad', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-blabel-cross-union-bad.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 3', 'manifest': 'sparql11/data-r2/syntax-sparql3/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql3', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-blabel-cross-union-bad.rq>']]
		result = []
Parsing sparql11/data-r2/syntax-sparql3/manifest.ttl done!

Found manifest in: sparql11/data-r2/syntax-sparql4/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[12] == expected_tests [12] :: 
[parse_manifest] INFO: expected_tests[12] == tests__names [12] :: 

		name = syn-09
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-09', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/02/13-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-09.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-09.rq>']]
		result = []

		name = syn-10
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-10', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/02/13-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-10.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-10.rq>']]
		result = []

		name = syn-11
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-11', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/02/13-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-11.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-11.rq>']]
		result = []

		name = syn-leading-digits-in-prefixed-names
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syn-leading-digits-in-prefixed-names', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0063/29-dawg-minutes.htm>'}, 'actions': [['mf:action', '<syn-leading-digits-in-prefixed-names.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-leading-digits-in-prefixed-names.rq>']]
		result = []

		name = syn-bad-34
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-34', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/02/13-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-bad-34.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-34.rq>']]
		result = []

		name = syn-bad-35
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-35', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/02/13-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-bad-35.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-35.rq>']]
		result = []

		name = syn-bad-36
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-36', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/02/13-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-bad-36.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-36.rq>']]
		result = []

		name = syn-bad-37
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-37', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/02/13-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-bad-37.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-37.rq>']]
		result = []

		name = syn-bad-38
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-38', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/02/13-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-bad-38.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-38.rq>']]
		result = []

		name = syn-bad-OPT-breaks-BGP
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-OPT-breaks-BGP', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0063/29-dawg-minutes.htm>'}, 'actions': [['mf:action', '<syn-bad-OPT-breaks-BGP.rq>']], 'result': [], 'comment': {'rdfs:comment': '"bad: re-used BNode label after OPTIONAL"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-OPT-breaks-BGP.rq>']]
		result = []

		name = syn-bad-UNION-breaks-BGP
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-UNION-breaks-BGP', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0118/04-dawg-minutes.html>'}, 'actions': [['mf:action', '<syn-bad-UNION-breaks-BGP.rq>']], 'result': [], 'comment': {'rdfs:comment': '"bad: re-used BNode label after UNION"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-UNION-breaks-BGP.rq>']]
		result = []

		name = syn-bad-GRAPH-breaks-BGP
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest'}
			assigned_type_number = 2
		test = {'name': 'syn-bad-GRAPH-breaks-BGP', 'type': {'rdf:type': 'mf:NegativeSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0063/29-dawg-minutes.htm>'}, 'actions': [['mf:action', '<syn-bad-GRAPH-breaks-BGP.rq>']], 'result': [], 'comment': {'rdfs:comment': '"bad: re-used BNode label after GRAPH"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 4', 'manifest': 'sparql11/data-r2/syntax-sparql4/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql4', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syn-bad-GRAPH-breaks-BGP.rq>']]
		result = []
Parsing sparql11/data-r2/syntax-sparql4/manifest.ttl done!

Found manifest in: sparql11/data-r2/syntax-sparql5/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[2] == expected_tests [2] :: 
[parse_manifest] INFO: expected_tests[2] == tests__names [2] :: 

		name = syntax-reduced-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-reduced-01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007OctDec/att-0069/13-dawg-minutes.html>'}, 'actions': [['mf:action', '<syntax-reduced-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 5', 'manifest': 'sparql11/data-r2/syntax-sparql5/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql5', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-reduced-01.rq>']]
		result = []

		name = syntax-reduced-02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest'}
			assigned_type_number = 1
		test = {'name': 'syntax-reduced-02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest'}, 'mf_name': None, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007OctDec/att-0069/13-dawg-minutes.html>'}, 'actions': [['mf:action', '<syntax-reduced-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax 5', 'manifest': 'sparql11/data-r2/syntax-sparql5/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/syntax-sparql5', 'version': 'Sparql 1.0'}
		actions = [['mf:action', '<syntax-reduced-02.rq>']]
		result = []
Parsing sparql11/data-r2/syntax-sparql5/manifest.ttl done!

Found manifest in: sparql11/data-r2/triple-match/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[4] == expected_tests [4] :: 
[parse_manifest] INFO: expected_tests[4] == tests__names [4] :: 

		name = dawg-triple-pattern-001
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dawg-tp-01.rq>'], ['qt:data', '<data-01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-triple-pattern-001', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-triple-pattern-001"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2005JanMar/0358>'}, 'actions': [['qt:query', '<dawg-tp-01.rq>'], ['qt:data', '<data-01.ttl>']], 'result': ['<result-tp-01.ttl>'], 'comment': {'"Simple triple match"': '"Simple triple match"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Triple Match', 'manifest': 'sparql11/data-r2/triple-match/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/triple-match', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dawg-tp-01.rq>'], ['qt:data', '<data-01.ttl>']]
		result = ['<result-tp-01.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-triple-pattern-002
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dawg-tp-02.rq>'], ['qt:data', '<data-01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-triple-pattern-002', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-triple-pattern-002"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2005JanMar/0358>'}, 'actions': [['qt:query', '<dawg-tp-02.rq>'], ['qt:data', '<data-01.ttl>']], 'result': ['<result-tp-02.ttl>'], 'comment': {'"Simple triple match"': '"Simple triple match"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Triple Match', 'manifest': 'sparql11/data-r2/triple-match/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/triple-match', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dawg-tp-02.rq>'], ['qt:data', '<data-01.ttl>']]
		result = ['<result-tp-02.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-triple-pattern-003
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dawg-tp-03.rq>'], ['qt:data', '<data-02.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-triple-pattern-003', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-triple-pattern-003"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2005JanMar/0358>'}, 'actions': [['qt:query', '<dawg-tp-03.rq>'], ['qt:data', '<data-02.ttl>']], 'result': ['<result-tp-03.ttl>'], 'comment': {'"Simple triple match - repeated variable"': '"Simple triple match - repeated variable"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Triple Match', 'manifest': 'sparql11/data-r2/triple-match/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/triple-match', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dawg-tp-03.rq>'], ['qt:data', '<data-02.ttl>']]
		result = ['<result-tp-03.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = dawg-triple-pattern-004
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<dawg-tp-04.rq>'], ['qt:data', '<dawg-data-01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'dawg-triple-pattern-004', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-triple-pattern-004"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2005JanMar/0358>'}, 'actions': [['qt:query', '<dawg-tp-04.rq>'], ['qt:data', '<dawg-data-01.ttl>']], 'result': ['<result-tp-04.ttl>'], 'comment': {'"Simple triple match - two triples, common variable"': '"Simple triple match - two triples, common variable"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Triple Match', 'manifest': 'sparql11/data-r2/triple-match/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/triple-match', 'version': 'Sparql 1.0'}
		actions = [['qt:query', '<dawg-tp-04.rq>'], ['qt:data', '<dawg-data-01.ttl>']]
		result = ['<result-tp-04.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-r2/triple-match/manifest.ttl done!

Found manifest in: sparql11/data-r2/type-promotion/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[30] == expected_tests [30] :: 
[parse_manifest] INFO: expected_tests[30] == tests__names [30] :: 

		name = type-promotion-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-double.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-double-double"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-double.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-double.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-float.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-double-float"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-float.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-float.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-decimal.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-double-decimal"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-decimal.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-decimal.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-float-float.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-float-float"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-float-float.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-float-float.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-float-decimal.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-float-decimal"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-float-decimal.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-float-decimal.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-decimal-decimal.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-decimal-decimal"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-decimal-decimal.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-decimal-decimal.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-07
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-integer-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-07', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-integer-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-integer-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-integer-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-08
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-nonPositiveInteger-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-08', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-nonPositiveInteger-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-nonPositiveInteger-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-nonPositiveInteger-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-09
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-negativeInteger-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-09', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-negativeInteger-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-negativeInteger-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-negativeInteger-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-10
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-long-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-10', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-long-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-long-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-long-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-11
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-int-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-11', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-int-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-int-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-int-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-12
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-12', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-short-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-13
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-byte-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-13', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-byte-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-byte-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-byte-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-14
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-nonNegativeInteger-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-14', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-nonNegativeInteger-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-nonNegativeInteger-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-nonNegativeInteger-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-15
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedLong-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-15', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-unsignedLong-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedLong-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedLong-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-16
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedInt-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-16', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-unsignedInt-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedInt-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedInt-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-17
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedShort-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-17', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-unsignedShort-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedShort-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedShort-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-18
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedByte-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-18', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-unsignedByte-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedByte-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-unsignedByte-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-19
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-positiveInteger-short.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-19', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-positiveInteger-short"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-positiveInteger-short.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-positiveInteger-short.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-20
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-double.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-20', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-short-double"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-double.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-double.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-21
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-float.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-21', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-short-float"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-float.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-float.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-22
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-decimal.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-22', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-short-decimal"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-decimal.rq>']], 'result': ['<true.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-decimal.rq>']]
		result = ['<true.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-23
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-short-fail.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-23', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-short-short-fail"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-short-fail.rq>']], 'result': ['<false.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-short-fail.rq>']]
		result = ['<false.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-24
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-byte-short-fail.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-24', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-byte-short-fail"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-byte-short-fail.rq>']], 'result': ['<false.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-byte-short-fail.rq>']]
		result = ['<false.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-25
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-long-fail.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-25', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-short-long-fail"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-long-fail.rq>']], 'result': ['<false.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-long-fail.rq>']]
		result = ['<false.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-26
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-int-fail.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-26', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-short-int-fail"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-int-fail.rq>']], 'result': ['<false.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-int-fail.rq>']]
		result = ['<false.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-27
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-byte-fail.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-27', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-short-byte-fail"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-byte-fail.rq>']], 'result': ['<false.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-short-byte-fail.rq>']]
		result = ['<false.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-28
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-float-fail.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-28', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-double-float-fail"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-float-fail.rq>']], 'result': ['<false.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-float-fail.rq>']]
		result = ['<false.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-29
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-decimal-fail.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-29', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-double-decimal-fail"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-decimal-fail.rq>']], 'result': ['<false.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-double-decimal-fail.rq>']]
		result = ['<false.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = type-promotion-30
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-float-decimal-fail.rq>']]
			assigned_type_number = 3
		test = {'name': 'type-promotion-30', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tP-float-decimal-fail"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/07/17-dawg-minutes>'}, 'actions': [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-float-decimal-fail.rq>']], 'result': ['<false.ttl>'], 'comment': {'"Positive test: product of type promotion within the xsd:decimal type tree."': '"Positive test: product of type promotion within the xsd:decimal type tree."'}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Type Promotion', 'manifest': 'sparql11/data-r2/type-promotion/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/type-promotion', 'version': 'Sparql 1.0'}
		actions = [['qt:data', '<tP.ttl>'], ['qt:query', '<tP-float-decimal-fail.rq>']]
		result = ['<false.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
Parsing sparql11/data-r2/type-promotion/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/add/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[8] == expected_tests [8] :: 
[parse_manifest] INFO: expected_tests[8] == tests__names [8] :: 

		name = add01
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'add01', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"ADD 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<add-01.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-post.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Add the default graph to an existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Add', 'manifest': 'sparql11/data-sparql11/add/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/add', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<add-01.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-post.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = add02
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'add02', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"ADD 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<add-01.ru>'], ['ut:data', '<add-default.ttl>']], 'result': [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-default.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Add the default graph to a non-existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Add', 'manifest': 'sparql11/data-sparql11/add/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/add', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<add-01.ru>'], ['ut:data', '<add-default.ttl>']]
		result = [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-default.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = add03
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'add03', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"ADD 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<add-03.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<add-02-pre.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<add-02-post.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"Add a named graph to an existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Add', 'manifest': 'sparql11/data-sparql11/add/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/add', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<add-03.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<add-02-pre.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<add-02-post.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = add04
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'add04', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"ADD 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<add-03.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"Add a named graph to a non-existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Add', 'manifest': 'sparql11/data-sparql11/add/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/add', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<add-03.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = add05
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'add05', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"ADD 5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<add-05.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<add-03-pre.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<add-03-post.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"Add a named graph to an existing graph with overlapping data"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Add', 'manifest': 'sparql11/data-sparql11/add/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/add', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<add-05.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<add-03-pre.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<add-03-post.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = add06
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'add06', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"ADD 6"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<add-06.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Add a non-existing graph to an existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Add', 'manifest': 'sparql11/data-sparql11/add/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/add', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<add-06.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = add07
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'add07', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"ADD 7"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<add-07.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<add-01-post.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Add an existing graph to the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Add', 'manifest': 'sparql11/data-sparql11/add/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/add', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<add-07.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<add-01-post.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = add08
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'add08', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"ADD 8"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<add-08.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Add a graph to itself"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Add', 'manifest': 'sparql11/data-sparql11/add/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/add', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<add-08.ru>'], ['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<add-default.ttl>'], ['graphData', [['ut:graph', '<add-01-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
Parsing sparql11/data-sparql11/add/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/aggregates/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[31] == expected_tests [31] :: 
[parse_manifest] INFO: expected_tests[31] == tests__names [31] :: 

		name = agg01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg01.rq>'], ['qt:data', '<agg01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"COUNT 1";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<agg01.rq>'], ['qt:data', '<agg01.ttl>']], 'result': ['<agg01.srx>'], 'comment': {'rdfs:comment': '"Simple count"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg01.rq>'], ['qt:data', '<agg01.ttl>']]
		result = ['<agg01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg02.rq>'], ['qt:data', '<agg01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"COUNT 2";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<agg02.rq>'], ['qt:data', '<agg01.ttl>']], 'result': ['<agg02.srx>'], 'comment': {'rdfs:comment': '"Count with grouping"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg02.rq>'], ['qt:data', '<agg01.ttl>']]
		result = ['<agg02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg03.rq>'], ['qt:data', '<agg01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"COUNT 3";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<agg03.rq>'], ['qt:data', '<agg01.ttl>']], 'result': ['<agg03.srx>'], 'comment': {'rdfs:comment': '"Count with grouping and HAVING clause"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg03.rq>'], ['qt:data', '<agg01.ttl>']]
		result = ['<agg03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg04.rq>'], ['qt:data', '<agg01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"COUNT 4";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<agg04.rq>'], ['qt:data', '<agg01.ttl>']], 'result': ['<agg04.srx>'], 'comment': {'rdfs:comment': '"Count(*)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg04.rq>'], ['qt:data', '<agg01.ttl>']]
		result = ['<agg04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg05.rq>'], ['qt:data', '<agg01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"COUNT 5";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<agg05.rq>'], ['qt:data', '<agg01.ttl>']], 'result': ['<agg05.srx>'], 'comment': {'rdfs:comment': '"Count(*) with grouping"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg05.rq>'], ['qt:data', '<agg01.ttl>']]
		result = ['<agg05.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg06.rq>'], ['qt:data', '<agg01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"COUNT 6";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<agg06.rq>'], ['qt:data', '<agg01.ttl>']], 'result': ['<agg06.srx>'], 'comment': {'rdfs:comment': '"Count(*) with HAVING Count(*)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg06.rq>'], ['qt:data', '<agg01.ttl>']]
		result = ['<agg06.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg07
		type = {'rdf:type': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<agg07.rq>'], ['qt:data', '<agg01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg07', 'type': {'rdf:type': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"COUNT 7";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<agg07.rq>'], ['qt:data', '<agg01.ttl>']], 'result': ['<agg07.srx>'], 'comment': {'rdfs:comment': '"Count(*) with grouping and HAVING Count(*)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg07.rq>'], ['qt:data', '<agg01.ttl>']]
		result = ['<agg07.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg08
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11;'}
			assigned_type_number = 2
		test = {'name': 'agg08', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11;'}, 'mf_name': {'mf:name': '"COUNT 8"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['mf:action', '<agg08.rq>']], 'result': [], 'comment': {'rdfs:comment': '"grouping by expression, done wrong";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<agg08.rq>']]
		result = []

		name = agg08b
		type = {'rdf:type': 'mf:QueryEvaluationTest;'}
action_lst = [['qt:query', '<agg08b.rq>'], ['qt:data', '<agg08.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg08b', 'type': {'rdf:type': 'mf:QueryEvaluationTest;'}, 'mf_name': {'mf:name': '"COUNT 8b"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<agg08b.rq>'], ['qt:data', '<agg08.ttl>']], 'result': ['<agg08b.srx>'], 'comment': {'rdfs:comment': '"grouping by expression, done correctly";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg08b.rq>'], ['qt:data', '<agg08.ttl>']]
		result = ['<agg08b.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg09
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11;'}
			assigned_type_number = 2
		test = {'name': 'agg09', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11;'}, 'mf_name': {'mf:name': '"COUNT 9"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['mf:action', '<agg09.rq>']], 'result': [], 'comment': {'rdfs:comment': '"Projection of an ungrouped variable (not appearing in the GROUP BY expression)";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<agg09.rq>']]
		result = []

		name = agg10
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11;'}
			assigned_type_number = 2
		test = {'name': 'agg10', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11;'}, 'mf_name': {'mf:name': '"COUNT 10"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['mf:action', '<agg10.rq>']], 'result': [], 'comment': {'rdfs:comment': '"Projection of an ungrouped variable (no GROUP BY expression at all)";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<agg10.rq>']]
		result = []

		name = agg11
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11;'}
			assigned_type_number = 2
		test = {'name': 'agg11', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11;'}, 'mf_name': {'mf:name': '"COUNT 11"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['mf:action', '<agg11.rq>']], 'result': [], 'comment': {'rdfs:comment': '"Use of an ungrouped variable in a project expression";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<agg11.rq>']]
		result = []

		name = agg12
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11;'}
			assigned_type_number = 2
		test = {'name': 'agg12', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11;'}, 'mf_name': {'mf:name': '"COUNT 12"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['mf:action', '<agg12.rq>']], 'result': [], 'comment': {'rdfs:comment': '"Use of an ungrouped variable in a project expression, where the variable appears in a GROUP BY expression";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:count'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<agg12.rq>']]
		result = []

		name = agg-groupconcat-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-groupconcat-1.rq>'], ['qt:data', '<agg-groupconcat-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-groupconcat-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"GROUP_CONCAT 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-groupconcat-1.rq>'], ['qt:data', '<agg-groupconcat-1.ttl>']], 'result': ['<agg-groupconcat-1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:group_concat'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-groupconcat-1.rq>'], ['qt:data', '<agg-groupconcat-1.ttl>']]
		result = ['<agg-groupconcat-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-groupconcat-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-groupconcat-2.rq>'], ['qt:data', '<agg-groupconcat-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-groupconcat-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"GROUP_CONCAT 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-groupconcat-2.rq>'], ['qt:data', '<agg-groupconcat-1.ttl>']], 'result': ['<agg-groupconcat-2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:group_concat'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-groupconcat-2.rq>'], ['qt:data', '<agg-groupconcat-1.ttl>']]
		result = ['<agg-groupconcat-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-groupconcat-03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-groupconcat-3.rq>'], ['qt:data', '<agg-groupconcat-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-groupconcat-03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"GROUP_CONCAT with SEPARATOR"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-groupconcat-3.rq>'], ['qt:data', '<agg-groupconcat-1.ttl>']], 'result': ['<agg-groupconcat-3.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:group_concat'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-groupconcat-3.rq>'], ['qt:data', '<agg-groupconcat-1.ttl>']]
		result = ['<agg-groupconcat-3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-avg-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-avg-01.rq>'], ['qt:data', '<agg-numeric.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-avg-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"AVG"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-avg-01.rq>'], ['qt:data', '<agg-numeric.ttl>']], 'result': ['<agg-avg-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:avg'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-avg-01.rq>'], ['qt:data', '<agg-numeric.ttl>']]
		result = ['<agg-avg-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-avg-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-avg-02.rq>'], ['qt:data', '<agg-numeric2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-avg-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"AVG with GROUP BY"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-avg-02.rq>'], ['qt:data', '<agg-numeric2.ttl>']], 'result': ['<agg-avg-02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:avg'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-avg-02.rq>'], ['qt:data', '<agg-numeric2.ttl>']]
		result = ['<agg-avg-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-min-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-min-01.rq>'], ['qt:data', '<agg-numeric.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-min-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"MIN"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-min-01.rq>'], ['qt:data', '<agg-numeric.ttl>']], 'result': ['<agg-min-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:min'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-min-01.rq>'], ['qt:data', '<agg-numeric.ttl>']]
		result = ['<agg-min-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-min-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-min-02.rq>'], ['qt:data', '<agg-numeric.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-min-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"MIN with GROUP BY"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-min-02.rq>'], ['qt:data', '<agg-numeric.ttl>']], 'result': ['<agg-min-02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:min'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-min-02.rq>'], ['qt:data', '<agg-numeric.ttl>']]
		result = ['<agg-min-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-max-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-max-01.rq>'], ['qt:data', '<agg-numeric.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-max-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"MAX"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-max-01.rq>'], ['qt:data', '<agg-numeric.ttl>']], 'result': ['<agg-max-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:max'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-max-01.rq>'], ['qt:data', '<agg-numeric.ttl>']]
		result = ['<agg-max-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-max-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-max-02.rq>'], ['qt:data', '<agg-numeric.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-max-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"MAX with GROUP BY"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-max-02.rq>'], ['qt:data', '<agg-numeric.ttl>']], 'result': ['<agg-max-02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:max'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-max-02.rq>'], ['qt:data', '<agg-numeric.ttl>']]
		result = ['<agg-max-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-sum-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-sum-01.rq>'], ['qt:data', '<agg-numeric.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-sum-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SUM"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-sum-01.rq>'], ['qt:data', '<agg-numeric.ttl>']], 'result': ['<agg-sum-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:sum'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-sum-01.rq>'], ['qt:data', '<agg-numeric.ttl>']]
		result = ['<agg-sum-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-sum-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-sum-02.rq>'], ['qt:data', '<agg-numeric2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-sum-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SUM with GROUP BY"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-sum-02.rq>'], ['qt:data', '<agg-numeric2.ttl>']], 'result': ['<agg-sum-02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:sum'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-sum-02.rq>'], ['qt:data', '<agg-numeric2.ttl>']]
		result = ['<agg-sum-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-sample-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-sample-01.rq>'], ['qt:data', '<agg-numeric.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-sample-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SAMPLE"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-sample-01.rq>'], ['qt:data', '<agg-numeric.ttl>']], 'result': ['<agg-sample-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:sample'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-sample-01.rq>'], ['qt:data', '<agg-numeric.ttl>']]
		result = ['<agg-sample-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-err-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-err-01.rq>'], ['qt:data', '<agg-err-01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-err-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Error in AVG"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-err-01.rq>'], ['qt:data', '<agg-err-01.ttl>']], 'result': ['<agg-err-01.srx>'], 'comment': {'rdfs:comment': '"Error in AVG return no binding";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:aggregate'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-err-01.rq>'], ['qt:data', '<agg-err-01.ttl>']]
		result = ['<agg-err-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-err-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-err-02.rq>'], ['qt:data', '<agg-err-02.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-err-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Protect from error in AVG"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_2>'}, 'actions': [['qt:query', '<agg-err-02.rq>'], ['qt:data', '<agg-err-02.ttl>']], 'result': ['<agg-err-02.srx>'], 'comment': {'rdfs:comment': '"Protect from error in AVG using IF and COALESCE";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:aggregate'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-err-02.rq>'], ['qt:data', '<agg-err-02.ttl>']]
		result = ['<agg-err-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-empty-group-max-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-empty-group-max-1.rq>'], ['qt:data', '<empty.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-empty-group-max-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"agg on empty set, explicit grouping"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [['qt:query', '<agg-empty-group-max-1.rq>'], ['qt:data', '<empty.ttl>']], 'result': ['<agg-empty-group-max-1.srx>'], 'comment': {'rdfs:comment': '"aggregating empty results returns no rows, as there are no grouped results."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:aggregate'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-empty-group-max-1.rq>'], ['qt:data', '<empty.ttl>']]
		result = ['<agg-empty-group-max-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-empty-group-max-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-empty-group-max-2.rq>'], ['qt:data', '<empty.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-empty-group-max-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"agg on empty set, no grouping"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [['qt:query', '<agg-empty-group-max-2.rq>'], ['qt:data', '<empty.ttl>']], 'result': ['<agg-empty-group-max-2.srx>'], 'comment': {'rdfs:comment': '"aggregating empty results with no group-by always returns a single result."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:aggregate'}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-empty-group-max-2.rq>'], ['qt:data', '<empty.ttl>']]
		result = ['<agg-empty-group-max-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = agg-empty-group-count-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-empty-group-count-1.rq>'], ['qt:data', '<empty.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-empty-group-count-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"COUNT: no match, with group";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [['qt:query', '<agg-empty-group-count-1.rq>'], ['qt:data', '<empty.ttl>']], 'result': ['<agg-empty-group-count-1.srj>'], 'comment': {'rdfs:comment': '"counting no results with grouping returns no results."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-empty-group-count-1.rq>'], ['qt:data', '<empty.ttl>']]
		result = ['<agg-empty-group-count-1.srj>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_srj

		name = agg-empty-group-count-2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<agg-empty-group-count-2.rq>'], ['qt:data', '<empty.ttl>']]
			assigned_type_number = 3
		test = {'name': 'agg-empty-group-count-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"COUNT: no match, no group"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [['qt:query', '<agg-empty-group-count-2.rq>'], ['qt:data', '<empty.ttl>']], 'result': ['<agg-empty-group-count-2.srj>'], 'comment': {'rdfs:comment': '"counting no results without grouping always returns a single result."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Aggregates', 'manifest': 'sparql11/data-sparql11/aggregates/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/aggregates', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<agg-empty-group-count-2.rq>'], ['qt:data', '<empty.ttl>']]
		result = ['<agg-empty-group-count-2.srj>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_srj
Parsing sparql11/data-sparql11/aggregates/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/basic-update/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[13] == expected_tests [13] :: 
[parse_manifest] INFO: expected_tests[13] == tests__names [13] :: 

		name = insert-data-spo1
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-data-spo1', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple insert data 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<insert-data-spo1.ru>']], 'result': [['ut:result', 'ut:success'], ['data ', 'spo.ttl']], 'comment': {'rdfs:comment': '"This is a simple insert of a single triple to the unnamed graph of an empty graph store"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-data-spo1.ru>']]
		result = [['ut:result', 'ut:success'], ['data ', 'spo.ttl']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = insert-data-spo-named1
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-data-spo-named1', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple insert data named 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<insert-data-named1.ru>']], 'result': [['ut:result', 'ut:success'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a simple insert of a single triple into the named graph <http://example.org/g1> of an empty graph store"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-data-named1.ru>']]
		result = [['ut:result', 'ut:success'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = insert-data-spo-named2
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-data-spo-named2', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple insert data named 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<insert-data-named2.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:result', 'ut:success'], ['graphData', [['ut:graph', '<spo2.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a simple insert of a single triple into the named graph <http://example.org/g1> of a graph store consisting of an empty unnamed graph and the named graph holds one (different) triple already"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-data-named2.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:result', 'ut:success'], ['graphData', [['ut:graph', '<spo2.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = insert-data-spo-named3
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-data-spo-named3', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple insert data named 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<insert-data-named1.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:result', 'ut:success'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a simple insert of a single triple into the named graph <http://example.org/g1> of a graph store consisting of an empty unnamed graph and the named holds the inserted triple already (using the same query as insert-data-named1)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-data-named1.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:result', 'ut:success'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = insert-where-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-where-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"INSERT 01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<insert-01.ru>'], ['ut:data', '<insert-01-pre.ttl>']], 'result': [['data', 'insert-01-post.ttl']], 'comment': {'rdfs:comment': '"This is a INSERT over a dataset with a single triple in the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-01.ru>'], ['ut:data', '<insert-01-pre.ttl>']]
		result = [['data', 'insert-01-post.ttl']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = insert-where-02
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-where-02', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"INSERT 02"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<insert-02.ru>'], ['ut:data', '<insert-02-pre.ttl>']], 'result': [['data', 'insert-02-post.ttl'], ['graphData', [['ut:graph', '<insert-02-g1-post.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a INSERT over a dataset with a single triple in the default graph, inserting into a named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-02.ru>'], ['ut:data', '<insert-02-pre.ttl>']]
		result = [['data', 'insert-02-post.ttl'], ['graphData', [['ut:graph', '<insert-02-g1-post.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = insert-where-03
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-where-03', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"INSERT 03"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<insert-03.ru>'], ['ut:data', '<insert-03-pre.ttl>'], ['graphData', [['ut:graph', '<insert-03-g1-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['data', 'insert-03-post.ttl'], ['graphData', [['ut:graph', '<insert-03-g1-post.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a INSERT over a dataset with a single triple in a named graph, inserting into the named graph using the WITH keyword"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-03.ru>'], ['ut:data', '<insert-03-pre.ttl>'], ['graphData', [['ut:graph', '<insert-03-g1-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['data', 'insert-03-post.ttl'], ['graphData', [['ut:graph', '<insert-03-g1-post.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = insert-where-04
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-where-04', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"INSERT 04"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<insert-04.ru>'], ['ut:data', '<insert-04-pre.ttl>'], ['graphData', [['ut:graph', '<insert-04-g1-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['data', 'insert-04-post.ttl'], ['graphData', [['ut:graph', '<insert-04-g1-post.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a INSERT of a triple over a dataset with data in named graphs, inserting into the default graph using the USING keyword"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-04.ru>'], ['ut:data', '<insert-04-pre.ttl>'], ['graphData', [['ut:graph', '<insert-04-g1-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['data', 'insert-04-post.ttl'], ['graphData', [['ut:graph', '<insert-04-g1-post.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = insert-using-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-using-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"INSERT USING 01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<insert-using-01.ru>'], ['ut:data', '<insert-using-01-pre.ttl>'], ['graphData', [['ut:graph', '<insert-using-01-g1-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<insert-using-01-g2-pre.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['data', 'insert-using-01-post.ttl'], ['graphData', [['ut:graph', '<insert-using-01-g1-post.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<insert-using-01-g2-post.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"This is an INSERT into the default graph of two triples constructed from the data in two named graphs that are treated as the default graph during matching with the USING keyword."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-using-01.ru>'], ['ut:data', '<insert-using-01-pre.ttl>'], ['graphData', [['ut:graph', '<insert-using-01-g1-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<insert-using-01-g2-pre.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['data', 'insert-using-01-post.ttl'], ['graphData', [['ut:graph', '<insert-using-01-g1-post.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<insert-using-01-g2-post.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = insert-05a
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-05a', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"INSERT same bnode twice"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_3>'}, 'actions': [['ut:request', '<insert-05a.ru>'], ['graphData', [['ut:graph', '<insert-05a-g1-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['graphData', [['ut:graph', '<insert-05a-g3-post.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"As per http://lists.w3.org/Archives/Public/public-rdf-dawg/2012AprJun/0165.html"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-05a.ru>'], ['graphData', [['ut:graph', '<insert-05a-g1-pre.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['graphData', [['ut:graph', '<insert-05a-g3-post.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = insert-data-same-bnode
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-data-same-bnode', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"INSERTing the same bnode with INSERT DATA into two different Graphs is the same bnode"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_5>'}, 'actions': [['ut:request', '<insert-data-same-bnode.ru>']], 'result': [['graphData', [['ut:graph', '<insert-05a-g3-post.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"http://lists.w3.org/Archives/Public/public-rdf-dawg/2012JulSep/0196.html, this can be viewed as a variation of :insert-05a"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-data-same-bnode.ru>']]
		result = [['graphData', [['ut:graph', '<insert-05a-g3-post.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = insert-where-same-bnode
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-where-same-bnode', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"INSERTing the same bnode with two INSERT WHERE statement within one request is NOT the same bnode"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_5>'}, 'actions': [['ut:request', '<insert-where-same-bnode.ru>'], ['ut:data', '<insert-where-same-bnode-pre.ttl>']], 'result': [['data', 'insert-where-same-bnode-pre.ttl'], ['graphData', [['ut:graph', '<insert-where-same-bnode-g3-post.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"http://lists.w3.org/Archives/Public/public-rdf-dawg/2012OctDec/0001.html, this can be viewed as a further variation of :insert-05a"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-where-same-bnode.ru>'], ['ut:data', '<insert-where-same-bnode-pre.ttl>']]
		result = [['data', 'insert-where-same-bnode-pre.ttl'], ['graphData', [['ut:graph', '<insert-where-same-bnode-g3-post.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = insert-where-same-bnode2
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'insert-where-same-bnode2', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"INSERTing the same bnode with two INSERT WHERE statement within one request is NOT the same bnode even if both WHERE clauses have the empty solution mapping as the only solution."'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_5>'}, 'actions': [['ut:request', '<insert-where-same-bnode2.ru>'], ['ut:data', '<insert-where-same-bnode-pre.ttl>']], 'result': [['data', 'insert-where-same-bnode-pre.ttl'], ['graphData', [['ut:graph', '<insert-where-same-bnode-g3-post.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"http://lists.w3.org/Archives/Public/public-rdf-dawg/2012OctDec/0001.html, this can be viewed as a further variation of :insert-05a"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic Update', 'manifest': 'sparql11/data-sparql11/basic-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/basic-update', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<insert-where-same-bnode2.ru>'], ['ut:data', '<insert-where-same-bnode-pre.ttl>']]
		result = [['data', 'insert-where-same-bnode-pre.ttl'], ['graphData', [['ut:graph', '<insert-where-same-bnode-g3-post.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
Parsing sparql11/data-sparql11/basic-update/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/bind/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[10] == expected_tests [10] :: 
[parse_manifest] INFO: expected_tests[10] == tests__names [10] :: 

		name = bind01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bind01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind01 - BIND"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_2>'}, 'actions': [['qt:query', '<bind01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bind01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'BIND', 'manifest': 'sparql11/data-sparql11/bind/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bind', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bind01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bind02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind02 - BIND"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_2>'}, 'actions': [['qt:query', '<bind02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bind02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'BIND', 'manifest': 'sparql11/data-sparql11/bind/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bind', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bind02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind03.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bind03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind03 - BIND"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_2>'}, 'actions': [['qt:query', '<bind03.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bind03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'BIND', 'manifest': 'sparql11/data-sparql11/bind/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bind', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind03.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bind03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind04.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bind04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind04 - BIND"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_2>'}, 'actions': [['qt:query', '<bind04.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bind04.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'BIND', 'manifest': 'sparql11/data-sparql11/bind/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bind', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind04.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bind04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind05.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bind05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind05 - BIND"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_2>'}, 'actions': [['qt:query', '<bind05.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bind05.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'BIND', 'manifest': 'sparql11/data-sparql11/bind/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bind', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind05.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bind05.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind06.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bind06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind06 - BIND"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_2>'}, 'actions': [['qt:query', '<bind06.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bind06.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'BIND', 'manifest': 'sparql11/data-sparql11/bind/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bind', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind06.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bind06.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind07
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind07.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bind07', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind07 - BIND"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_2>'}, 'actions': [['qt:query', '<bind07.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bind07.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'BIND', 'manifest': 'sparql11/data-sparql11/bind/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bind', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind07.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bind07.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind08
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind08.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bind08', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind08 - BIND"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_2>'}, 'actions': [['qt:query', '<bind08.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bind08.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'BIND', 'manifest': 'sparql11/data-sparql11/bind/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bind', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind08.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bind08.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind10
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind10.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bind10', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind10 - BIND scoping - Variable in filter not in scope"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-12-06#resolution_2>'}, 'actions': [['qt:query', '<bind10.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bind10.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'BIND', 'manifest': 'sparql11/data-sparql11/bind/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bind', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind10.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bind10.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind11
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind11.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bind11', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind11 - BIND scoping - Variable in filter in scope"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-12-06#resolution_2>'}, 'actions': [['qt:query', '<bind11.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bind11.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'BIND', 'manifest': 'sparql11/data-sparql11/bind/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bind', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind11.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bind11.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-sparql11/bind/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/bindings/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[10] == expected_tests [10] :: 
[parse_manifest] INFO: expected_tests[10] == tests__names [10] :: 

		name = values1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<values01.rq>'], ['qt:data', '<data01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'values1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Post-query VALUES with subj-var, 1 row"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<values01.rq>'], ['qt:data', '<data01.ttl>']], 'result': ['<values01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': None, 'manifest': 'sparql11/data-sparql11/bindings/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bindings', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<values01.rq>'], ['qt:data', '<data01.ttl>']]
		result = ['<values01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = values2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<values02.rq>'], ['qt:data', '<data02.ttl>']]
			assigned_type_number = 3
		test = {'name': 'values2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Post-query VALUES with obj-var, 1 row"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<values02.rq>'], ['qt:data', '<data02.ttl>']], 'result': ['<values02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': None, 'manifest': 'sparql11/data-sparql11/bindings/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bindings', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<values02.rq>'], ['qt:data', '<data02.ttl>']]
		result = ['<values02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = values3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<values03.rq>'], ['qt:data', '<data03.ttl>']]
			assigned_type_number = 3
		test = {'name': 'values3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Post-query VALUES with 2 obj-vars, 1 row"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<values03.rq>'], ['qt:data', '<data03.ttl>']], 'result': ['<values03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': None, 'manifest': 'sparql11/data-sparql11/bindings/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bindings', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<values03.rq>'], ['qt:data', '<data03.ttl>']]
		result = ['<values03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = values4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<values04.rq>'], ['qt:data', '<data04.ttl>']]
			assigned_type_number = 3
		test = {'name': 'values4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Post-query VALUES with 2 obj-vars, 1 row with UNDEF"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<values04.rq>'], ['qt:data', '<data04.ttl>']], 'result': ['<values04.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': None, 'manifest': 'sparql11/data-sparql11/bindings/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bindings', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<values04.rq>'], ['qt:data', '<data04.ttl>']]
		result = ['<values04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = values5
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<values05.rq>'], ['qt:data', '<data05.ttl>']]
			assigned_type_number = 3
		test = {'name': 'values5', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Post-query VALUES with 2 obj-vars, 2 rows with UNDEF"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<values05.rq>'], ['qt:data', '<data05.ttl>']], 'result': ['<values05.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': None, 'manifest': 'sparql11/data-sparql11/bindings/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bindings', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<values05.rq>'], ['qt:data', '<data05.ttl>']]
		result = ['<values05.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = values6
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<values06.rq>'], ['qt:data', '<data06.ttl>']]
			assigned_type_number = 3
		test = {'name': 'values6', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Post-query VALUES with pred-var, 1 row"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<values06.rq>'], ['qt:data', '<data06.ttl>']], 'result': ['<values06.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': None, 'manifest': 'sparql11/data-sparql11/bindings/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bindings', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<values06.rq>'], ['qt:data', '<data06.ttl>']]
		result = ['<values06.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = values7
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<values07.rq>'], ['qt:data', '<data07.ttl>']]
			assigned_type_number = 3
		test = {'name': 'values7', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Post-query VALUES with (OPTIONAL) obj-var, 1 row"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-05-24#resolution_4>'}, 'actions': [['qt:query', '<values07.rq>'], ['qt:data', '<data07.ttl>']], 'result': ['<values07.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': None, 'manifest': 'sparql11/data-sparql11/bindings/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bindings', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<values07.rq>'], ['qt:data', '<data07.ttl>']]
		result = ['<values07.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = values8
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<values08.rq>'], ['qt:data', '<data08.ttl>']]
			assigned_type_number = 3
		test = {'name': 'values8', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Post-query VALUES with subj/obj-vars, 2 rows with UNDEF"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<values08.rq>'], ['qt:data', '<data08.ttl>']], 'result': ['<values08.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': None, 'manifest': 'sparql11/data-sparql11/bindings/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bindings', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<values08.rq>'], ['qt:data', '<data08.ttl>']]
		result = ['<values08.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = inline1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<inline01.rq>'], ['qt:data', '<data01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'inline1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Inline VALUES graph pattern"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<inline01.rq>'], ['qt:data', '<data01.ttl>']], 'result': ['<inline01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': None, 'manifest': 'sparql11/data-sparql11/bindings/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bindings', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<inline01.rq>'], ['qt:data', '<data01.ttl>']]
		result = ['<inline01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = inline2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<inline02.rq>'], ['qt:data', '<data02.ttl>']]
			assigned_type_number = 3
		test = {'name': 'inline2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Post-subquery VALUES"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<inline02.rq>'], ['qt:data', '<data02.ttl>']], 'result': ['<inline02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': None, 'manifest': 'sparql11/data-sparql11/bindings/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/bindings', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<inline02.rq>'], ['qt:data', '<data02.ttl>']]
		result = ['<inline02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-sparql11/bindings/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/cast/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[6] == expected_tests [6] :: 
[parse_manifest] INFO: expected_tests[6] == tests__names [6] :: 

		name = cast-bool
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-bool.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-bool', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"xsd:boolean cast"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<cast-bool.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-bool.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-sparql11/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/cast', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<cast-bool.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-bool.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = cast-int
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-int.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-int', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"xsd:integer cast"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<cast-int.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-int.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-sparql11/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/cast', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<cast-int.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-int.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = cast-float
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-float.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-float', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"xsd:float cast"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<cast-float.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-float.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-sparql11/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/cast', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<cast-float.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-float.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = cast-double
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-double.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-double', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"xsd:double cast"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<cast-double.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-double.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-sparql11/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/cast', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<cast-double.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-double.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = cast-decimal
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-decimal.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-decimal', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"xsd:decimal cast"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<cast-decimal.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-decimal.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-sparql11/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/cast', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<cast-decimal.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-decimal.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = cast-string
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<cast-string.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'cast-string', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"xsd:string cast"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<cast-string.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-string.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-sparql11/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/cast', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<cast-string.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<cast-string.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-sparql11/cast/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/clear/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[4] == expected_tests [4] :: 
[parse_manifest] INFO: expected_tests[4] == tests__names [4] :: 

		name = dawg-clear-default-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-clear-default-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"CLEAR DEFAULT"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<clear-default-01.ru>'], ['ut:data', '<clear-default.ttl>'], ['graphData', [['ut:graph', '<clear-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['data', 'empty.ttl'], ['graphData', [['ut:graph', '<clear-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"This is a CLEAR of the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CLEAR', 'manifest': 'sparql11/data-sparql11/clear/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/clear', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<clear-default-01.ru>'], ['ut:data', '<clear-default.ttl>'], ['graphData', [['ut:graph', '<clear-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['data', 'empty.ttl'], ['graphData', [['ut:graph', '<clear-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-clear-graph-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-clear-graph-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"CLEAR GRAPH"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<clear-graph-01.ru>'], ['ut:data', '<clear-default.ttl>'], ['graphData', [['ut:graph', '<clear-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['data', 'clear-default.ttl'], ['graphData', [['ut:graph', '<empty.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"This is a CLEAR of an existing named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CLEAR', 'manifest': 'sparql11/data-sparql11/clear/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/clear', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<clear-graph-01.ru>'], ['ut:data', '<clear-default.ttl>'], ['graphData', [['ut:graph', '<clear-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['data', 'clear-default.ttl'], ['graphData', [['ut:graph', '<empty.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-clear-named-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-clear-named-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"CLEAR NAMED"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<clear-named-01.ru>'], ['ut:data', '<clear-default.ttl>'], ['graphData', [['ut:graph', '<clear-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['data', 'clear-default.ttl'], ['graphData', [['ut:graph', '<empty.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<empty.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"This is a CLEAR of all the named graphs"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CLEAR', 'manifest': 'sparql11/data-sparql11/clear/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/clear', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<clear-named-01.ru>'], ['ut:data', '<clear-default.ttl>'], ['graphData', [['ut:graph', '<clear-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['data', 'clear-default.ttl'], ['graphData', [['ut:graph', '<empty.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<empty.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-clear-all-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-clear-all-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"CLEAR ALL"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<clear-all-01.ru>'], ['ut:data', '<clear-default.ttl>'], ['graphData', [['ut:graph', '<clear-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['data', 'empty.ttl'], ['graphData', [['ut:graph', '<empty.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<empty.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"This is a CLEAR of all graphs (default and named)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CLEAR', 'manifest': 'sparql11/data-sparql11/clear/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/clear', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<clear-all-01.ru>'], ['ut:data', '<clear-default.ttl>'], ['graphData', [['ut:graph', '<clear-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<clear-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['data', 'empty.ttl'], ['graphData', [['ut:graph', '<empty.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<empty.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
Parsing sparql11/data-sparql11/clear/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/construct/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[6] == expected_tests [6] :: 
[parse_manifest] INFO: expected_tests[6] == tests__names [6] :: 

		name = constructwhere01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<constructwhere01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'constructwhere01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"constructwhere01 - CONSTRUCT WHERE"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_3>'}, 'actions': [['qt:query', '<constructwhere01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<constructwhere01result.ttl>'], 'comment': {'rdfs:comment': '"CONSTRUCT WHERE { ?S ?P ?O }";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-sparql11/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/construct', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<constructwhere01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<constructwhere01result.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = constructwhere02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<constructwhere02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'constructwhere02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"constructwhere02 - CONSTRUCT WHERE"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_3>'}, 'actions': [['qt:query', '<constructwhere02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<constructwhere02result.ttl>'], 'comment': {'rdfs:comment': '"CONSTRUCT WHERE with join";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-sparql11/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/construct', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<constructwhere02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<constructwhere02result.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = constructwhere03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<constructwhere03.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'constructwhere03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"constructwhere03 - CONSTRUCT WHERE"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_3>'}, 'actions': [['qt:query', '<constructwhere03.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<constructwhere03result.ttl>'], 'comment': {'rdfs:comment': '"CONSTRUCT WHERE with join, using shortcut notation";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-sparql11/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/construct', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<constructwhere03.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<constructwhere03result.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = constructwhere04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<constructwhere04.rq>'], ['qt:graphData', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'constructwhere04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"constructwhere04 - CONSTRUCT WHERE"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_3>'}, 'actions': [['qt:query', '<constructwhere04.rq>'], ['qt:graphData', '<data.ttl>']], 'result': ['<constructwhere04result.ttl>'], 'comment': {'rdfs:comment': '"CONSTRUCT WHERE with DatasetClause";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-sparql11/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/construct', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<constructwhere04.rq>'], ['qt:graphData', '<data.ttl>']]
		result = ['<constructwhere04result.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = constructwhere05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'constructwhere05', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"constructwhere05 - CONSTRUCT WHERE"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_3>'}, 'actions': [['mf:action', '<constructwhere05.rq>']], 'result': [], 'comment': {'rdfs:comment': '"CONSTRUCT WHERE with FILTER";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-sparql11/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/construct', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<constructwhere05.rq>']]
		result = []

		name = constructwhere06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'constructwhere06', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"constructwhere06 - CONSTRUCT WHERE"'}, 'seeAlso': None, 'mf_description': {'mf:description': '"CONSTRUCT WHERE with GRAPH";'}, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-02-01#resolution_3>'}, 'actions': [['mf:action', '<constructwhere06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-sparql11/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/construct', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<constructwhere06.rq>']]
		result = []
Parsing sparql11/data-sparql11/construct/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/copy/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[6] == expected_tests [6] :: 
[parse_manifest] INFO: expected_tests[6] == tests__names [6] :: 

		name = copy01
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'copy01', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"COPY 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<copy-01.ru>'], ['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-default.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Copy the default graph to an existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Copy', 'manifest': 'sparql11/data-sparql11/copy/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/copy', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<copy-01.ru>'], ['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-default.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = copy02
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'copy02', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"COPY 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<copy-01.ru>'], ['ut:data', '<copy-default.ttl>']], 'result': [['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-default.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Copy the default graph to a non-existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Copy', 'manifest': 'sparql11/data-sparql11/copy/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/copy', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<copy-01.ru>'], ['ut:data', '<copy-default.ttl>']]
		result = [['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-default.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = copy03
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'copy03', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"COPY 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<copy-03.ru>'], ['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<copy-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"Copy a named graph to an existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Copy', 'manifest': 'sparql11/data-sparql11/copy/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/copy', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<copy-03.ru>'], ['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<copy-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = copy04
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'copy04', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"COPY 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<copy-03.ru>'], ['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"Copy a named graph to a non-existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Copy', 'manifest': 'sparql11/data-sparql11/copy/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/copy', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<copy-03.ru>'], ['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = copy06
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'copy06', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"COPY 6"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<copy-06.ru>'], ['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<copy-01.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Copy an existing graph to the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Copy', 'manifest': 'sparql11/data-sparql11/copy/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/copy', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<copy-06.ru>'], ['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<copy-01.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = copy07
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'copy07', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"COPY 7"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<copy-07.ru>'], ['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Copy a graph to itself"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Copy', 'manifest': 'sparql11/data-sparql11/copy/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/copy', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<copy-07.ru>'], ['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<copy-default.ttl>'], ['graphData', [['ut:graph', '<copy-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
Parsing sparql11/data-sparql11/copy/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/csv-tsv-res/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[6] == expected_tests [6] :: 
[parse_manifest] INFO: expected_tests[6] == tests__names [6] :: 

		name = csv01
		type = {'rdf:type': 'mf:CSVResultFormatTest'}
			assigned_type_number = 5
		test = {'name': 'csv01', 'type': {'rdf:type': 'mf:CSVResultFormatTest'}, 'mf_name': {'mf:name': '"csv01 - CSV Result Format"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-08-16#resolution_3>;'}, 'actions': [['qt:query', '<csvtsv01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<csvtsv01.csv>'], 'comment': {'rdfs:comment': '"SELECT * WHERE { ?S ?P ?O }";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CSV/TSV Result Format', 'manifest': 'sparql11/data-sparql11/csv-tsv-res/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/csv-tsv-res', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<csvtsv01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<csvtsv01.csv>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_csv

		name = csv02
		type = {'rdf:type': 'mf:CSVResultFormatTest'}
			assigned_type_number = 5
		test = {'name': 'csv02', 'type': {'rdf:type': 'mf:CSVResultFormatTest'}, 'mf_name': {'mf:name': '"cvs02 - CSV Result Format"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-08-16#resolution_3>;'}, 'actions': [['qt:query', '<csvtsv02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<csvtsv02.csv>'], 'comment': {'rdfs:comment': '"SELECT with OPTIONAL (i.e. not all vars bound in all results)";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CSV/TSV Result Format', 'manifest': 'sparql11/data-sparql11/csv-tsv-res/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/csv-tsv-res', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<csvtsv02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<csvtsv02.csv>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_csv

		name = csv03
		type = {'rdf:type': 'mf:CSVResultFormatTest'}
			assigned_type_number = 5
		test = {'name': 'csv03', 'type': {'rdf:type': 'mf:CSVResultFormatTest'}, 'mf_name': {'mf:name': '"csv03 - CSV Result Format"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-08-16#resolution_3>;'}, 'actions': [['qt:query', '<csvtsv01.rq>'], ['qt:data', '<data2.ttl>']], 'result': ['<csvtsv03.csv>'], 'comment': {'rdfs:comment': '"SELECT * WHERE { ?S ?P ?O } with some corner cases of typed literals";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CSV/TSV Result Format', 'manifest': 'sparql11/data-sparql11/csv-tsv-res/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/csv-tsv-res', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<csvtsv01.rq>'], ['qt:data', '<data2.ttl>']]
		result = ['<csvtsv03.csv>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_csv

		name = tsv01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<csvtsv01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'tsv01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tsv01 - TSV Result Format"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-08-16#resolution_3>;'}, 'actions': [['qt:query', '<csvtsv01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<csvtsv01.tsv>'], 'comment': {'rdfs:comment': '"SELECT * WHERE { ?S ?P ?O }";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CSV/TSV Result Format', 'manifest': 'sparql11/data-sparql11/csv-tsv-res/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/csv-tsv-res', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<csvtsv01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<csvtsv01.tsv>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_tsv

		name = tsv02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<csvtsv02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'tsv02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tvs02 - TSV Result Format"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-08-16#resolution_3>;'}, 'actions': [['qt:query', '<csvtsv02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<csvtsv02.tsv>'], 'comment': {'rdfs:comment': '"SELECT with OPTIONAL (i.e. not all vars bound in all results)";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CSV/TSV Result Format', 'manifest': 'sparql11/data-sparql11/csv-tsv-res/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/csv-tsv-res', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<csvtsv02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<csvtsv02.tsv>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_tsv

		name = tsv03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<csvtsv01.rq>'], ['qt:data', '<data2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'tsv03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"tsv03 - TSV Result Format"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-08-16#resolution_3>;'}, 'actions': [['qt:query', '<csvtsv01.rq>'], ['qt:data', '<data2.ttl>']], 'result': ['<csvtsv03.tsv>'], 'comment': {'rdfs:comment': '"SELECT * WHERE { ?S ?P ?O } with some corner cases of typed literals";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CSV/TSV Result Format', 'manifest': 'sparql11/data-sparql11/csv-tsv-res/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/csv-tsv-res', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<csvtsv01.rq>'], ['qt:data', '<data2.ttl>']]
		result = ['<csvtsv03.tsv>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_tsv
Parsing sparql11/data-sparql11/csv-tsv-res/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/delete/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[19] == expected_tests [19] :: 
[parse_manifest] INFO: expected_tests[19] == tests__names [19] :: 

		name = dawg-delete-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-01.ru>'], ['ut:data', '<delete-pre-01.ttl>']], 'result': [['ut:data', '<delete-post-01s.ttl>']], 'comment': {'rdfs:comment': '"This is a simple delete of an existing triple from the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-01.ru>'], ['ut:data', '<delete-pre-01.ttl>']]
		result = [['ut:data', '<delete-post-01s.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-02
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-02', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-02.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['graphData', [['ut:graph', '<delete-post-01s.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a simple delete of an existing triple from a named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-02.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['graphData', [['ut:graph', '<delete-post-01s.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-03
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-03', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-03.ru>'], ['ut:data', '<delete-pre-01.ttl>']], 'result': [['ut:data', '<delete-post-01f.ttl>']], 'comment': {'rdfs:comment': '"This is a simple delete of a non-existing triple from the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-03.ru>'], ['ut:data', '<delete-pre-01.ttl>']]
		result = [['ut:data', '<delete-post-01f.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-04
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-04', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-04.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a simple delete of a non-existing triple from a named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-04.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-05
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-05', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Graph-specific DELETE 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-05.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['ut:data', '<delete-post-01s.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"Test 1 for DELETE only modifying the desired graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-05.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['ut:data', '<delete-post-01s.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-06
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-06', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Graph-specific DELETE 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-06.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02s.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"Test 2 for DELETE only modifying the desired graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-06.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02s.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-07
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-07', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 7"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-07.ru>'], ['ut:data', '<delete-pre-01.ttl>']], 'result': [['ut:data', '<delete-post-01f.ttl>']], 'comment': {'rdfs:comment': '"This is a simple delete to test that unbound variables in the DELETE clause do not act as wildcards"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-07.ru>'], ['ut:data', '<delete-pre-01.ttl>']]
		result = [['ut:data', '<delete-post-01f.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-with-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-with-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 1 (WITH)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-with-01.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['graphData', [['ut:graph', '<delete-post-01s.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a simple delete using a WITH clause to identify the active graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-with-01.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['graphData', [['ut:graph', '<delete-post-01s.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-with-02
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-with-02', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 2 (WITH)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-with-02.ru>'], ['ut:graphData', '[ut:graph'], ['rdfs:label', '"http://example.org/g1"'], ['ut:graphData', '[ut:graph'], ['rdfs:label', '"http://example.org/g2"']], 'result': [['graphData', [['ut:graph', '<delete-post-01s.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"This is a simple test to make sure the GRAPH clause overrides the WITH clause"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-with-02.ru>'], ['ut:graphData', '[ut:graph'], ['rdfs:label', '"http://example.org/g1"'], ['ut:graphData', '[ut:graph'], ['rdfs:label', '"http://example.org/g2"']]
		result = [['graphData', [['ut:graph', '<delete-post-01s.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-with-03
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-with-03', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 3 (WITH)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-with-03.ru>'], ['ut:graphData', '[ut:graph'], ['rdfs:label', '"http://example.org/g1"']], 'result': [['ut:result', 'ut:success'], ['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a simple delete of a non-existing triple using a WITH clause to identify the active graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-with-03.ru>'], ['ut:graphData', '[ut:graph'], ['rdfs:label', '"http://example.org/g1"']]
		result = [['ut:result', 'ut:success'], ['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-with-04
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-with-04', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 4 (WITH)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-with-04.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"This is a simple delete of a non-existing triple making sure that the GRAPH clause overrides the WITH clause"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-with-04.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-with-05
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-with-05', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Graph-specific DELETE 1 (WITH)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-with-05.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['graphData', [['ut:graph', '<delete-post-01s2.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"Test 1 for DELETE only modifying the desired graph using a WITH clause to specify the active graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-with-05.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['graphData', [['ut:graph', '<delete-post-01s2.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-with-06
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-with-06', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Graph-specific DELETE 2 (WITH)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-with-06.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02s.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"Test 2 for DELETE only modifying the desired graph making sure the GRAPH clause overrides the WITH clause"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-with-06.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02s.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-using-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-using-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 1 (USING)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-using-01.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['ut:data', '<delete-post-01s.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"This is a simple delete using a USING clause to identify the active graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-using-01.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['ut:data', '<delete-post-01s.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-using-02a
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-using-02a', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 2 (USING)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-09-25#resolution_3>'}, 'actions': [['ut:request', '<delete-using-02.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"This is a simple test to make sure the GRAPH clause does not override the USING clause"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-using-02.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-using-03
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-using-03', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 3 (USING)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-using-03.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"This is a simple delete of a non-existing triple using a USING clause to identify the active graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-using-03.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-using-04
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-using-04', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE 4 (USING)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-using-04.ru>'], ['ut:data', '<delete-pre-03.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['ut:data', '<delete-post-03f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"This is a simple delete of a non-existing triple making sure that the GRAPH clause overrides the USING clause"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-using-04.ru>'], ['ut:data', '<delete-pre-03.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['ut:data', '<delete-post-03f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-using-05
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-using-05', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Graph-specific DELETE 1 (USING)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-using-05.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['graphData', [['ut:graph', '<delete-post-01s2.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"Test 1 for DELETE only modifying the desired graph using a USING clause to specify the active graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-using-05.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['graphData', [['ut:graph', '<delete-post-01s2.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-using-06a
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-using-06a', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Graph-specific DELETE 2 (USING)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-09-25#resolution_3>'}, 'actions': [['ut:request', '<delete-using-06.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"Test 2 for DELETE only modifying the desired graph making sure the GRAPH clause does not override the USING clause"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE', 'manifest': 'sparql11/data-sparql11/delete/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-using-06.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
Parsing sparql11/data-sparql11/delete/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/delete-data/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[6] == expected_tests [6] :: 
[parse_manifest] INFO: expected_tests[6] == tests__names [6] :: 

		name = dawg-delete-data-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-data-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE DATA 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-data-01.ru>'], ['ut:data', '<delete-pre-01.ttl>']], 'result': [['ut:data', '<delete-post-01s.ttl>']], 'comment': {'rdfs:comment': '"This is a simple delete of an existing triple from the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE DATA', 'manifest': 'sparql11/data-sparql11/delete-data/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-data', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-data-01.ru>'], ['ut:data', '<delete-pre-01.ttl>']]
		result = [['ut:data', '<delete-post-01s.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-data-02
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-data-02', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE DATA 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-data-02.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['graphData', [['ut:graph', '<delete-post-01s.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a simple delete of an existing triple from a named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE DATA', 'manifest': 'sparql11/data-sparql11/delete-data/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-data', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-data-02.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['graphData', [['ut:graph', '<delete-post-01s.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-data-03
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-data-03', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE DATA 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-data-03.ru>'], ['ut:data', '<delete-pre-01.ttl>']], 'result': [['ut:data', '<delete-post-01f.ttl>']], 'comment': {'rdfs:comment': '"This is a simple delete of a non-existing triple from the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE DATA', 'manifest': 'sparql11/data-sparql11/delete-data/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-data', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-data-03.ru>'], ['ut:data', '<delete-pre-01.ttl>']]
		result = [['ut:data', '<delete-post-01f.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-data-04
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-data-04', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE DATA 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-data-04.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a simple delete of a non-existing triple from a named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE DATA', 'manifest': 'sparql11/data-sparql11/delete-data/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-data', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-data-04.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-data-05
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-data-05', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Graph-specific DELETE DATA 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-data-05.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['ut:data', '<delete-post-01s.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"Test 1 for DELETE DATA only modifying the desired graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE DATA', 'manifest': 'sparql11/data-sparql11/delete-data/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-data', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-data-05.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['ut:data', '<delete-post-01s.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-data-06
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-data-06', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Graph-specific DELETE DATA 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-data-06.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02s.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"Test 2 for DELETE DATA only modifying the desired graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE DATA', 'manifest': 'sparql11/data-sparql11/delete-data/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-data', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-data-06.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02s.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
Parsing sparql11/data-sparql11/delete-data/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/delete-insert/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[16] == expected_tests [16] :: 
[parse_manifest] INFO: expected_tests[16] == tests__names [16] :: 

		name = dawg-delete-insert-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-insert-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DELETE INSERT 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-insert-01.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']], 'result': [['ut:data', '<delete-insert-post-01.ttl>']], 'comment': {'rdfs:comment': '"This update request reverts all foaf:knows relations"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-insert-01.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']]
		result = [['ut:data', '<delete-insert-post-01.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-insert-01b
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-insert-01b', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DELETE INSERT 1b"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-insert-01b.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']], 'result': [['ut:data', '<delete-insert-post-01b.ttl>']], 'comment': {'rdfs:comment': '"This test case, as a variant of dawg-delete-insert-01, shoes that DELETE followed by INSERT is different from DELETE INSERT in a single operation"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-insert-01b.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']]
		result = [['ut:data', '<delete-insert-post-01b.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-insert-01c
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-insert-01c', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DELETE INSERT 1c"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-insert-01c.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']], 'result': [['ut:data', '<delete-insert-post-01b.ttl>']], 'comment': {'rdfs:comment': '"This test case, as a variant of dawg-delete-insert-01, shoes that INSERT followed by DELETE is different from DELETE INSERT in a single operation."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-insert-01c.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']]
		result = [['ut:data', '<delete-insert-post-01b.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-insert-02
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-insert-02', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DELETE INSERT 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-insert-02.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']], 'result': [['ut:data', '<delete-insert-post-02.ttl>']], 'comment': {'rdfs:comment': '"This deletes all foaf:knows relations from anyone named \'Alan\'."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-insert-02.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']]
		result = [['ut:data', '<delete-insert-post-02.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-insert-03
		 »» Empty result-test ««
		type = {'a': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'dawg-delete-insert-03', 'type': {'a': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"DELETE INSERT 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['mf:action', '<delete-insert-03.ru>']], 'result': [], 'comment': {'rdfs:comment': '"This deletes all foaf:knows relations from anyone named \'Alan\' using an unnamed bnode as wildcard"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<delete-insert-03.ru>']]
		result = []

		name = dawg-delete-insert-03b
		 »» Empty result-test ««
		type = {'a': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'dawg-delete-insert-03b', 'type': {'a': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"DELETE INSERT 3b"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['mf:action', '<delete-insert-03b.ru>']], 'result': [], 'comment': {'rdfs:comment': '"This deletes all foaf:knows relations from anyone named \'Alan\' using a named bnode as wildcard"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<delete-insert-03b.ru>']]
		result = []

		name = dawg-delete-insert-04
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-insert-04', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DELETE INSERT 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-insert-04.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']], 'result': [['ut:data', '<delete-insert-post-02.ttl>']], 'comment': {'rdfs:comment': '"This deletes all foaf:knows relations from anyone named \'Alan\' using a naive rewriting, as suggested in http://lists.w3.org/Archives/Public/public-rdf-dawg/2011JanMar/0305.html"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-insert-04.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']]
		result = [['ut:data', '<delete-insert-post-02.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-insert-04b
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-insert-04b', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DELETE INSERT 4b"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-insert-04b.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']], 'result': [['ut:data', '<delete-insert-post-02.ttl>']], 'comment': {'rdfs:comment': '"This deletes all foaf:knows relations from anyone named \'Alan\' using a simpler rewriting than dawg-delete-insert-04"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-insert-04b.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']]
		result = [['ut:data', '<delete-insert-post-02.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-insert-05
		 »» Empty result-test ««
		type = {'a': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'dawg-delete-insert-05', 'type': {'a': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"DELETE INSERT 5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['mf:action', '<delete-insert-05.ru>']], 'result': [], 'comment': {'rdfs:comment': '"This deletes all foaf:knows relations from anyone named \'Alan\' and inserts that all \'Alans\' know themselves only."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<delete-insert-05.ru>']]
		result = []

		name = dawg-delete-insert-05b
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-insert-05b', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DELETE INSERT 5b"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-insert-05b.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']], 'result': [['ut:data', '<delete-insert-post-05.ttl>']], 'comment': {'rdfs:comment': '"This deletes all foaf:knows relations from anyone named \'Alan\' and inserts that all \'Alans\' know themselves only, using a rewriting analogous to :dawg-delete-insert-04b"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-insert-05b.ru>'], ['ut:data', '<delete-insert-pre-01.ttl>']]
		result = [['ut:data', '<delete-insert-post-05.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-insert-06
		 »» Empty result-test ««
		type = {'a': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'dawg-delete-insert-06', 'type': {'a': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"DELETE INSERT 6"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['mf:action', '<delete-insert-05.ru>']], 'result': [], 'comment': {'rdfs:comment': '"dawg-delete-insert-06 and dawg-delete-insert-06b show that the rewriting in dawg-delete-insert-05b.ru isn\'t equivalent to dawg-delete-insert-05.ru in case Alan doesn\'t know anybody."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<delete-insert-05.ru>']]
		result = []

		name = dawg-delete-insert-06b
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-insert-06b', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DELETE INSERT 6b"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-insert-05b.ru>'], ['ut:data', '<delete-insert-pre-06.ttl>']], 'result': [['ut:data', '<delete-insert-pre-06.ttl>']], 'comment': {'rdfs:comment': '"dawg-delete-insert-06 and dawg-delete-insert-06b show that the rewriting in dawg-delete-insert-05b.ru isn\'t equivalent to dawg-delete-insert-05.ru in case Alan doesn\'t know anybody."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-insert-05b.ru>'], ['ut:data', '<delete-insert-pre-06.ttl>']]
		result = [['ut:data', '<delete-insert-pre-06.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-insert-07
		 »» Empty result-test ««
		type = {'a': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'dawg-delete-insert-07', 'type': {'a': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"DELETE INSERT 7"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['mf:action', '<delete-insert-07.ru>']], 'result': [], 'comment': {'rdfs:comment': '"This deletes all foaf:knows relations from anyone named \'Alan\' and inserts a single foaf:knows triple with a blank node as object for \'Alan\'. This shows the different behavior of bnodes in INSERT (similar to CONSTRUCT) and DELETE (bnodes act as wildcards) templates."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<delete-insert-07.ru>']]
		result = []

		name = dawg-delete-insert-07b
		 »» Empty result-test ««
		type = {'a': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'dawg-delete-insert-07b', 'type': {'a': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"DELETE INSERT 7b"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['mf:action', '<delete-insert-07b.ru>']], 'result': [], 'comment': {'rdfs:comment': '"This deletes all foaf:knows relations from anyone named \'Alan\' and replaces them by bnodes. This shows the different behavior of bnodes in INSERT (similar to CONSTRUCT) and DELETE (bnodes act as wildcards) templates. As opposed to test case dawg-delete-insert-7, note that the result graph in this example is non-lean."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<delete-insert-07b.ru>']]
		result = []

		name = dawg-delete-insert-08
		 »» Empty result-test ««
		type = {'a': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'dawg-delete-insert-08', 'type': {'a': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"DELETE INSERT 8"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['mf:action', '<delete-insert-08.ru>']], 'result': [], 'comment': {'rdfs:comment': '"This DELETE test was first brought up in http://lists.w3.org/Archives/Public/public-rdf-dawg/2011JanMar/0290.html. It demonstrates how unbound variables (from an OPTIONAL) are handled in DELETE templates"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<delete-insert-08.ru>']]
		result = []

		name = dawg-delete-insert-09
		 »» Empty result-test ««
		type = {'a': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'dawg-delete-insert-09', 'type': {'a': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"DELETE INSERT 9"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['mf:action', '<delete-insert-09.ru>']], 'result': [], 'comment': {'rdfs:comment': '"This DELETE test was first brought up in http://lists.w3.org/Archives/Public/public-rdf-dawg/2011JanMar/0317.html. It demonstrates the behavior of shared bnodes in a DELETE template."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE INSERT', 'manifest': 'sparql11/data-sparql11/delete-insert/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-insert', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<delete-insert-09.ru>']]
		result = []
Parsing sparql11/data-sparql11/delete-insert/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/delete-where/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[6] == expected_tests [6] :: 
[parse_manifest] INFO: expected_tests[6] == tests__names [6] :: 

		name = dawg-delete-where-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-where-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE WHERE 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-where-01.ru>'], ['ut:data', '<delete-pre-01.ttl>']], 'result': [['ut:data', '<delete-post-01s.ttl>']], 'comment': {'rdfs:comment': '"This is a simple delete of an existing triple from the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE WHERE', 'manifest': 'sparql11/data-sparql11/delete-where/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-where', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-where-01.ru>'], ['ut:data', '<delete-pre-01.ttl>']]
		result = [['ut:data', '<delete-post-01s.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-where-02
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-where-02', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE WHERE 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-where-02.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['graphData', [['ut:graph', '<delete-post-01s.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a simple delete of an existing triple from a named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE WHERE', 'manifest': 'sparql11/data-sparql11/delete-where/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-where', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-where-02.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['graphData', [['ut:graph', '<delete-post-01s.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-where-03
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-where-03', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE WHERE 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-where-03.ru>'], ['ut:data', '<delete-pre-01.ttl>']], 'result': [['ut:data', '<delete-post-01f.ttl>']], 'comment': {'rdfs:comment': '"This is a simple delete of a non-existing triple from the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE WHERE', 'manifest': 'sparql11/data-sparql11/delete-where/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-where', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-where-03.ru>'], ['ut:data', '<delete-pre-01.ttl>']]
		result = [['ut:data', '<delete-post-01f.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-delete-where-04
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-where-04', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Simple DELETE WHERE 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-where-04.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"This is a simple delete of a non-existing triple from a named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE WHERE', 'manifest': 'sparql11/data-sparql11/delete-where/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-where', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-where-04.ru>'], ['graphData', [['ut:graph', '<delete-pre-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['graphData', [['ut:graph', '<delete-post-01f.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-where-05
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-where-05', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Graph-specific DELETE WHERE 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-where-05.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['ut:data', '<delete-post-01s.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"Test 1 for DELETE WHERE only modifying the desired graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE WHERE', 'manifest': 'sparql11/data-sparql11/delete-where/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-where', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-where-05.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['ut:data', '<delete-post-01s.ttl>'], ['graphData', [['ut:graph', '<delete-post-02f.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-delete-where-06
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-delete-where-06', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"Graph-specific DELETE WHERE 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<delete-where-06.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'result': [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02s.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]], 'comment': {'rdfs:comment': '"Test 2 for DELETE WHERE only modifying the desired graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DELETE WHERE', 'manifest': 'sparql11/data-sparql11/delete-where/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/delete-where', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<delete-where-06.ru>'], ['ut:data', '<delete-pre-01.ttl>'], ['graphData', [['ut:graph', '<delete-pre-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-pre-03.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
		result = [['ut:data', '<delete-post-01f.ttl>'], ['graphData', [['ut:graph', '<delete-post-02s.ttl>'], ['rdfs:label', '"http://example.org/g2"']]], ['graphData', [['ut:graph', '<delete-post-03f.ttl>'], ['rdfs:label', '"http://example.org/g3"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
Parsing sparql11/data-sparql11/delete-where/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/drop/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[4] == expected_tests [4] :: 
[parse_manifest] INFO: expected_tests[4] == tests__names [4] :: 

		name = dawg-drop-default-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-drop-default-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DROP DEFAULT"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<drop-default-01.ru>'], ['ut:data', '<drop-default.ttl>'], ['graphData', [['ut:graph', '<drop-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['graphData', [['ut:graph', '<drop-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"This is a DROP of the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DROP', 'manifest': 'sparql11/data-sparql11/drop/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/drop', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<drop-default-01.ru>'], ['ut:data', '<drop-default.ttl>'], ['graphData', [['ut:graph', '<drop-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['graphData', [['ut:graph', '<drop-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-drop-graph-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-drop-graph-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DROP GRAPH"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<drop-graph-01.ru>'], ['ut:data', '<drop-default.ttl>'], ['graphData', [['ut:graph', '<drop-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['data', 'drop-default.ttl'], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"This is a DROP of an existing named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DROP', 'manifest': 'sparql11/data-sparql11/drop/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/drop', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<drop-graph-01.ru>'], ['ut:data', '<drop-default.ttl>'], ['graphData', [['ut:graph', '<drop-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['data', 'drop-default.ttl'], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = dawg-drop-named-01
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-drop-named-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DROP NAMED"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<drop-named-01.ru>'], ['ut:data', '<drop-default.ttl>'], ['graphData', [['ut:graph', '<drop-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['data', 'drop-default.ttl']], 'comment': {'rdfs:comment': '"This is a DROP of all the named graphs"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DROP', 'manifest': 'sparql11/data-sparql11/drop/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/drop', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<drop-named-01.ru>'], ['ut:data', '<drop-default.ttl>'], ['graphData', [['ut:graph', '<drop-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['data', 'drop-default.ttl']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = dawg-drop-all-01
		 »» Empty result-test ««
		type = {'a': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'dawg-drop-all-01', 'type': {'a': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DROP ALL"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<drop-all-01.ru>'], ['ut:data', '<drop-default.ttl>'], ['graphData', [['ut:graph', '<drop-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': ['[]'], 'comment': {'rdfs:comment': '"This is a DROP of all graphs (default and named)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'DROP', 'manifest': 'sparql11/data-sparql11/drop/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/drop', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<drop-all-01.ru>'], ['ut:data', '<drop-default.ttl>'], ['graphData', [['ut:graph', '<drop-g1.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<drop-g2.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = ['[]']
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
Parsing sparql11/data-sparql11/drop/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/entailment/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[70] == expected_tests [70] :: 
[parse_manifest] INFO: expected_tests[70] == tests__names [70] :: 

		name = bind01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind01.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'bind01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind01 - BIND fixed data for OWL DL"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<bind01.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<bind01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind01.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<bind01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind02.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'bind02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind02 - BIND fixed data for OWL DL"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<bind02.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<bind02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind02.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<bind02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind03.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'bind03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind03 - BIND fixed data for OWL DL"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<bind03.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<bind03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind03.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<bind03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind04.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'bind04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind04 - BIND fixed data for OWL DL"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<bind04.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<bind04.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind04.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<bind04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind05.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'bind05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind05 - BIND fixed data for OWL DL"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<bind05.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<bind05.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind05.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<bind05.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind06.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'bind06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind06 - BIND fixed data for OWL DL"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<bind06.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<bind06.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind06.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<bind06.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind07
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind07.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'bind07', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind07 - BIND fixed data for OWL DL"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<bind07.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<bind07.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind07.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<bind07.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bind08
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bind08.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'bind08', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bind08 - BIND fixed data for OWL DL"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<bind08.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<bind08.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bind08.rq>'], ['qt:data', '<bind-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<bind08.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = d-ent-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<d-ent-01.rq>'], ['qt:data', '<d-ent-01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'd-ent-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"D-Entailment test to show that neither literals in subject position nor newly introduced surrogate blank nodes are to be returned in query answers"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<d-ent-01.rq>'], ['qt:data', '<d-ent-01.ttl>']], 'result': ['<d-ent-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<d-ent-01.rq>'], ['qt:data', '<d-ent-01.ttl>']]
		result = ['<d-ent-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = lang
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<lang.rq>'], ['qt:data', '<lang.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'lang', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Literal with language tag test"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<lang.rq>'], ['qt:data', '<lang.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]], 'result': ['<lang.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<lang.rq>'], ['qt:data', '<lang.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
		result = ['<lang.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = owlds01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<owlds01.rq>'], ['qt:data', '<owlds01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'owlds01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bnodes are not existentials"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<owlds01.rq>'], ['qt:data', '<owlds01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:D']]], 'result': ['<owlds01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<owlds01.rq>'], ['qt:data', '<owlds01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:D']]]
		result = ['<owlds01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = owlds02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<owlds02.rq>'], ['qt:data', '<owlds02.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'owlds02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"bnodes are not existentials with answer"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<owlds02.rq>'], ['qt:data', '<owlds02.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<owlds02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<owlds02.rq>'], ['qt:data', '<owlds02.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<owlds02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = paper-sparqldl-Q1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<paper-sparqldl-Q1.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'paper-sparqldl-Q1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"paper-sparqldl-Q1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<paper-sparqldl-Q1.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]], 'result': ['<paper-sparqldl-Q1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<paper-sparqldl-Q1.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
		result = ['<paper-sparqldl-Q1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = paper-sparqldl-Q1-rdfs
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<paper-sparqldl-Q1.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]]
			assigned_type_number = 322
		test = {'name': 'paper-sparqldl-Q1-rdfs', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"paper-sparqldl-Q1-rdfs"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<paper-sparqldl-Q1.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]], 'result': ['<paper-sparqldl-Q1-rdfs.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<paper-sparqldl-Q1.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]]
		result = ['<paper-sparqldl-Q1-rdfs.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = paper-sparqldl-Q2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<paper-sparqldl-Q2.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'paper-sparqldl-Q2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"paper-sparqldl-Q2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-10-09#resolution_3>'}, 'actions': [['qt:query', '<paper-sparqldl-Q2.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>']], 'result': ['<paper-sparqldl-Q2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<paper-sparqldl-Q2.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>']]
		result = ['<paper-sparqldl-Q2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = paper-sparqldl-Q3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<paper-sparqldl-Q3.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'paper-sparqldl-Q3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"paper-sparqldl-Q3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<paper-sparqldl-Q3.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>']], 'result': ['<paper-sparqldl-Q3.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<paper-sparqldl-Q3.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>']]
		result = ['<paper-sparqldl-Q3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = paper-sparqldl-Q4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<paper-sparqldl-Q4.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'paper-sparqldl-Q4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"paper-sparqldl-Q4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-04#resolution_2>'}, 'actions': [['qt:query', '<paper-sparqldl-Q4.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]], 'result': ['<paper-sparqldl-Q4.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<paper-sparqldl-Q4.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
		result = ['<paper-sparqldl-Q4.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = paper-sparqldl-Q5
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<paper-sparqldl-Q5.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'paper-sparqldl-Q5', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"paper-sparqldl-Q5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<paper-sparqldl-Q5.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<paper-sparqldl-Q5.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<paper-sparqldl-Q5.rq>'], ['qt:data', '<paper-sparqldl-data.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<paper-sparqldl-Q5.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = parent10
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<parent10.rq>'], ['qt:data', '<parent.ttl>']]
			assigned_type_number = 3
		test = {'name': 'parent10', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"filtered subclass query with (hasChild some Thing) restriction"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<parent10.rq>'], ['qt:data', '<parent.ttl>']], 'result': ['<parent10.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<parent10.rq>'], ['qt:data', '<parent.ttl>']]
		result = ['<parent10.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = parent2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<parent2.rq>'], ['qt:data', '<parent.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'parent2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"parent query with distinguished variable"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<parent2.rq>'], ['qt:data', '<parent.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<parent2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<parent2.rq>'], ['qt:data', '<parent.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<parent2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = parent3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<parent3.rq>'], ['qt:data', '<parent.ttl>']]
			assigned_type_number = 3
		test = {'name': 'parent3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"parent query with (hasChild some Thing) restriction"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<parent3.rq>'], ['qt:data', '<parent.ttl>']], 'result': ['<parent3.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<parent3.rq>'], ['qt:data', '<parent.ttl>']]
		result = ['<parent3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = parent4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<parent4.rq>'], ['qt:data', '<parent.ttl>']]
			assigned_type_number = 3
		test = {'name': 'parent4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"parent query with (hasChild min 1) restriction"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<parent4.rq>'], ['qt:data', '<parent.ttl>']], 'result': ['<parent4.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<parent4.rq>'], ['qt:data', '<parent.ttl>']]
		result = ['<parent4.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = parent5
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<parent5.rq>'], ['qt:data', '<parent.ttl>']]
			assigned_type_number = 3
		test = {'name': 'parent5', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"parent query with (hasChild some Female) restriction"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<parent5.rq>'], ['qt:data', '<parent.ttl>']], 'result': ['<parent5.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<parent5.rq>'], ['qt:data', '<parent.ttl>']]
		result = ['<parent5.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = parent6
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<parent6.rq>'], ['qt:data', '<parent.ttl>']]
			assigned_type_number = 3
		test = {'name': 'parent6', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"parent query with (hasChild min 1 Female) restriction"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<parent6.rq>'], ['qt:data', '<parent.ttl>']], 'result': ['<parent6.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<parent6.rq>'], ['qt:data', '<parent.ttl>']]
		result = ['<parent6.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = parent7
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<parent7.rq>'], ['qt:data', '<parent.ttl>']]
			assigned_type_number = 3
		test = {'name': 'parent7', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"parent query with (hasChild max 1 Female) restriction"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<parent7.rq>'], ['qt:data', '<parent.ttl>']], 'result': ['<parent7.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<parent7.rq>'], ['qt:data', '<parent.ttl>']]
		result = ['<parent7.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = parent8
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<parent8.rq>'], ['qt:data', '<parent.ttl>']]
			assigned_type_number = 3
		test = {'name': 'parent8', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"parent query with (hasChild exactly 1 Female) restriction"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<parent8.rq>'], ['qt:data', '<parent.ttl>']], 'result': ['<parent8.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<parent8.rq>'], ['qt:data', '<parent.ttl>']]
		result = ['<parent8.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = parent9
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<parent9.rq>'], ['qt:data', '<parent.ttl>']]
			assigned_type_number = 3
		test = {'name': 'parent9', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"subclass query with (hasChild some Thing) restriction"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<parent9.rq>'], ['qt:data', '<parent.ttl>']], 'result': ['<parent9.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<parent9.rq>'], ['qt:data', '<parent.ttl>']]
		result = ['<parent9.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = plainLit
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<plainLit.rq>'], ['qt:data', '<plainLit.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'plainLit', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Plain literals with language tag are not the same as the same literal without"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<plainLit.rq>'], ['qt:data', '<plainLit.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]], 'result': ['<plainLit.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<plainLit.rq>'], ['qt:data', '<plainLit.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
		result = ['<plainLit.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdf01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdf01.rq>'], ['qt:data', '<rdf01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'rdf01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDF inference test"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<rdf01.rq>'], ['qt:data', '<rdf01.ttl>']], 'result': ['<rdf01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdf01.rq>'], ['qt:data', '<rdf01.ttl>']]
		result = ['<rdf01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdf02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdf02.rq>'], ['qt:data', '<rdf02.ttl>']]
			assigned_type_number = 3
		test = {'name': 'rdf02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDF inference test"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<rdf02.rq>'], ['qt:data', '<rdf02.ttl>']], 'result': ['<rdf02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdf02.rq>'], ['qt:data', '<rdf02.ttl>']]
		result = ['<rdf02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdf03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdf03.rq>'], ['qt:data', '<rdf03.ttl>']]
			assigned_type_number = 3
		test = {'name': 'rdf03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDF test for blank node cardinalities"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<rdf03.rq>'], ['qt:data', '<rdf03.ttl>']], 'result': ['<rdf03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdf03.rq>'], ['qt:data', '<rdf03.ttl>']]
		result = ['<rdf03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdf04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdf04.rq>'], ['qt:data', '<rdf04.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDF', 'ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'rdf04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"simple triple pattern match"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<rdf04.rq>'], ['qt:data', '<rdf04.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDF', 'ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]], 'result': ['<rdf04.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdf04.rq>'], ['qt:data', '<rdf04.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDF', 'ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
		result = ['<rdf04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs01.rq>'], ['qt:data', '<rdfs01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'rdfs01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test rdfs:subPropertyOf"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<rdfs01.rq>'], ['qt:data', '<rdfs01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]], 'result': ['<rdfs01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs01.rq>'], ['qt:data', '<rdfs01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
		result = ['<rdfs01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs02.rq>'], ['qt:data', '<rdfs01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'rdfs02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test rdfs:subPropertyOf"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<rdfs02.rq>'], ['qt:data', '<rdfs01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]], 'result': ['<rdfs02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs02.rq>'], ['qt:data', '<rdfs01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
		result = ['<rdfs02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs03.rq>'], ['qt:data', '<rdfs03.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]]
			assigned_type_number = 322
		test = {'name': 'rdfs03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test combining subPropertyOf and domain"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<rdfs03.rq>'], ['qt:data', '<rdfs03.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]], 'result': ['<rdfs03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs03.rq>'], ['qt:data', '<rdfs03.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]]
		result = ['<rdfs03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs04.rq>'], ['qt:data', '<rdfs04.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'rdfs04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test subClassOf"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<rdfs04.rq>'], ['qt:data', '<rdfs04.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]], 'result': ['<rdfs04.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs04.rq>'], ['qt:data', '<rdfs04.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
		result = ['<rdfs04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs05.rq>'], ['qt:data', '<rdfs05.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'rdfs05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test subClassOf"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<rdfs05.rq>'], ['qt:data', '<rdfs05.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]], 'result': ['<rdfs05.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs05.rq>'], ['qt:data', '<rdfs05.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
		result = ['<rdfs05.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs06.rq>'], ['qt:data', '<rdfs06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'rdfs06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test domain"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<rdfs06.rq>'], ['qt:data', '<rdfs06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]], 'result': ['<rdfs06.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs06.rq>'], ['qt:data', '<rdfs06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
		result = ['<rdfs06.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs07
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs07.rq>'], ['qt:data', '<rdfs07.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'rdfs07', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test range"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<rdfs07.rq>'], ['qt:data', '<rdfs07.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]], 'result': ['<rdfs07.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs07.rq>'], ['qt:data', '<rdfs07.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
		result = ['<rdfs07.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs08
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs08.rq>'], ['qt:data', '<rdfs08.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]]
			assigned_type_number = 322
		test = {'name': 'rdfs08', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test rdf:XMLLiteral subclass of rdfs:Literal"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<rdfs08.rq>'], ['qt:data', '<rdfs08.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]], 'result': ['<rdfs08.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs08.rq>'], ['qt:data', '<rdfs08.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]]
		result = ['<rdfs08.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs09
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs09.rq>'], ['qt:data', '<rdfs09.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'rdfs09', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test transitivity of subClassOf"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<rdfs09.rq>'], ['qt:data', '<rdfs09.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]], 'result': ['<rdfs09.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs09.rq>'], ['qt:data', '<rdfs09.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
		result = ['<rdfs09.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs10
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs10.rq>'], ['qt:data', '<rdfs10.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'rdfs10', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test transitivity of subPropertyOf"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<rdfs10.rq>'], ['qt:data', '<rdfs10.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]], 'result': ['<rdfs10.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs10.rq>'], ['qt:data', '<rdfs10.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
		result = ['<rdfs10.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs11
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs11.rq>'], ['qt:data', '<rdfs11.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]]
			assigned_type_number = 322
		test = {'name': 'rdfs11', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test subProperty and instances"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-04#resolution_2>'}, 'actions': [['qt:query', '<rdfs11.rq>'], ['qt:data', '<rdfs11.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]], 'result': ['<rdfs11.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs11.rq>'], ['qt:data', '<rdfs11.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]]
		result = ['<rdfs11.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs12
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs12.rq>'], ['qt:data', '<rdfs12.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]]
			assigned_type_number = 322
		test = {'name': 'rdfs12', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test containers"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-04#resolution_2>'}, 'actions': [['qt:query', '<rdfs12.rq>'], ['qt:data', '<rdfs12.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]], 'result': ['<rdfs12.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs12.rq>'], ['qt:data', '<rdfs12.ttl>'], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D']]]
		result = ['<rdfs12.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rdfs13
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rdfs13.rq>'], ['qt:data', '<rdfs13.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'rdfs13', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RDFS inference test to show that neither literals in subject position nor newly introduced surrogate blank nodes are to be returned in query answers"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<rdfs13.rq>'], ['qt:data', '<rdfs13.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]], 'result': ['<rdfs13.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rdfs13.rq>'], ['qt:data', '<rdfs13.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:QL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:RDFS', 'ent:D', 'ent:OWL-RDF-Based']]]
		result = ['<rdfs13.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rif01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rif01.rq>'], ['qt:data', '<rif01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'rif01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RIF Logical Entailment (referencing RIF XML)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_3>'}, 'actions': [['qt:query', '<rif01.rq>'], ['qt:data', '<rif01.ttl>']], 'result': ['<rif01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rif01.rq>'], ['qt:data', '<rif01.ttl>']]
		result = ['<rif01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rif03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rif03.rq>'], ['qt:data', '<rif03.ttl>']]
			assigned_type_number = 3
		test = {'name': 'rif03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RIF Core WG tests: Frames"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_3>'}, 'actions': [['qt:query', '<rif03.rq>'], ['qt:data', '<rif03.ttl>']], 'result': ['<rif03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rif03.rq>'], ['qt:data', '<rif03.ttl>']]
		result = ['<rif03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rif04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rif04.rq>'], ['qt:data', '<rif04.ttl>']]
			assigned_type_number = 3
		test = {'name': 'rif04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RIF Core WG tests: Modeling Brain Anatomy"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_3>'}, 'actions': [['qt:query', '<rif04.rq>'], ['qt:data', '<rif04.ttl>']], 'result': ['<rif04.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rif04.rq>'], ['qt:data', '<rif04.ttl>']]
		result = ['<rif04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rif06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rif06.rq>'], ['qt:data', '<rif06.ttl>']]
			assigned_type_number = 3
		test = {'name': 'rif06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RIF Core WG tests: RDF Combination Blank Node"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_3>'}, 'actions': [['qt:query', '<rif06.rq>'], ['qt:data', '<rif06.ttl>']], 'result': ['<rif06.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rif06.rq>'], ['qt:data', '<rif06.ttl>']]
		result = ['<rif06.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = simple1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<simple1.rq>'], ['qt:data', '<simple.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:RL']]]
			assigned_type_number = 323
		test = {'name': 'simple1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"simple 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<simple1.rq>'], ['qt:data', '<simple.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:RL']]], 'result': ['<simple1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<simple1.rq>'], ['qt:data', '<simple.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:RL']]]
		result = ['<simple1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = simple2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<simple2.rq>'], ['qt:data', '<simple.ttl>']]
			assigned_type_number = 3
		test = {'name': 'simple2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"simple 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<simple2.rq>'], ['qt:data', '<simple.ttl>']], 'result': ['<simple2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<simple2.rq>'], ['qt:data', '<simple.ttl>']]
		result = ['<simple2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = simple3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<simple3.rq>'], ['qt:data', '<simple.ttl>']]
			assigned_type_number = 3
		test = {'name': 'simple3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"simple 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<simple3.rq>'], ['qt:data', '<simple.ttl>']], 'result': ['<simple3.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<simple3.rq>'], ['qt:data', '<simple.ttl>']]
		result = ['<simple3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = simple4
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<simple4.rq>'], ['qt:data', '<simple.ttl>']]
			assigned_type_number = 3
		test = {'name': 'simple4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"simple 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<simple4.rq>'], ['qt:data', '<simple.ttl>']], 'result': ['<simple4.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<simple4.rq>'], ['qt:data', '<simple.ttl>']]
		result = ['<simple4.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = simple5
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<simple5.rq>'], ['qt:data', '<simple.ttl>']]
			assigned_type_number = 3
		test = {'name': 'simple5', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"simple 5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<simple5.rq>'], ['qt:data', '<simple.ttl>']], 'result': ['<simple5.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<simple5.rq>'], ['qt:data', '<simple.ttl>']]
		result = ['<simple5.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = simple6
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<simple6.rq>'], ['qt:data', '<simple.ttl>']]
			assigned_type_number = 3
		test = {'name': 'simple6', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"simple 6"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<simple6.rq>'], ['qt:data', '<simple.ttl>']], 'result': ['<simple6.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<simple6.rq>'], ['qt:data', '<simple.ttl>']]
		result = ['<simple6.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = simple7
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<simple7.rq>'], ['qt:data', '<simple.ttl>']]
			assigned_type_number = 3
		test = {'name': 'simple7', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"simple 7"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<simple7.rq>'], ['qt:data', '<simple.ttl>']], 'result': ['<simple7.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<simple7.rq>'], ['qt:data', '<simple.ttl>']]
		result = ['<simple7.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = simple8
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<simple8.rq>'], ['qt:data', '<simple.ttl>']]
			assigned_type_number = 3
		test = {'name': 'simple8', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"simple 8"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<simple8.rq>'], ['qt:data', '<simple.ttl>']], 'result': ['<simple8.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<simple8.rq>'], ['qt:data', '<simple.ttl>']]
		result = ['<simple8.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-01.rq>'], ['qt:data', '<data-01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-01.rq: triple pattern"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-01.rq>'], ['qt:data', '<data-01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<sparqldl-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-01.rq>'], ['qt:data', '<data-01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<sparqldl-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-02.rq>'], ['qt:data', '<data-01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-02.rq: simple combined query"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-02.rq>'], ['qt:data', '<data-01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:D']]], 'result': ['<sparqldl-02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-02.rq>'], ['qt:data', '<data-01.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:D']]]
		result = ['<sparqldl-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-03.rq>'], ['qt:data', '<data-02.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-03.rq: combined query with complex class description"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-03.rq>'], ['qt:data', '<data-02.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:D']]], 'result': ['<sparqldl-03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-03.rq>'], ['qt:data', '<data-02.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:D']]]
		result = ['<sparqldl-03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-04.rq>'], ['qt:data', '<data-03.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDF', 'ent:RDFS', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-04.rq: bug fixing test"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-04.rq>'], ['qt:data', '<data-03.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDF', 'ent:RDFS', 'ent:D']]], 'result': ['<sparqldl-04.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-04.rq>'], ['qt:data', '<data-03.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDF', 'ent:RDFS', 'ent:D']]]
		result = ['<sparqldl-04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-05.rq>'], ['qt:data', '<data-03.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDF', 'ent:RDFS', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-05.rq: simple undistinguished variable test."'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-05.rq>'], ['qt:data', '<data-03.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDF', 'ent:RDFS', 'ent:D']]], 'result': ['<sparqldl-05.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-05.rq>'], ['qt:data', '<data-03.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDF', 'ent:RDFS', 'ent:D']]]
		result = ['<sparqldl-05.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-06.rq>'], ['qt:data', '<data-06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-06.rq: cycle of undistinguished variables"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-06.rq>'], ['qt:data', '<data-06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<sparqldl-06.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-06.rq>'], ['qt:data', '<data-06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<sparqldl-06.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-07
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-07.rq>'], ['qt:data', '<data-06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-07', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-07.rq: two distinguished variables + undist."'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-07.rq>'], ['qt:data', '<data-06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<sparqldl-07.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-07.rq>'], ['qt:data', '<data-06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<sparqldl-07.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-08
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-08.rq>'], ['qt:data', '<data-06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-08', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-08.rq: two distinguished variables + undist."'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-08.rq>'], ['qt:data', '<data-06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<sparqldl-08.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-08.rq>'], ['qt:data', '<data-06.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<sparqldl-08.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-09
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-09.rq>'], ['qt:data', '<data-07.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-09', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-09.rq: undist vars test"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-09.rq>'], ['qt:data', '<data-07.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]], 'result': ['<sparqldl-09.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-09.rq>'], ['qt:data', '<data-07.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:QL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based', 'ent:RDFS', 'ent:RDF', 'ent:D']]]
		result = ['<sparqldl-09.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-10
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-10.rq>'], ['qt:data', '<data-07.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-10', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-10.rq: undist vars test"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-10.rq>'], ['qt:data', '<data-07.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]], 'result': ['<sparqldl-10.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-10.rq>'], ['qt:data', '<data-07.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
		result = ['<sparqldl-10.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-11
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-11.rq>'], ['qt:data', '<data-11.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-11', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-11.rq: domain test"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-11.rq>'], ['qt:data', '<data-11.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]], 'result': ['<sparqldl-11.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-11.rq>'], ['qt:data', '<data-11.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
		result = ['<sparqldl-11.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-12
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-12.rq>'], ['qt:data', '<data-11.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-12', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-12.rq: range test"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-12.rq>'], ['qt:data', '<data-11.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]], 'result': ['<sparqldl-12.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-12.rq>'], ['qt:data', '<data-11.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
		result = ['<sparqldl-12.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sparqldl-13
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sparqldl-13.rq>'], ['qt:data', '<data-08.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
			assigned_type_number = 321
		test = {'name': 'sparqldl-13', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sparqldl-13.rq: sameAs"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_2>'}, 'actions': [['qt:query', '<sparqldl-13.rq>'], ['qt:data', '<data-08.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]], 'result': ['<sparqldl-13.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'entailment regime test cases', 'manifest': 'sparql11/data-sparql11/entailment/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/entailment', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sparqldl-13.rq>'], ['qt:data', '<data-08.ttl>'], ['sd:EntailmentProfile', ['pr:DL', 'pr:EL', 'pr:RL', 'pr:Full']], ['sd:entailmentRegime', ['ent:OWL-Direct', 'ent:OWL-RDF-Based']]]
		result = ['<sparqldl-13.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-sparql11/entailment/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/exists/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[5] == expected_tests [5] :: 
[parse_manifest] INFO: expected_tests[5] == tests__names [5] :: 

		name = exists01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<exists01.rq>'], ['qt:data', '<exists01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'exists01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Exists with one constant";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_2>'}, 'actions': [['qt:query', '<exists01.rq>'], ['qt:data', '<exists01.ttl>']], 'result': ['<exists01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:exists'}, 'request': [], 'response': [], 'label': 'Positive Exists', 'manifest': 'sparql11/data-sparql11/exists/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/exists', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<exists01.rq>'], ['qt:data', '<exists01.ttl>']]
		result = ['<exists01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = exists02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<exists02.rq>'], ['qt:data', '<exists01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'exists02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Exists with ground triple";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_2>'}, 'actions': [['qt:query', '<exists02.rq>'], ['qt:data', '<exists01.ttl>']], 'result': ['<exists02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:exists'}, 'request': [], 'response': [], 'label': 'Positive Exists', 'manifest': 'sparql11/data-sparql11/exists/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/exists', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<exists02.rq>'], ['qt:data', '<exists01.ttl>']]
		result = ['<exists02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = exists03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<exists03.rq>'], ['qt:data', '<exists01.ttl>'], ['qt:graphData', '<exists02.ttl>']]
			assigned_type_number = 3
		test = {'name': 'exists03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Exists within graph pattern";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_2>'}, 'actions': [['qt:query', '<exists03.rq>'], ['qt:data', '<exists01.ttl>'], ['qt:graphData', '<exists02.ttl>']], 'result': ['<exists03.srx>'], 'comment': {'rdfs:comment': '"Checks that exists is interpreted within named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:exists'}, 'request': [], 'response': [], 'label': 'Positive Exists', 'manifest': 'sparql11/data-sparql11/exists/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/exists', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<exists03.rq>'], ['qt:data', '<exists01.ttl>'], ['qt:graphData', '<exists02.ttl>']]
		result = ['<exists03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = exists04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<exists04.rq>'], ['qt:data', '<exists01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'exists04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Nested positive exists";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_2>'}, 'actions': [['qt:query', '<exists04.rq>'], ['qt:data', '<exists01.ttl>']], 'result': ['<exists04.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:exists'}, 'request': [], 'response': [], 'label': 'Positive Exists', 'manifest': 'sparql11/data-sparql11/exists/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/exists', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<exists04.rq>'], ['qt:data', '<exists01.ttl>']]
		result = ['<exists04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = exists05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<exists05.rq>'], ['qt:data', '<exists01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'exists05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Nested negative exists in positive exists";'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_2>'}, 'actions': [['qt:query', '<exists05.rq>'], ['qt:data', '<exists01.ttl>']], 'result': ['<exists05.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:exists'}, 'request': [], 'response': [], 'label': 'Positive Exists', 'manifest': 'sparql11/data-sparql11/exists/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/exists', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<exists05.rq>'], ['qt:data', '<exists01.ttl>']]
		result = ['<exists05.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-sparql11/exists/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/functions/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[68] == expected_tests [68] :: 
[parse_manifest] INFO: expected_tests[68] == tests__names [68] :: 

		name = strdt01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<strdt01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'strdt01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRDT()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<strdt01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<strdt01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strdt'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<strdt01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<strdt01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = strdt02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<strdt02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'strdt02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRDT(STR())"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<strdt02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<strdt02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strdt'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<strdt02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<strdt02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = strdt03-rdf11
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<strdt03.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'strdt03-rdf11', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRDT() TypeErrors (updated for RDF 1.1)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<strdt03.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<strdt03-rdf11.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strdt'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<strdt03.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<strdt03-rdf11.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = strlang01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<strlang01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'strlang01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRLANG()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<strlang01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<strlang01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strlang'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<strlang01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<strlang01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = strlang02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<strlang02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'strlang02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRLANG(STR())"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<strlang02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<strlang02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strlang'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<strlang02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<strlang02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = strlang03-rdf11
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<strlang03.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'strlang03-rdf11', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRLANG() TypeErrors (updated for RDF 1.1)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<strlang03.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<strlang03-rdf11.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strlang'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<strlang03.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<strlang03-rdf11.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = isnumeric01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<isnumeric01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'isnumeric01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"isNumeric()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<isnumeric01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<isnumeric01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:isnumeric'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<isnumeric01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<isnumeric01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = abs01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<abs01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'abs01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ABS()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<abs01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<abs01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:abs'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<abs01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<abs01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = ceil01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<ceil01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'ceil01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"CEIL()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<ceil01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<ceil01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:ceil'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<ceil01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<ceil01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = floor01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<floor01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'floor01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"FLOOR()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<floor01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<floor01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:floor'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<floor01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<floor01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = round01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<round01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'round01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ROUND()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<round01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<round01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:round'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<round01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<round01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = concat01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<concat01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'concat01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"CONCAT()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<concat01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<concat01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:concat'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<concat01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<concat01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = concat02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<concat02.rq>'], ['qt:data', '<data2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'concat02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"CONCAT() 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<concat02.rq>'], ['qt:data', '<data2.ttl>']], 'result': ['<concat02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:concat'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<concat02.rq>'], ['qt:data', '<data2.ttl>']]
		result = ['<concat02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = substring01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<substring01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'substring01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SUBSTR() (3-argument)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<substring01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<substring01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:substr'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<substring01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<substring01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = substring01-non-bmp
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<substring01.rq>'], ['qt:data', '<data5.ttl>']]
			assigned_type_number = 3
		test = {'name': 'substring01-non-bmp', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SUBSTR() (3-argument) on non-BMP unicode strings"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<substring01.rq>'], ['qt:data', '<data5.ttl>']], 'result': ['<substring01-non-bmp.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:substr'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<substring01.rq>'], ['qt:data', '<data5.ttl>']]
		result = ['<substring01-non-bmp.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = substring02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<substring02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'substring02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SUBSTR() (2-argument)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<substring02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<substring02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:substr'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<substring02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<substring02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = substring02-non-bmp
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<substring02.rq>'], ['qt:data', '<data5.ttl>']]
			assigned_type_number = 3
		test = {'name': 'substring02-non-bmp', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SUBSTR() (2-argument) on non-BMP unicode strings"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<substring02.rq>'], ['qt:data', '<data5.ttl>']], 'result': ['<substring02-non-bmp.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:substr'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<substring02.rq>'], ['qt:data', '<data5.ttl>']]
		result = ['<substring02-non-bmp.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = length01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<length01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'length01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRLEN()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<length01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<length01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strlen'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<length01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<length01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = length01-non-bmp
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<length01.rq>'], ['qt:data', '<data5.ttl>']]
			assigned_type_number = 3
		test = {'name': 'length01-non-bmp', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRLEN() on non-BMP unicode strings"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<length01.rq>'], ['qt:data', '<data5.ttl>']], 'result': ['<length01-non-bmp.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strlen'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<length01.rq>'], ['qt:data', '<data5.ttl>']]
		result = ['<length01-non-bmp.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = ucase01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<ucase01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'ucase01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"UCASE()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<ucase01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<ucase01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:ucase'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<ucase01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<ucase01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = ucase01-non-bmp
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<ucase01.rq>'], ['qt:data', '<data5.ttl>']]
			assigned_type_number = 3
		test = {'name': 'ucase01-non-bmp', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"UCASE() on non-BMP unicode strings"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<ucase01.rq>'], ['qt:data', '<data5.ttl>']], 'result': ['<ucase01-non-bmp.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:ucase'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<ucase01.rq>'], ['qt:data', '<data5.ttl>']]
		result = ['<ucase01-non-bmp.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = lcase01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<lcase01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'lcase01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"LCASE()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<lcase01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<lcase01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:lcase'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<lcase01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<lcase01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = lcase01-non-bmp
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<lcase01.rq>'], ['qt:data', '<data5.ttl>']]
			assigned_type_number = 3
		test = {'name': 'lcase01-non-bmp', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"LCASE() on non-BMP unicode strings"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<lcase01.rq>'], ['qt:data', '<data5.ttl>']], 'result': ['<lcase01-non-bmp.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:lcase'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<lcase01.rq>'], ['qt:data', '<data5.ttl>']]
		result = ['<lcase01-non-bmp.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = encode01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<encode01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'encode01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ENCODE_FOR_URI()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<encode01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<encode01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:encode_for_uri'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<encode01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<encode01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = encode01-non-bmp
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<encode01.rq>'], ['qt:data', '<data5.ttl>']]
			assigned_type_number = 3
		test = {'name': 'encode01-non-bmp', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ENCODE_FOR_URI() on non-BMP unicode strings"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<encode01.rq>'], ['qt:data', '<data5.ttl>']], 'result': ['<encode01-non-bmp.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:encode_for_uri'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<encode01.rq>'], ['qt:data', '<data5.ttl>']]
		result = ['<encode01-non-bmp.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = contains01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<contains01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'contains01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"CONTAINS()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<contains01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<contains01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:contains'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<contains01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<contains01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = starts01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<starts01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'starts01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRSTARTS()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<starts01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<starts01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strstarts'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<starts01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<starts01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = ends01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<ends01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'ends01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRENDS()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<ends01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<ends01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strends'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<ends01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<ends01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = plus-1-corrected
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<plus-1-corrected.rq>'], ['qt:data', '<data-builtin-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'plus-1-corrected', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"plus-1-corrected"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<plus-1-corrected.rq>'], ['qt:data', '<data-builtin-3.ttl>']], 'result': ['<plus-1.srx>'], 'comment': {'rdfs:comment': '"plus operator on ?x + ?y on string and numeric values"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<plus-1-corrected.rq>'], ['qt:data', '<data-builtin-3.ttl>']]
		result = ['<plus-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = plus-2-corrected
		type = {'a': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<plus-2-corrected.rq>'], ['qt:data', '<data-builtin-3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'plus-2-corrected', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"plus-2-corrected"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<plus-2-corrected.rq>'], ['qt:data', '<data-builtin-3.ttl>']], 'result': ['<plus-2.srx>'], 'comment': {'rdfs:comment': '"plus operator in combination with str(), i.e. str(?x) + str(?y), on string and numeric values"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<plus-2-corrected.rq>'], ['qt:data', '<data-builtin-3.ttl>']]
		result = ['<plus-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = md5-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<md5-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'md5-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"MD5()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<md5-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<md5-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:md5'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<md5-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<md5-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = md5-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<md5-02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'md5-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"MD5() over Unicode data"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<md5-02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<md5-02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:md5'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<md5-02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<md5-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sha1-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sha1-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'sha1-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SHA1()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<sha1-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<sha1-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:sha1'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sha1-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<sha1-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sha1-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sha1-02.rq>'], ['qt:data', '<hash-unicode.ttl>']]
			assigned_type_number = 3
		test = {'name': 'sha1-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SHA1() on Unicode data"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<sha1-02.rq>'], ['qt:data', '<hash-unicode.ttl>']], 'result': ['<sha1-02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:sha1'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sha1-02.rq>'], ['qt:data', '<hash-unicode.ttl>']]
		result = ['<sha1-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sha256-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sha256-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'sha256-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SHA256()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<sha256-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<sha256-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:sha256'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sha256-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<sha256-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sha256-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sha256-02.rq>'], ['qt:data', '<hash-unicode.ttl>']]
			assigned_type_number = 3
		test = {'name': 'sha256-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SHA256() on Unicode data"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<sha256-02.rq>'], ['qt:data', '<hash-unicode.ttl>']], 'result': ['<sha256-02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:sha256'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sha256-02.rq>'], ['qt:data', '<hash-unicode.ttl>']]
		result = ['<sha256-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sha512-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sha512-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'sha512-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SHA512()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<sha512-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<sha512-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:sha512'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sha512-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<sha512-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = sha512-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sha512-02.rq>'], ['qt:data', '<hash-unicode.ttl>']]
			assigned_type_number = 3
		test = {'name': 'sha512-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SHA512() on Unicode data"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<sha512-02.rq>'], ['qt:data', '<hash-unicode.ttl>']], 'result': ['<sha512-02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:sha512'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sha512-02.rq>'], ['qt:data', '<hash-unicode.ttl>']]
		result = ['<sha512-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = hours
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<hours-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'hours', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"HOURS()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<hours-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<hours-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:hours'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<hours-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<hours-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = minutes
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<minutes-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'minutes', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"MINUTES()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<minutes-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<minutes-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:minutes'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<minutes-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<minutes-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = seconds
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<seconds-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'seconds', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SECONDS()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<seconds-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<seconds-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:seconds'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<seconds-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<seconds-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = year
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<year-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'year', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"YEAR()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<year-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<year-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:year'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<year-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<year-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = month
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<month-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'month', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"MONTH()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<month-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<month-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:month'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<month-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<month-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = day
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<day-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'day', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"DAY()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<day-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<day-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:day'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<day-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<day-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = timezone
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<timezone-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'timezone', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"TIMEZONE()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<timezone-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<timezone-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:timezone'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<timezone-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<timezone-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = tz
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<tz-01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'tz', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"TZ()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<tz-01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<tz-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:tz'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<tz-01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<tz-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bnode01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bnode01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bnode01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"BNODE(str)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<bnode01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bnode01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:bnode'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bnode01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bnode01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = in01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<in01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'in01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"IN 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<in01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<in01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:in'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<in01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<in01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = in02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<in02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'in02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"IN 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<in02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<in02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:in'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<in02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<in02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = notin01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<notin01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'notin01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"NOT IN 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<notin01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<notin01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:not'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<notin01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<notin01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = notin02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<notin02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'notin02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"NOT IN 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<notin02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<notin02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:not'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<notin02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<notin02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = now01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<now01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'now01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"NOW()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<now01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<now01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:now'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<now01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<now01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = rand01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<rand01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'rand01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"RAND()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<rand01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<rand01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:rand'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<rand01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<rand01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = bnode02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<bnode02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'bnode02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"BNODE()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<bnode02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bnode02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:bnode'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<bnode02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<bnode02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = iri01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<iri01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'iri01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"IRI()/URI()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<iri01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<iri01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:uri'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<iri01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<iri01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = if01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<if01.rq>'], ['qt:data', '<data2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'if01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"IF()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<if01.rq>'], ['qt:data', '<data2.ttl>']], 'result': ['<if01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:if'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<if01.rq>'], ['qt:data', '<data2.ttl>']]
		result = ['<if01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = if02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<if02.rq>'], ['qt:data', '<data2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'if02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"IF() error propogation"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<if02.rq>'], ['qt:data', '<data2.ttl>']], 'result': ['<if02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:if'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<if02.rq>'], ['qt:data', '<data2.ttl>']]
		result = ['<if02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = coalesce01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<coalesce01.rq>'], ['qt:data', '<data-coalesce.ttl>']]
			assigned_type_number = 3
		test = {'name': 'coalesce01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"COALESCE()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<coalesce01.rq>'], ['qt:data', '<data-coalesce.ttl>']], 'result': ['<coalesce01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:coalesce'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<coalesce01.rq>'], ['qt:data', '<data-coalesce.ttl>']]
		result = ['<coalesce01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = strbefore01a
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<strbefore01.rq>'], ['qt:data', '<data2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'strbefore01a', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRBEFORE()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<strbefore01.rq>'], ['qt:data', '<data2.ttl>']], 'result': ['<strbefore01a.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strbefore'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<strbefore01.rq>'], ['qt:data', '<data2.ttl>']]
		result = ['<strbefore01a.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = strbefore02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<strbefore02.rq>'], ['qt:data', '<data4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'strbefore02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRBEFORE() datatyping"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<strbefore02.rq>'], ['qt:data', '<data4.ttl>']], 'result': ['<strbefore02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strbefore'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<strbefore02.rq>'], ['qt:data', '<data4.ttl>']]
		result = ['<strbefore02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = strafter01a
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<strafter01.rq>'], ['qt:data', '<data2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'strafter01a', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRAFTER()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<strafter01.rq>'], ['qt:data', '<data2.ttl>']], 'result': ['<strafter01a.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strafter'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<strafter01.rq>'], ['qt:data', '<data2.ttl>']]
		result = ['<strafter01a.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = strafter02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<strafter02.rq>'], ['qt:data', '<data4.ttl>']]
			assigned_type_number = 3
		test = {'name': 'strafter02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRAFTER() datatyping"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<strafter02.rq>'], ['qt:data', '<data4.ttl>']], 'result': ['<strafter02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:strafter'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<strafter02.rq>'], ['qt:data', '<data4.ttl>']]
		result = ['<strafter02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = replace01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<replace01.rq>'], ['qt:data', '<data3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'replace01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"REPLACE()"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<replace01.rq>'], ['qt:data', '<data3.ttl>']], 'result': ['<replace01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:replace'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<replace01.rq>'], ['qt:data', '<data3.ttl>']]
		result = ['<replace01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = replace02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<replace02.rq>'], ['qt:data', '<data3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'replace02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"REPLACE() with overlapping pattern"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<replace02.rq>'], ['qt:data', '<data3.ttl>']], 'result': ['<replace02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:replace'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<replace02.rq>'], ['qt:data', '<data3.ttl>']]
		result = ['<replace02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = replace03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<replace03.rq>'], ['qt:data', '<data3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'replace03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"REPLACE() with captured substring"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<replace03.rq>'], ['qt:data', '<data3.ttl>']], 'result': ['<replace03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:replace'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<replace03.rq>'], ['qt:data', '<data3.ttl>']]
		result = ['<replace03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = uuid01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<uuid01.rq>'], ['qt:data', '<data-empty.nt>']]
			assigned_type_number = 3
		test = {'name': 'uuid01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"UUID() pattern match"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<uuid01.rq>'], ['qt:data', '<data-empty.nt>']], 'result': ['<uuid01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:uuid'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<uuid01.rq>'], ['qt:data', '<data-empty.nt>']]
		result = ['<uuid01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = uuid02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<uuid02.rq>'], ['qt:data', '<data-empty.nt>']]
			assigned_type_number = 3
		test = {'name': 'uuid02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"UUID() per binding"'}, 'seeAlso': {'rdfs:seeAlso': '<https://github.com/w3c/sparql-12/issues/102>'}, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['qt:query', '<uuid02.rq>'], ['qt:data', '<data-empty.nt>']], 'result': ['<uuid02.srx>'], 'comment': {'rdfs:comment': '"UUID() calls generate results per invocation, not per query"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:uuid'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<uuid02.rq>'], ['qt:data', '<data-empty.nt>']]
		result = ['<uuid02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = struuid01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<struuid01.rq>'], ['qt:data', '<data-empty.nt>']]
			assigned_type_number = 3
		test = {'name': 'struuid01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"STRUUID() pattern match"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<struuid01.rq>'], ['qt:data', '<data-empty.nt>']], 'result': ['<struuid01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sparql:struuid'}, 'request': [], 'response': [], 'label': 'Built-in Functions', 'manifest': 'sparql11/data-sparql11/functions/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/functions', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<struuid01.rq>'], ['qt:data', '<data-empty.nt>']]
		result = ['<struuid01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-sparql11/functions/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/grouping/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[6] == expected_tests [6] :: 
[parse_manifest] INFO: expected_tests[6] == tests__names [6] :: 

		name = group01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<group01.rq>'], ['qt:data', '<group-data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'group01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Group-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<group01.rq>'], ['qt:data', '<group-data-1.ttl>']], 'result': ['<group01.srx>'], 'comment': {'rdfs:comment': '"Simple grouping"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Grouping', 'manifest': 'sparql11/data-sparql11/grouping/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/grouping', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<group01.rq>'], ['qt:data', '<group-data-1.ttl>']]
		result = ['<group01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = group03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<group03.rq>'], ['qt:data', '<group-data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'group03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Group-3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<group03.rq>'], ['qt:data', '<group-data-1.ttl>']], 'result': ['<group03.srx>'], 'comment': {'rdfs:comment': '"Grouping with an unbound"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Grouping', 'manifest': 'sparql11/data-sparql11/grouping/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/grouping', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<group03.rq>'], ['qt:data', '<group-data-1.ttl>']]
		result = ['<group03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = group04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<group04.rq>'], ['qt:data', '<group-data-1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'group04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Group-4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<group04.rq>'], ['qt:data', '<group-data-1.ttl>']], 'result': ['<group04.srx>'], 'comment': {'rdfs:comment': '"Grouping with expression"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Grouping', 'manifest': 'sparql11/data-sparql11/grouping/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/grouping', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<group04.rq>'], ['qt:data', '<group-data-1.ttl>']]
		result = ['<group04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = group05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<group05.rq>'], ['qt:data', '<group-data-2.ttl>']]
			assigned_type_number = 3
		test = {'name': 'group05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Group-5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<group05.rq>'], ['qt:data', '<group-data-2.ttl>']], 'result': ['<group05.srx>'], 'comment': {'rdfs:comment': '"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Grouping', 'manifest': 'sparql11/data-sparql11/grouping/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/grouping', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<group05.rq>'], ['qt:data', '<group-data-2.ttl>']]
		result = ['<group05.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = group06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11;'}
			assigned_type_number = 2
		test = {'name': 'group06', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11;'}, 'mf_name': {'mf:name': '"Group-6"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['mf:action', '<group06.rq>']], 'result': [], 'comment': {'rdfs:comment': '"projection of ungrouped variable";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Grouping', 'manifest': 'sparql11/data-sparql11/grouping/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/grouping', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<group06.rq>']]
		result = []

		name = group07
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11;'}
			assigned_type_number = 2
		test = {'name': 'group07', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11;'}, 'mf_name': {'mf:name': '"Group-7"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['mf:action', '<group07.rq>']], 'result': [], 'comment': {'rdfs:comment': '"projection of ungrouped variable, more complex example than Group-6";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Grouping', 'manifest': 'sparql11/data-sparql11/grouping/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/grouping', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<group07.rq>']]
		result = []
Parsing sparql11/data-sparql11/grouping/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/http-rdf-update/manifest.ttl
Parsing.....
[parse_manifest] WARNING: tests_number[19] != expected_tests [0] :: 
[parse_manifest] WARNING: expected_tests[0] != tests__names [19] :: 
	Abnormal tests naming found. Refactoring tests_names to tests_header_names
	tests_header_names = ['gsp:put__initial_state', 'gsp:get_of_put__initial_state', 'gsp:put__graph_already_in_store', 'gsp:get_of_put__graph_already_in_store', 'gsp:put__default_graph', 'gsp:get_of_put__default_graph', 'gsp:put__mismatched_payload', 'gsp:delete__existing_graph', 'gsp:get_of_delete__existing_graph', 'gsp:delete__nonexistent_graph', 'gsp:post__existing_graph', 'gsp:get_of_post__existing_graph', 'gsp:post__multipart_formdata', 'gsp:get_of_post__multipart_formdata', 'gsp:post__create__new_graph', 'gsp:get_of_post__create__new_graph', 'gsp:get_of_post__after_noop', 'gsp:head_on_an_existing_graph', 'gsp:head_on_a_nonexisting_graph']

		name = gsp:delete__existing_graph
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:delete__existing_graph', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"DELETE - existing graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    DELETE $GRAPHSTORE$/person/2.ttl HTTP/1.1\n', '    Host: $HOST$\n'], 'response': ['#### Response\n', '    200 OK\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    DELETE $GRAPHSTORE$/person/2.ttl HTTP/1.1\n', '    Host: $HOST$\n']
			response = ['#### Response\n', '    200 OK\n', '    """ .\n']
		result = []

		name = gsp:delete__nonexistent_graph
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:delete__nonexistent_graph', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"DELETE - non-existent graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    DELETE $GRAPHSTORE$/person/2.ttl HTTP/1.1\n', '    Host: $HOST$\n'], 'response': ['#### Response\n', '    404 Not Found\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    DELETE $GRAPHSTORE$/person/2.ttl HTTP/1.1\n', '    Host: $HOST$\n']
			response = ['#### Response\n', '    404 Not Found\n', '    """ .\n']
		result = []

		name = gsp:get_of_delete__existing_graph
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:get_of_delete__existing_graph', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"GET of DELETE - existing graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET $GRAPHSTORE$/person/2.ttl HTTP/1.1\n', '    Host: $HOST$\n'], 'response': ['#### Response\n', '    404 Not Found\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET $GRAPHSTORE$/person/2.ttl HTTP/1.1\n', '    Host: $HOST$\n']
			response = ['#### Response\n', '    404 Not Found\n', '    """ .\n']
		result = []

		name = gsp:get_of_post__after_noop
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:get_of_post__after_noop', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"GET of POST - after noop"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET $NEWPATH$ HTTP/1.1\n', '    Host: $HOST$\n', '    Accept: text/turtle\n'], 'response': ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    []  a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:given-name "Alice"\n', '        ] .\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET $NEWPATH$ HTTP/1.1\n', '    Host: $HOST$\n', '    Accept: text/turtle\n']
			response = ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    []  a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:given-name "Alice"\n', '        ] .\n', '    """ .\n']
		result = []

		name = gsp:get_of_post__create__new_graph
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:get_of_post__create__new_graph', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"GET of POST - create new graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET $NEWPATH$ HTTP/1.1\n', '    Host: $HOST$\n', '    Accept: text/turtle\n'], 'response': ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    []  a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:given-name "Alice"\n', '        ] .\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET $NEWPATH$ HTTP/1.1\n', '    Host: $HOST$\n', '    Accept: text/turtle\n']
			response = ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    []  a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:given-name "Alice"\n', '        ] .\n', '    """ .\n']
		result = []

		name = gsp:get_of_post__existing_graph
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:get_of_post__existing_graph', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"GET of POST - existing graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> foaf:name "Jane Doe"\n'], 'response': ['#### Response\n', '    200 OK\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> foaf:name "Jane Doe"\n']
			response = ['#### Response\n', '    200 OK\n', '    """ .\n']
		result = []

		name = gsp:get_of_post__multipart_formdata
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:get_of_post__multipart_formdata', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"GET of POST - multipart/form-data"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n'], 'response': ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '        foaf:name           "Jane Doe";\n', '        foaf:givenName      "Jane";\n', '        foaf:familyName     "Doe";\n', '        foaf:businessCard [\n', '            a               v:VCard;\n', '            v:fn            "Jane Doe"\n', '        ] .\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n']
			response = ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '        foaf:name           "Jane Doe";\n', '        foaf:givenName      "Jane";\n', '        foaf:familyName     "Doe";\n', '        foaf:businessCard [\n', '            a               v:VCard;\n', '            v:fn            "Jane Doe"\n', '        ] .\n', '    """ .\n']
		result = []

		name = gsp:get_of_put__default_graph
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:get_of_put__default_graph', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"GET of PUT - default graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET $GRAPHSTORE$?default HTTP/1.1\n', '    Host: $HOST$\n', '    Accept: text/turtle\n'], 'response': ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    []  a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:given-name "Alice"\n', '        ] .\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET $GRAPHSTORE$?default HTTP/1.1\n', '    Host: $HOST$\n', '    Accept: text/turtle\n']
			response = ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    []  a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:given-name "Alice"\n', '        ] .\n', '    """ .\n']
		result = []

		name = gsp:get_of_put__graph_already_in_store
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:get_of_put__graph_already_in_store', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"GET of PUT - graph already in store"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Accept: text/turtle\n'], 'response': ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '       foaf:businessCard [\n', '            a v:VCard;\n', '            v:fn "Jane Doe"\n', '       ] .\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Accept: text/turtle\n']
			response = ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '       foaf:businessCard [\n', '            a v:VCard;\n', '            v:fn "Jane Doe"\n', '       ] .\n', '    """ .\n']
		result = []

		name = gsp:get_of_put__initial_state
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:get_of_put__initial_state', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"GET of PUT - Initial state"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET $GRAPHSTORE$?graph=$GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Accept: text/turtle\n'], 'response': ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '       foaf:businessCard [\n', '            a v:VCard;\n', '            v:fn "John Doe"\n', '       ].\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET $GRAPHSTORE$?graph=$GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Accept: text/turtle\n']
			response = ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '       foaf:businessCard [\n', '            a v:VCard;\n', '            v:fn "John Doe"\n', '       ].\n', '    """ .\n']
		result = []

		name = gsp:head_on_a_nonexisting_graph
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:head_on_a_nonexisting_graph', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"HEAD on a non-existing graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    HEAD $GRAPHSTORE$/person/4.ttl HTTP/1.1\n', '    Host: $HOST$\n'], 'response': ['#### Response\n', '    404 Not Found\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    HEAD $GRAPHSTORE$/person/4.ttl HTTP/1.1\n', '    Host: $HOST$\n']
			response = ['#### Response\n', '    404 Not Found\n', '    """ .\n']
		result = []

		name = gsp:head_on_an_existing_graph
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:head_on_an_existing_graph', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"HEAD on an existing graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    HEAD $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n'], 'response': ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    HEAD $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n']
			response = ['#### Response\n', '    200 OK\n', '    Content-Type: text/turtle; charset=utf-8\n', '    Content-Length: ...\n', '    """ .\n']
		result = []

		name = gsp:post__create__new_graph
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:post__create__new_graph', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"POST - create new graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST $GRAPHSTORE$ HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    []  a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:given-name "Alice"\n', '        ] .\n'], 'response': ['#### Response\n', '    201 Created\n', '    Location: $NEWPATH$\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST $GRAPHSTORE$ HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    []  a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:given-name "Alice"\n', '        ] .\n']
			response = ['#### Response\n', '    201 Created\n', '    Location: $NEWPATH$\n', '    """ .\n']
		result = []

		name = gsp:post__existing_graph
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:post__existing_graph', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"POST - existing graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = []
			response = []
		result = []

		name = gsp:post__multipart_formdata
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:post__multipart_formdata', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"POST - multipart/form-data"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: multipart/form-data; boundary=a6fe4cd636164618814be9f8d3d1a0de\n', '    --a6fe4cd636164618814be9f8d3d1a0de\n', '    Content-Disposition: form-data; name="lastName.ttl"; filename="lastName.ttl"\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> foaf:familyName "Doe"\n', '    --a6fe4cd636164618814be9f8d3d1a0de\n', '    Content-Disposition: form-data; name="firstName.ttl"; filename="firstName.ttl"\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> foaf:givenName "Jane"\n', '    --a6fe4cd636164618814be9f8d3d1a0de--\n'], 'response': ['#### Response\n', '    200 OK\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: multipart/form-data; boundary=a6fe4cd636164618814be9f8d3d1a0de\n', '    --a6fe4cd636164618814be9f8d3d1a0de\n', '    Content-Disposition: form-data; name="lastName.ttl"; filename="lastName.ttl"\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> foaf:familyName "Doe"\n', '    --a6fe4cd636164618814be9f8d3d1a0de\n', '    Content-Disposition: form-data; name="firstName.ttl"; filename="firstName.ttl"\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> foaf:givenName "Jane"\n', '    --a6fe4cd636164618814be9f8d3d1a0de--\n']
			response = ['#### Response\n', '    200 OK\n', '    """ .\n']
		result = []

		name = gsp:put__default_graph
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:put__default_graph', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"PUT - default graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    PUT $GRAPHSTORE$?default HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    []  a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:given-name "Alice"\n', '        ] .\n'], 'response': ['#### Response\n', '    201 Created\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    PUT $GRAPHSTORE$?default HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    []  a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:given-name "Alice"\n', '        ] .\n']
			response = ['#### Response\n', '    201 Created\n', '    """ .\n']
		result = []

		name = gsp:put__graph_already_in_store
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:put__graph_already_in_store', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"PUT - graph already in store"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    PUT $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:fn "Jane Doe"\n', '        ].\n'], 'response': ['#### Response\n', '    204 No Content\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    PUT $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:fn "Jane Doe"\n', '        ].\n']
			response = ['#### Response\n', '    204 No Content\n', '    """ .\n']
		result = []

		name = gsp:put__initial_state
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:put__initial_state', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"PUT - Initial state"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    PUT $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:fn "John Doe"\n', '        ].\n'], 'response': ['#### Response\n', '`201 Created`\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    PUT $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:fn "John Doe"\n', '        ].\n']
			response = ['#### Response\n', '`201 Created`\n', '    """ .\n']
		result = []

		name = gsp:put__mismatched_payload
		 »» Empty result-test ««
		type = {'a': 'mf:GraphStoreProtocolTest;'}
			assigned_type_number = 11
		test = {'name': 'gsp:put__mismatched_payload', 'type': {'a': 'mf:GraphStoreProtocolTest;'}, 'mf_name': {'mf:name': '"PUT - mismatched payload"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawg:approval': 'dawg:Approved;'}, '_approval_by': {'dawg:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-11-27#resolution_3>;'}, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    PUT $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:fn "Jane Doe"\n', '        ].\n'], 'response': ['#### Response\n', '    400 Bad Request\n', '    """ .\n'], 'label': 'SPARQL Graph Store Protocol', 'manifest': 'sparql11/data-sparql11/http-rdf-update/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/http-rdf-update', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    PUT $GRAPHSTORE$/person/1.ttl HTTP/1.1\n', '    Host: $HOST$\n', '    Content-Type: text/turtle; charset=utf-8\n', '    @prefix foaf: <http://xmlns.com/foaf/0.1/> .\n', '    @prefix v: <http://www.w3.org/2006/vcard/ns#> .\n', '    <http://$HOST$/$GRAPHSTORE$/person/1> a foaf:Person;\n', '        foaf:businessCard [\n', '            a v:VCard;\n', '            v:fn "Jane Doe"\n', '        ].\n']
			response = ['#### Response\n', '    400 Bad Request\n', '    """ .\n']
		result = []
Parsing sparql11/data-sparql11/http-rdf-update/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/json-res/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[4] == expected_tests [4] :: 
[parse_manifest] INFO: expected_tests[4] == tests__names [4] :: 

		name = jsonres01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<jsonres01.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'jsonres01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"jsonres01 - JSON Result Format"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-08-16#resolution_2>;'}, 'actions': [['qt:query', '<jsonres01.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<jsonres01.srj>'], 'comment': {'rdfs:comment': '"SELECT * WHERE { ?S ?P ?O }";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'JSON Result Format', 'manifest': 'sparql11/data-sparql11/json-res/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/json-res', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<jsonres01.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<jsonres01.srj>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_srj

		name = jsonres02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<jsonres02.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'jsonres02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"jsonres02 - JSON Result Format"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-08-16#resolution_2>;'}, 'actions': [['qt:query', '<jsonres02.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<jsonres02.srj>'], 'comment': {'rdfs:comment': '"SELECT with OPTIONAL (i.e. not all vars bound in all results)";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'JSON Result Format', 'manifest': 'sparql11/data-sparql11/json-res/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/json-res', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<jsonres02.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<jsonres02.srj>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_srj

		name = jsonres03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<jsonres03.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'jsonres03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"jsonres03 - JSON Result Format"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-08-16#resolution_2>;'}, 'actions': [['qt:query', '<jsonres03.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<jsonres03.srj>'], 'comment': {'rdfs:comment': '"ASK - answer: true";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'JSON Result Format', 'manifest': 'sparql11/data-sparql11/json-res/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/json-res', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<jsonres03.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<jsonres03.srj>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_srj

		name = jsonres04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<jsonres04.rq>'], ['qt:data', '<data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'jsonres04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"jsonres04 - JSON Result Format"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-08-16#resolution_2>;'}, 'actions': [['qt:query', '<jsonres04.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<jsonres04.srj>'], 'comment': {'rdfs:comment': '"ASK - answer: false";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'JSON Result Format', 'manifest': 'sparql11/data-sparql11/json-res/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/json-res', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<jsonres04.rq>'], ['qt:data', '<data.ttl>']]
		result = ['<jsonres04.srj>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_srj
Parsing sparql11/data-sparql11/json-res/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/move/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[6] == expected_tests [6] :: 
[parse_manifest] INFO: expected_tests[6] == tests__names [6] :: 

		name = move01
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'move01', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"MOVE 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<move-01.ru>'], ['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['graphData', [['ut:graph', '<move-default.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Move the default graph to an existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Move', 'manifest': 'sparql11/data-sparql11/move/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/move', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<move-01.ru>'], ['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['graphData', [['ut:graph', '<move-default.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = move02
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'move02', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"MOVE 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<move-01.ru>'], ['ut:data', '<move-default.ttl>']], 'result': [['graphData', [['ut:graph', '<move-default.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Move the default graph to a non-existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Move', 'manifest': 'sparql11/data-sparql11/move/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/move', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<move-01.ru>'], ['ut:data', '<move-default.ttl>']]
		result = [['graphData', [['ut:graph', '<move-default.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = move03
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'move03', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"MOVE 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<move-03.ru>'], ['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<move-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"Move a named graph to an existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Move', 'manifest': 'sparql11/data-sparql11/move/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/move', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<move-03.ru>'], ['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]], ['graphData', [['ut:graph', '<move-02.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = move04
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'move04', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"MOVE 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<move-03.ru>'], ['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"Move a named graph to a non-existing graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Move', 'manifest': 'sparql11/data-sparql11/move/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/move', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<move-03.ru>'], ['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = move06
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'move06', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"MOVE 6"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<move-06.ru>'], ['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<move-01.ttl>']], 'comment': {'rdfs:comment': '"Move an existing graph to the default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Move', 'manifest': 'sparql11/data-sparql11/move/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/move', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<move-06.ru>'], ['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<move-01.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = move07
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'move07', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"MOVE 7"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-22#resolution_2>'}, 'actions': [['ut:request', '<move-07.ru>'], ['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Move a graph to itself"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Move', 'manifest': 'sparql11/data-sparql11/move/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/move', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<move-07.ru>'], ['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['ut:data', '<move-default.ttl>'], ['graphData', [['ut:graph', '<move-01.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result
Parsing sparql11/data-sparql11/move/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/negation/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[11] == expected_tests [11] :: 
[parse_manifest] INFO: expected_tests[11] == tests__names [11] :: 

		name = subset-by-exclusion-nex-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<subsetByExcl01.rq>'], ['qt:data', '<subsetByExcl.ttl>']]
			assigned_type_number = 3
		test = {'name': 'subset-by-exclusion-nex-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Subsets by exclusion (NOT EXISTS)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<subsetByExcl01.rq>'], ['qt:data', '<subsetByExcl.ttl>']], 'result': ['<subsetByExcl01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Negation', 'manifest': 'sparql11/data-sparql11/negation/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/negation', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<subsetByExcl01.rq>'], ['qt:data', '<subsetByExcl.ttl>']]
		result = ['<subsetByExcl01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subset-by-exclusion-minus-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<subsetByExcl02.rq>'], ['qt:data', '<subsetByExcl.ttl>']]
			assigned_type_number = 3
		test = {'name': 'subset-by-exclusion-minus-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Subsets by exclusion (MINUS)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<subsetByExcl02.rq>'], ['qt:data', '<subsetByExcl.ttl>']], 'result': ['<subsetByExcl02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Negation', 'manifest': 'sparql11/data-sparql11/negation/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/negation', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<subsetByExcl02.rq>'], ['qt:data', '<subsetByExcl.ttl>']]
		result = ['<subsetByExcl02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = temporal-proximity-by-exclusion-nex-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<temporalProximity01.rq>'], ['qt:data', '<temporalProximity01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'temporal-proximity-by-exclusion-nex-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Medical, temporal proximity by exclusion (NOT EXISTS)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<temporalProximity01.rq>'], ['qt:data', '<temporalProximity01.ttl>']], 'result': ['<temporalProximity01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Negation', 'manifest': 'sparql11/data-sparql11/negation/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/negation', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<temporalProximity01.rq>'], ['qt:data', '<temporalProximity01.ttl>']]
		result = ['<temporalProximity01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subset-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<subset-01.rq>'], ['qt:data', '<set-data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'subset-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Calculate which sets are subsets of others (include A subsetOf A)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<subset-01.rq>'], ['qt:data', '<set-data.ttl>']], 'result': ['<subset-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Negation', 'manifest': 'sparql11/data-sparql11/negation/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/negation', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<subset-01.rq>'], ['qt:data', '<set-data.ttl>']]
		result = ['<subset-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subset-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<subset-02.rq>'], ['qt:data', '<set-data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'subset-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Calculate which sets are subsets of others (exclude A subsetOf A)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<subset-02.rq>'], ['qt:data', '<set-data.ttl>']], 'result': ['<subset-02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Negation', 'manifest': 'sparql11/data-sparql11/negation/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/negation', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<subset-02.rq>'], ['qt:data', '<set-data.ttl>']]
		result = ['<subset-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = set-equals-1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<set-equals-1.rq>'], ['qt:data', '<set-data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'set-equals-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Calculate which sets have the same elements"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<set-equals-1.rq>'], ['qt:data', '<set-data.ttl>']], 'result': ['<set-equals-1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Negation', 'manifest': 'sparql11/data-sparql11/negation/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/negation', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<set-equals-1.rq>'], ['qt:data', '<set-data.ttl>']]
		result = ['<set-equals-1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subset-03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<subset-03.rq>'], ['qt:data', '<set-data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'subset-03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Calculate proper subset"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<subset-03.rq>'], ['qt:data', '<set-data.ttl>']], 'result': ['<subset-03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Negation', 'manifest': 'sparql11/data-sparql11/negation/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/negation', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<subset-03.rq>'], ['qt:data', '<set-data.ttl>']]
		result = ['<subset-03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = exists-01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<exists-01.rq>'], ['qt:data', '<set-data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'exists-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Positive EXISTS 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<exists-01.rq>'], ['qt:data', '<set-data.ttl>']], 'result': ['<exists-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Negation', 'manifest': 'sparql11/data-sparql11/negation/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/negation', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<exists-01.rq>'], ['qt:data', '<set-data.ttl>']]
		result = ['<exists-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = exists-02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<exists-02.rq>'], ['qt:data', '<set-data.ttl>']]
			assigned_type_number = 3
		test = {'name': 'exists-02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Positive EXISTS 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<exists-02.rq>'], ['qt:data', '<set-data.ttl>']], 'result': ['<exists-02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Negation', 'manifest': 'sparql11/data-sparql11/negation/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/negation', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<exists-02.rq>'], ['qt:data', '<set-data.ttl>']]
		result = ['<exists-02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = full-minuend
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<full-minuend.rq>'], ['qt:data', '<full-minuend.ttl>']]
			assigned_type_number = 3
		test = {'name': 'full-minuend', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Subtraction with MINUS from a fully bound minuend"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': None, 'actions': [['qt:query', '<full-minuend.rq>'], ['qt:data', '<full-minuend.ttl>']], 'result': ['<full-minuend.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Negation', 'manifest': 'sparql11/data-sparql11/negation/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/negation', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<full-minuend.rq>'], ['qt:data', '<full-minuend.ttl>']]
		result = ['<full-minuend.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = partial-minuend
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<part-minuend.rq>'], ['qt:data', '<part-minuend.ttl>']]
			assigned_type_number = 3
		test = {'name': 'partial-minuend', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Subtraction with MINUS from a partially bound minuend"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': None, 'actions': [['qt:query', '<part-minuend.rq>'], ['qt:data', '<part-minuend.ttl>']], 'result': ['<part-minuend.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Negation', 'manifest': 'sparql11/data-sparql11/negation/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/negation', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<part-minuend.rq>'], ['qt:data', '<part-minuend.ttl>']]
		result = ['<part-minuend.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-sparql11/negation/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/project-expression/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[7] == expected_tests [7] :: 
[parse_manifest] INFO: expected_tests[7] == tests__names [7] :: 

		name = projexp01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<projexp01.rq>'], ['qt:data', '<projexp01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'projexp01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Expression is equality"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_3>'}, 'actions': [['qt:query', '<projexp01.rq>'], ['qt:data', '<projexp01.ttl>']], 'result': ['<projexp01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Project Expression', 'manifest': 'sparql11/data-sparql11/project-expression/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/project-expression', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<projexp01.rq>'], ['qt:data', '<projexp01.ttl>']]
		result = ['<projexp01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = projexp02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<projexp02.rq>'], ['qt:data', '<projexp02.ttl>']]
			assigned_type_number = 3
		test = {'name': 'projexp02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Expression raise an error"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_3>'}, 'actions': [['qt:query', '<projexp02.rq>'], ['qt:data', '<projexp02.ttl>']], 'result': ['<projexp02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Project Expression', 'manifest': 'sparql11/data-sparql11/project-expression/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/project-expression', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<projexp02.rq>'], ['qt:data', '<projexp02.ttl>']]
		result = ['<projexp02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = projexp03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<projexp03.rq>'], ['qt:data', '<projexp03.ttl>']]
			assigned_type_number = 3
		test = {'name': 'projexp03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Reuse a project expression variable in select"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_3>'}, 'actions': [['qt:query', '<projexp03.rq>'], ['qt:data', '<projexp03.ttl>']], 'result': ['<projexp03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Project Expression', 'manifest': 'sparql11/data-sparql11/project-expression/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/project-expression', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<projexp03.rq>'], ['qt:data', '<projexp03.ttl>']]
		result = ['<projexp03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = projexp04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<projexp04.rq>'], ['qt:data', '<projexp04.ttl>']]
			assigned_type_number = 3
		test = {'name': 'projexp04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Reuse a project expression variable in order by"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_3>'}, 'actions': [['qt:query', '<projexp04.rq>'], ['qt:data', '<projexp04.ttl>']], 'result': ['<projexp04.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Project Expression', 'manifest': 'sparql11/data-sparql11/project-expression/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/project-expression', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<projexp04.rq>'], ['qt:data', '<projexp04.ttl>']]
		result = ['<projexp04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = projexp05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<projexp05.rq>'], ['qt:data', '<projexp05.ttl>']]
			assigned_type_number = 3
		test = {'name': 'projexp05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Expression may return no value"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_3>'}, 'actions': [['qt:query', '<projexp05.rq>'], ['qt:data', '<projexp05.ttl>']], 'result': ['<projexp05.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Project Expression', 'manifest': 'sparql11/data-sparql11/project-expression/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/project-expression', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<projexp05.rq>'], ['qt:data', '<projexp05.ttl>']]
		result = ['<projexp05.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = projexp06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<projexp06.rq>'], ['qt:data', '<projexp06.ttl>']]
			assigned_type_number = 3
		test = {'name': 'projexp06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Expression has undefined variable"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_3>'}, 'actions': [['qt:query', '<projexp06.rq>'], ['qt:data', '<projexp06.ttl>']], 'result': ['<projexp06.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Project Expression', 'manifest': 'sparql11/data-sparql11/project-expression/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/project-expression', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<projexp06.rq>'], ['qt:data', '<projexp06.ttl>']]
		result = ['<projexp06.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = projexp07
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<projexp07.rq>'], ['qt:data', '<projexp07.ttl>']]
			assigned_type_number = 3
		test = {'name': 'projexp07', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Expression has variable that may be unbound"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-09-07#resolution_3>'}, 'actions': [['qt:query', '<projexp07.rq>'], ['qt:data', '<projexp07.ttl>']], 'result': ['<projexp07.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Project Expression', 'manifest': 'sparql11/data-sparql11/project-expression/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/project-expression', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<projexp07.rq>'], ['qt:data', '<projexp07.ttl>']]
		result = ['<projexp07.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-sparql11/project-expression/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/property-path/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[24] == expected_tests [24] :: 
[parse_manifest] INFO: expected_tests[24] == tests__names [24] :: 

		name = pp01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp01.rq>'], ['qt:data', '<pp01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp01) Simple path"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<pp01.rq>'], ['qt:data', '<pp01.ttl>']], 'result': ['<pp01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp01.rq>'], ['qt:data', '<pp01.ttl>']]
		result = ['<pp01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp02.rq>'], ['qt:data', '<pp01.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp02) Star path"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<pp02.rq>'], ['qt:data', '<pp01.ttl>']], 'result': ['<pp02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp02.rq>'], ['qt:data', '<pp01.ttl>']]
		result = ['<pp02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp03.rq>'], ['qt:data', '<pp03.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp03) Simple path with loop"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<pp03.rq>'], ['qt:data', '<pp03.ttl>']], 'result': ['<pp03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp03.rq>'], ['qt:data', '<pp03.ttl>']]
		result = ['<pp03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp06.rq>'], ['qt:graphData', '<pp061.ttl>,']]
			assigned_type_number = 3
		test = {'name': 'pp06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp06) Path with two graphs"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<pp06.rq>'], ['qt:graphData', '<pp061.ttl>,']], 'result': ['<pp06.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp06.rq>'], ['qt:graphData', '<pp061.ttl>,']]
		result = ['<pp06.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = pp07
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp06.rq>'], ['qt:graphData', '<pp07.ttl>]']]
			assigned_type_number = 3
		test = {'name': 'pp07', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp07) Path with one graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<pp06.rq>'], ['qt:graphData', '<pp07.ttl>]']], 'result': ['<pp07.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp06.rq>'], ['qt:graphData', '<pp07.ttl>]']]
		result = ['<pp07.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = pp08
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp08.rq>'], ['qt:data', '<pp08.ttl>]']]
			assigned_type_number = 3
		test = {'name': 'pp08', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp08) Reverse path"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<pp08.rq>'], ['qt:data', '<pp08.ttl>]']], 'result': ['<pp08.srx>'], 'comment': {}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp08.rq>'], ['qt:data', '<pp08.ttl>]']]
		result = ['<pp08.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp09
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp09.rq>'], ['qt:data', '<pp09.ttl>]']]
			assigned_type_number = 3
		test = {'name': 'pp09', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp09) Reverse sequence path"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<pp09.rq>'], ['qt:data', '<pp09.ttl>]']], 'result': ['<pp09.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp09.rq>'], ['qt:data', '<pp09.ttl>]']]
		result = ['<pp09.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp10
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp10.rq>'], ['qt:data', '<pp10.ttl>]']]
			assigned_type_number = 3
		test = {'name': 'pp10', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp10) Path with negation"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<pp10.rq>'], ['qt:data', '<pp10.ttl>]']], 'result': ['<pp10.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp10.rq>'], ['qt:data', '<pp10.ttl>]']]
		result = ['<pp10.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp11
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp11.rq>'], ['qt:data', '<pp11.ttl>]']]
			assigned_type_number = 3
		test = {'name': 'pp11', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp11) Simple path and two paths to same target node"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<pp11.rq>'], ['qt:data', '<pp11.ttl>]']], 'result': ['<pp11.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp11.rq>'], ['qt:data', '<pp11.ttl>]']]
		result = ['<pp11.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp12
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp12.rq>'], ['qt:data', '<pp11.ttl>]']]
			assigned_type_number = 3
		test = {'name': 'pp12', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp12) Variable length path and two paths to same target node"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-15#resolution_2>'}, 'actions': [['qt:query', '<pp12.rq>'], ['qt:data', '<pp11.ttl>]']], 'result': ['<pp12.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp12.rq>'], ['qt:data', '<pp11.ttl>]']]
		result = ['<pp12.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp14
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp14.rq>'], ['qt:data', '<pp14.ttl>]']]
			assigned_type_number = 3
		test = {'name': 'pp14', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp14) Star path over foaf:knows"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<pp14.rq>'], ['qt:data', '<pp14.ttl>]']], 'result': ['<pp14.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp14.rq>'], ['qt:data', '<pp14.ttl>]']]
		result = ['<pp14.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp16
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp14.rq>'], ['qt:data', '<pp16.ttl>]']]
			assigned_type_number = 3
		test = {'name': 'pp16', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp16) Duplicate paths and cycles through foaf:knows*"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-15#resolution_2>'}, 'actions': [['qt:query', '<pp14.rq>'], ['qt:data', '<pp16.ttl>]']], 'result': ['<pp16.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp14.rq>'], ['qt:data', '<pp16.ttl>]']]
		result = ['<pp16.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp21
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<path-2-2.rq>'], ['qt:data', '<data-diamond.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp21', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp21) Diamond -- :p+"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-15#resolution_2>'}, 'actions': [['qt:query', '<path-2-2.rq>'], ['qt:data', '<data-diamond.ttl>']], 'result': ['<diamond-2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<path-2-2.rq>'], ['qt:data', '<data-diamond.ttl>']]
		result = ['<diamond-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp23
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<path-2-2.rq>'], ['qt:data', '<data-diamond-tail.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp23', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp23) Diamond, with tail -- :p+"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-15#resolution_2>'}, 'actions': [['qt:query', '<path-2-2.rq>'], ['qt:data', '<data-diamond-tail.ttl>']], 'result': ['<diamond-tail-2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<path-2-2.rq>'], ['qt:data', '<data-diamond-tail.ttl>']]
		result = ['<diamond-tail-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp25
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<path-2-2.rq>'], ['qt:data', '<data-diamond-loop.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp25', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp25) Diamond, with loop -- :p+"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-15#resolution_2>'}, 'actions': [['qt:query', '<path-2-2.rq>'], ['qt:data', '<data-diamond-loop.ttl>']], 'result': ['<diamond-loop-2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<path-2-2.rq>'], ['qt:data', '<data-diamond-loop.ttl>']]
		result = ['<diamond-loop-2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp28a
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<path-3-3.rq>'], ['qt:data', '<data-diamond-loop.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp28a', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp28a) Diamond, with loop -- (:p/:p)?"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['qt:query', '<path-3-3.rq>'], ['qt:data', '<data-diamond-loop.ttl>']], 'result': ['<diamond-loop-5a.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<path-3-3.rq>'], ['qt:data', '<data-diamond-loop.ttl>']]
		result = ['<diamond-loop-5a.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp30
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<path-p1.rq>'], ['qt:data', '<path-p1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp30', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp30) Operator precedence 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<path-p1.rq>'], ['qt:data', '<path-p1.ttl>']], 'result': ['<path-p1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<path-p1.rq>'], ['qt:data', '<path-p1.ttl>']]
		result = ['<path-p1.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp31
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<path-p2.rq>'], ['qt:data', '<path-p1.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp31', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp31) Operator precedence 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<path-p2.rq>'], ['qt:data', '<path-p1.ttl>']], 'result': ['<path-p2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<path-p2.rq>'], ['qt:data', '<path-p1.ttl>']]
		result = ['<path-p2.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp32
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<path-p3.rq>'], ['qt:data', '<path-p3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp32', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp32) Operator precedence 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<path-p3.rq>'], ['qt:data', '<path-p3.ttl>']], 'result': ['<path-p3.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<path-p3.rq>'], ['qt:data', '<path-p3.ttl>']]
		result = ['<path-p3.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp33
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<path-p4.rq>'], ['qt:data', '<path-p3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp33', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp33) Operator precedence 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-03-29#resolution_3>'}, 'actions': [['qt:query', '<path-p4.rq>'], ['qt:data', '<path-p3.ttl>']], 'result': ['<path-p4.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<path-p4.rq>'], ['qt:data', '<path-p3.ttl>']]
		result = ['<path-p4.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp34
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<path-ng-01.rq>'], ['qt:graphData', '<ng-01.ttl>'], ['qt:graphData', '<ng-02.ttl>'], ['qt:graphData', '<ng-03.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp34', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp34) Named Graph 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['qt:query', '<path-ng-01.rq>'], ['qt:graphData', '<ng-01.ttl>'], ['qt:graphData', '<ng-02.ttl>'], ['qt:graphData', '<ng-03.ttl>']], 'result': ['<path-ng-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<path-ng-01.rq>'], ['qt:graphData', '<ng-01.ttl>'], ['qt:graphData', '<ng-02.ttl>'], ['qt:graphData', '<ng-03.ttl>']]
		result = ['<path-ng-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = pp35
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<path-ng-02.rq>'], ['qt:graphData', '<ng-01.ttl>'], ['qt:graphData', '<ng-02.ttl>'], ['qt:graphData', '<ng-03.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp35', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp35) Named Graph 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['qt:query', '<path-ng-02.rq>'], ['qt:graphData', '<ng-01.ttl>'], ['qt:graphData', '<ng-02.ttl>'], ['qt:graphData', '<ng-03.ttl>']], 'result': ['<path-ng-01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<path-ng-02.rq>'], ['qt:graphData', '<ng-01.ttl>'], ['qt:graphData', '<ng-02.ttl>'], ['qt:graphData', '<ng-03.ttl>']]
		result = ['<path-ng-01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = pp36
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp36.rq>'], ['qt:data', '<clique3.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp36', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp36) Arbitrary path with bound endpoints"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-15#resolution_2>'}, 'actions': [['qt:query', '<pp36.rq>'], ['qt:data', '<clique3.ttl>']], 'result': ['<pp36.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp36.rq>'], ['qt:data', '<clique3.ttl>']]
		result = ['<pp36.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = pp37
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<pp37.rq>'], ['qt:data', '<pp37.ttl>']]
			assigned_type_number = 3
		test = {'name': 'pp37', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"(pp37) Nested (*)*"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-05-15#resolution_2>'}, 'actions': [['qt:query', '<pp37.rq>'], ['qt:data', '<pp37.ttl>']], 'result': ['<pp37.srx>'], 'comment': {'rdfs:comment': '"Test case as per http://lists.w3.org/Archives/Public/public-rdf-dawg-comments/2012Feb/0006.html"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Property Path', 'manifest': 'sparql11/data-sparql11/property-path/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/property-path', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<pp37.rq>'], ['qt:data', '<pp37.ttl>']]
		result = ['<pp37.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-sparql11/property-path/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/protocol/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[34] == expected_tests [34] :: 
[parse_manifest] INFO: expected_tests[34] == tests__names [34] :: 

		name = query_post_form
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_post_form', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"query via URL-encoded POST"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/x-www-url-form-urlencoded\n', '    Content-Length: XXX\n', '    query=ASK%20%7B%7D\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/x-www-url-form-urlencoded\n', '    Content-Length: XXX\n', '    query=ASK%20%7B%7D\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_dataset_default_graphs_get
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_dataset_default_graphs_get', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"GET query with protocol-specified default graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET /sparql?query=ASK%20%7B%20%3Chttp%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf%3E%20a%20%3Ftype%20.%20%3Chttp%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf%3E%20a%20%3Ftype%20.%20%7D&default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET /sparql?query=ASK%20%7B%20%3Chttp%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf%3E%20a%20%3Ftype%20.%20%3Chttp%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf%3E%20a%20%3Ftype%20.%20%7D&default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_dataset_default_graphs_post
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_dataset_default_graphs_post', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"POST query with protocol-specified default graphs"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/?default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK { <http://kasei.us/2009/09/sparql/data/data1.rdf> ?p ?o . <http://kasei.us/2009/09/sparql/data/data2.rdf> ?p ?o }\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/?default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK { <http://kasei.us/2009/09/sparql/data/data1.rdf> ?p ?o . <http://kasei.us/2009/09/sparql/data/data2.rdf> ?p ?o }\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_dataset_named_graphs_post
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_dataset_named_graphs_post', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"POST query with protocol-specified named graphs"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/?named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK { GRAPH ?g { ?s ?p ?o } }\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/?named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK { GRAPH ?g { ?s ?p ?o } }\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_dataset_named_graphs_get
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_dataset_named_graphs_get', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"GET query with protocol-specified named graphs"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET /sparql/?named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf&query=ASK%20%7B%20GRAPH%20%3Fg%20%7B%20%3Fs%20%3Fp%20%3Fo%20%7D%20%7D HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET /sparql/?named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf&query=ASK%20%7B%20GRAPH%20%3Fg%20%7B%20%3Fs%20%3Fp%20%3Fo%20%7D%20%7D HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_dataset_full
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_dataset_full', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"query with protocol-specified dataset (both named and default graphs)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/?default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata3.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    SELECT ?g ?x ?s { ?x ?y ?o  GRAPH ?g { ?s ?p ?o } }\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/?default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata3.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    SELECT ?g ?x ?s { ?x ?y ?o  GRAPH ?g { ?s ?p ?o } }\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_multiple_dataset
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_multiple_dataset', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"query specifying dataset in both query string and protocol; test for use of protocol-specified dataset"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/?default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK FROM <http://kasei.us/2009/09/sparql/data/data1.rdf> { <data1.rdf> ?p ?o }\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/?default-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK FROM <http://kasei.us/2009/09/sparql/data/data1.rdf> { <data1.rdf> ?p ?o }\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_get
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_get', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"query via GET"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET /sparql?query=ASK%20%7B%7D\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET /sparql?query=ASK%20%7B%7D\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_content_type_select
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_content_type_select', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"query appropriate content type (expect one of: XML, JSON, CSV, TSV)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    SELECT (1 AS ?value) {}\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml, application/sparql-results+json, text/tab-separated-values, or text/csv\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    SELECT (1 AS ?value) {}\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml, application/sparql-results+json, text/tab-separated-values, or text/csv\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_content_type_ask
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_content_type_ask', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"query appropriate content type (expect one of: XML, JSON)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {}\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {}\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_content_type_describe
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_content_type_describe', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"query appropriate content type (expect one of: RDF/XML, Turtle, N-Triples, RDFa)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    DESCRIBE <http://example.org/>\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/rdf+xml, application/rdf+json or text/turtle\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    DESCRIBE <http://example.org/>\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/rdf+xml, application/rdf+json or text/turtle\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_content_type_construct
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_content_type_construct', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"query appropriate content type (expect one of: RDF/XML, Turtle, N-Triples, RDFa)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    CONSTRUCT { <s> <p> 1 } WHERE {}\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/rdf+xml, application/rdf+json or text/turtle\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    CONSTRUCT { <s> <p> 1 } WHERE {}\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/rdf+xml, application/rdf+json or text/turtle\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = update_dataset_default_graph
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'update_dataset_default_graph', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"update with protocol-specified default graph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql?using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    PREFIX dc: <http://purl.org/dc/terms/>\n', '    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n', '    CLEAR ALL ;\n', '    INSERT DATA {\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> {\n', '            <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document\n', '        }\n', '    } ;\n', '    INSERT {\n', '        GRAPH <http://example.org/protocol-update-dataset-test/> {\n', '            ?s a dc:BibliographicResource\n', '        }\n', '    }\n', '    WHERE {\n', '        ?s a foaf:Document\n', '    }\n', '#### Request\n', '    POST /sparql HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Accept: application/sparql-results+xml\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {\n', '        GRAPH <http://example.org/protocol-update-dataset-test/> {\n', '            <http://kasei.us/2009/09/sparql/data/data1.rdf> a <http://purl.org/dc/terms/BibliographicResource>\n', '        }\n', '    }\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', 'followed by\n', '#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql?using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    PREFIX dc: <http://purl.org/dc/terms/>\n', '    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n', '    CLEAR ALL ;\n', '    INSERT DATA {\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> {\n', '            <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document\n', '        }\n', '    } ;\n', '    INSERT {\n', '        GRAPH <http://example.org/protocol-update-dataset-test/> {\n', '            ?s a dc:BibliographicResource\n', '        }\n', '    }\n', '    WHERE {\n', '        ?s a foaf:Document\n', '    }\n', '#### Request\n', '    POST /sparql HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Accept: application/sparql-results+xml\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {\n', '        GRAPH <http://example.org/protocol-update-dataset-test/> {\n', '            <http://kasei.us/2009/09/sparql/data/data1.rdf> a <http://purl.org/dc/terms/BibliographicResource>\n', '        }\n', '    }\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', 'followed by\n', '#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = update_dataset_default_graphs
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'update_dataset_default_graphs', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"update with protocol-specified default graphs"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql?using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    PREFIX dc: <http://purl.org/dc/terms/>\n', '    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n', '    CLEAR ALL ;\n', '    INSERT DATA {\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> { <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data2.rdf> { <http://kasei.us/2009/09/sparql/data/data2.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data3.rdf> { <http://kasei.us/2009/09/sparql/data/data3.rdf> a foaf:Document }\n', '    } ;\n', '    INSERT {\n', '        GRAPH <http://example.org/protocol-update-dataset-graphs-test/> {\n', '            ?s a dc:BibliographicResource\n', '        }\n', '    }\n', '    WHERE {\n', '        ?s a foaf:Document\n', '    }\n', '#### Request\n', '    POST /sparql HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Accept: application/sparql-results+xml\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {\n', '        GRAPH <http://example.org/protocol-update-dataset-graphs-test/> {\n', '            <http://kasei.us/2009/09/sparql/data/data1.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '            <http://kasei.us/2009/09/sparql/data/data2.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '        }\n', '        FILTER NOT EXISTS {\n', '            GRAPH <http://example.org/protocol-update-dataset-graphs-test/> {\n', '                <http://kasei.us/2009/09/sparql/data/data3.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '            }\n', '        }\n', '    }\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', 'followed by\n', '#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql?using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    PREFIX dc: <http://purl.org/dc/terms/>\n', '    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n', '    CLEAR ALL ;\n', '    INSERT DATA {\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> { <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data2.rdf> { <http://kasei.us/2009/09/sparql/data/data2.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data3.rdf> { <http://kasei.us/2009/09/sparql/data/data3.rdf> a foaf:Document }\n', '    } ;\n', '    INSERT {\n', '        GRAPH <http://example.org/protocol-update-dataset-graphs-test/> {\n', '            ?s a dc:BibliographicResource\n', '        }\n', '    }\n', '    WHERE {\n', '        ?s a foaf:Document\n', '    }\n', '#### Request\n', '    POST /sparql HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Accept: application/sparql-results+xml\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {\n', '        GRAPH <http://example.org/protocol-update-dataset-graphs-test/> {\n', '            <http://kasei.us/2009/09/sparql/data/data1.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '            <http://kasei.us/2009/09/sparql/data/data2.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '        }\n', '        FILTER NOT EXISTS {\n', '            GRAPH <http://example.org/protocol-update-dataset-graphs-test/> {\n', '                <http://kasei.us/2009/09/sparql/data/data3.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '            }\n', '        }\n', '    }\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', 'followed by\n', '#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = update_dataset_named_graphs
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'update_dataset_named_graphs', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"update with protocol-specified named graphs"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql?using-named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&using-named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    PREFIX dc: <http://purl.org/dc/terms/>\n', '    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n', '    CLEAR ALL ;\n', '    INSERT DATA {\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> { <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data2.rdf> { <http://kasei.us/2009/09/sparql/data/data2.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data3.rdf> { <http://kasei.us/2009/09/sparql/data/data3.rdf> a foaf:Document }\n', '    } ;\n', '    INSERT {\n', '        GRAPH <http://example.org/protocol-update-dataset-named-graphs-test/> {\n', '            ?s a dc:BibliographicResource\n', '        }\n', '    }\n', '    WHERE {\n', '        GRAPH ?g {\n', '            ?s a foaf:Document\n', '        }\n', '    }\n', '#### Request\n', '    POST /sparql HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Accept: application/sparql-results+xml\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {\n', '        GRAPH <http://example.org/protocol-update-dataset-named-graphs-test/> {\n', '            <http://kasei.us/2009/09/sparql/data/data1.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '            <http://kasei.us/2009/09/sparql/data/data2.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '        }\n', '        FILTER NOT EXISTS {\n', '            GRAPH <http://example.org/protocol-update-dataset-named-graphs-test/> {\n', '                <http://kasei.us/2009/09/sparql/data/data3.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '            }\n', '        }\n', '    }\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', 'followed by\n', '#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql?using-named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&using-named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    PREFIX dc: <http://purl.org/dc/terms/>\n', '    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n', '    CLEAR ALL ;\n', '    INSERT DATA {\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> { <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data2.rdf> { <http://kasei.us/2009/09/sparql/data/data2.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data3.rdf> { <http://kasei.us/2009/09/sparql/data/data3.rdf> a foaf:Document }\n', '    } ;\n', '    INSERT {\n', '        GRAPH <http://example.org/protocol-update-dataset-named-graphs-test/> {\n', '            ?s a dc:BibliographicResource\n', '        }\n', '    }\n', '    WHERE {\n', '        GRAPH ?g {\n', '            ?s a foaf:Document\n', '        }\n', '    }\n', '#### Request\n', '    POST /sparql HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Accept: application/sparql-results+xml\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {\n', '        GRAPH <http://example.org/protocol-update-dataset-named-graphs-test/> {\n', '            <http://kasei.us/2009/09/sparql/data/data1.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '            <http://kasei.us/2009/09/sparql/data/data2.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '        }\n', '        FILTER NOT EXISTS {\n', '            GRAPH <http://example.org/protocol-update-dataset-named-graphs-test/> {\n', '                <http://kasei.us/2009/09/sparql/data/data3.rdf> a <http://purl.org/dc/terms/BibliographicResource> .\n', '            }\n', '        }\n', '    }\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', 'followed by\n', '#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = update_dataset_full
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'update_dataset_full', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"update with protocol-specified dataset (both named and default graphs)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql?using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&using-named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    PREFIX dc: <http://purl.org/dc/terms/>\n', '    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n', '    CLEAR ALL ;\n', '    INSERT DATA {\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> { <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data2.rdf> { <http://kasei.us/2009/09/sparql/data/data2.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data3.rdf> { <http://kasei.us/2009/09/sparql/data/data3.rdf> a foaf:Document }\n', '    } ;\n', '    INSERT {\n', '        GRAPH <http://example.org/protocol-update-dataset-full-test/> {\n', '            ?s <http://example.org/in> ?in\n', '        }\n', '    }\n', '    WHERE {\n', '        {\n', '            GRAPH ?g { ?s a foaf:Document }\n', '            BIND(?g AS ?in)\n', '        }\n', '        UNION\n', '        {\n', '            ?s a foaf:Document .\n', '            BIND("default" AS ?in)\n', '        }\n', '    }\n', '#### Request\n', '    POST /sparql HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Accept: application/sparql-results+xml\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {\n', '        GRAPH <http://example.org/protocol-update-dataset-full-test/> {\n', '            <http://kasei.us/2009/09/sparql/data/data1.rdf> <http://example.org/in> "default" .\n', '            <http://kasei.us/2009/09/sparql/data/data2.rdf> <http://example.org/in> <http://kasei.us/2009/09/sparql/data/data2.rdf> .\n', '        }\n', '        FILTER NOT EXISTS {\n', '            GRAPH <http://example.org/protocol-update-dataset-full-test/> {\n', '                <http://kasei.us/2009/09/sparql/data/data3.rdf> ?p ?o\n', '            }\n', '        }\n', '    }\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', 'followed by\n', '#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql?using-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata1.rdf&using-named-graph-uri=http%3A%2F%2Fkasei.us%2F2009%2F09%2Fsparql%2Fdata%2Fdata2.rdf HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    PREFIX dc: <http://purl.org/dc/terms/>\n', '    PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n', '    CLEAR ALL ;\n', '    INSERT DATA {\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data1.rdf> { <http://kasei.us/2009/09/sparql/data/data1.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data2.rdf> { <http://kasei.us/2009/09/sparql/data/data2.rdf> a foaf:Document }\n', '        GRAPH <http://kasei.us/2009/09/sparql/data/data3.rdf> { <http://kasei.us/2009/09/sparql/data/data3.rdf> a foaf:Document }\n', '    } ;\n', '    INSERT {\n', '        GRAPH <http://example.org/protocol-update-dataset-full-test/> {\n', '            ?s <http://example.org/in> ?in\n', '        }\n', '    }\n', '    WHERE {\n', '        {\n', '            GRAPH ?g { ?s a foaf:Document }\n', '            BIND(?g AS ?in)\n', '        }\n', '        UNION\n', '        {\n', '            ?s a foaf:Document .\n', '            BIND("default" AS ?in)\n', '        }\n', '    }\n', '#### Request\n', '    POST /sparql HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Accept: application/sparql-results+xml\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {\n', '        GRAPH <http://example.org/protocol-update-dataset-full-test/> {\n', '            <http://kasei.us/2009/09/sparql/data/data1.rdf> <http://example.org/in> "default" .\n', '            <http://kasei.us/2009/09/sparql/data/data2.rdf> <http://example.org/in> <http://kasei.us/2009/09/sparql/data/data2.rdf> .\n', '        }\n', '        FILTER NOT EXISTS {\n', '            GRAPH <http://example.org/protocol-update-dataset-full-test/> {\n', '                <http://kasei.us/2009/09/sparql/data/data3.rdf> ?p ?o\n', '            }\n', '        }\n', '    }\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', 'followed by\n', '#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = update_post_form
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'update_post_form', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"update via URL-encoded POST"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/x-www-url-form-urlencoded\n', '    Content-Length: XXX\n', '    update=CLEAR%20ALL\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/x-www-url-form-urlencoded\n', '    Content-Length: XXX\n', '    update=CLEAR%20ALL\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = update_post_direct
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'update_post_direct', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"update via POST directly"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    CLEAR ALL\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    CLEAR ALL\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = update_base_uri
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'update_base_uri', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"test for service-defined BASE URI (\\"which'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    CLEAR GRAPH <http://example.org/protocol-base-test/> ;\n', '    INSERT DATA { GRAPH <http://example.org/protocol-base-test/> { <http://example.org/s> <http://example.org/p> <test> } }\n', '#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Accept: application/sparql-results+xml\n', '    Content-Length: XXX\n', '    SELECT ?o WHERE {\n', '        GRAPH <http://example.org/protocol-base-test/> {\n', '            <http://example.org/s> <http://example.org/p> ?o\n', '        }\n', '    }\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml\n', '    one result with `?o` bound to an IRI that is _not_ `<test>`\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update\n', '    Content-Length: XXX\n', '    CLEAR GRAPH <http://example.org/protocol-base-test/> ;\n', '    INSERT DATA { GRAPH <http://example.org/protocol-base-test/> { <http://example.org/s> <http://example.org/p> <test> } }\n', '#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Accept: application/sparql-results+xml\n', '    Content-Length: XXX\n', '    SELECT ?o WHERE {\n', '        GRAPH <http://example.org/protocol-base-test/> {\n', '            <http://example.org/s> <http://example.org/p> ?o\n', '        }\n', '    }\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml\n', '    one result with `?o` bound to an IRI that is _not_ `<test>`\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = query_post_direct
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'query_post_direct', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"query via POST directly"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {}\n'], 'response': ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query\n', '    Content-Length: XXX\n', '    ASK {}\n']
			response = ['#### Response\n', '    2xx or 3xx response\n', '    Content-Type: application/sparql-results+xml or application/sparql-results+json\n', '    true\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_query_method
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_query_method', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke query operation with a method other than GET or POST"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    PUT /sparql?query=ASK%20%7B%7D            \n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    PUT /sparql?query=ASK%20%7B%7D            \n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_multiple_queries
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_multiple_queries', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke query operation with more than one query string"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET /sparql?query=ASK%20%7B%7D&query=SELECT%20%2A%20%7B%7D\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET /sparql?query=ASK%20%7B%7D&query=SELECT%20%2A%20%7B%7D\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_query_wrong_media_type
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_query_wrong_media_type', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke query operation with a POST with media type that\'s not url-encoded or application/sparql-query"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: text/plain\n', '    Content-Length: XXX\n', '    ASK {}\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: text/plain\n', '    Content-Length: XXX\n', '    ASK {}\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_query_missing_form_type
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_query_missing_form_type', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke query operation with url-encoded body, but without application/x-www-url-form-urlencoded media type"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Length: XXX\n', '    query=ASK%20%7B%7D\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Length: XXX\n', '    query=ASK%20%7B%7D\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_query_missing_direct_type
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_query_missing_direct_type', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke query operation with SPARQL body, but without application/sparql-query media type"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Length: XXX\n', '    ASK {}\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Length: XXX\n', '    ASK {}\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_query_non_utf8
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_query_non_utf8', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke query operation with direct POST, but with a non-UTF8 encoding (UTF-16)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query; charset=UTF-16\n', '    Content-Length: XXX\n', '    ASK {}\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-query; charset=UTF-16\n', '    Content-Length: XXX\n', '    ASK {}\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_query_syntax
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_query_syntax', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke query operation with invalid query syntax (4XX result)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET /sparql?query=ASK%20%7B\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET /sparql?query=ASK%20%7B\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_update_get
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_update_get', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke update operation with GET"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    GET /sparql?update=CLEAR%20ALL\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    GET /sparql?update=CLEAR%20ALL\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_multiple_updates
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_multiple_updates', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke update operation with more than one update string"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/x-www-url-form-urlencoded\n', '    Content-Length: XXX\n', '    update=CLEAR%20NAMED&update=CLEAR%20DEFAULT\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/x-www-url-form-urlencoded\n', '    Content-Length: XXX\n', '    update=CLEAR%20NAMED&update=CLEAR%20DEFAULT\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_update_wrong_media_type
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_update_wrong_media_type', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke update operation with a POST with media type that\'s not url-encoded or application/sparql-update"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: text/plain\n', '    Content-Length: XXX\n', '    CLEAR NAMED\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: text/plain\n', '    Content-Length: XXX\n', '    CLEAR NAMED\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_update_missing_form_type
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_update_missing_form_type', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke update operation with url-encoded body, but without application/x-www-url-form-urlencoded media type"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Length: XXX\n', '    update=CLEAR%20NAMED\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Length: XXX\n', '    update=CLEAR%20NAMED\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_update_non_utf8
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_update_non_utf8', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke update operation with direct POST, but with a non-UTF8 encoding"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update; charset=UTF-16\n', '    Content-Length: XXX\n', '    CLEAR NAMED\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/sparql-update; charset=UTF-16\n', '    Content-Length: XXX\n', '    CLEAR NAMED\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_update_syntax
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_update_syntax', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke update operation with invalid update syntax"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/x-www-url-form-urlencoded\n', '    Content-Length: XXX\n', '    update=CLEAR%20XYZ\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/x-www-url-form-urlencoded\n', '    Content-Length: XXX\n', '    update=CLEAR%20XYZ\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []

		name = bad_update_dataset_conflict
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ProtocolTest'}
			assigned_type_number = 11
		test = {'name': 'bad_update_dataset_conflict', 'type': {'rdf:type': 'mf:ProtocolTest'}, 'mf_name': {'mf:name': '"invoke update with both using-graph-uri/using-named-graph-uri parameter and USING/WITH clause"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': None, '_approval_by': None, 'actions': [], 'result': [], 'comment': {'rdfs:comment': '"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/x-www-url-form-urlencoded\n', '    Content-Length: XXX\n', '    using-named-graph-uri=http%3A%2F%2Fexample%2Fpeople&update=%09%09PREFIX%20foaf%3A%20%20%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E%0A%09%09WITH%20%3Chttp%3A%2F%2Fexample%2Faddresses%3E%0A%09%09DELETE%20%7B%20%3Fperson%20foaf%3AgivenName%20%27Bill%27%20%7D%0A%09%09INSERT%20%7B%20%3Fperson%20foaf%3AgivenName%20%27William%27%20%7D%0A%09%09WHERE%20%7B%0A%09%09%09%3Fperson%20foaf%3AgivenName%20%27Bill%27%0A%09%09%7D%0A\n'], 'response': ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n'], 'label': 'SPARQL Protocol', 'manifest': 'sparql11/data-sparql11/protocol/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/protocol', 'version': 'Sparql 1.1'}
			request = ['#### Request\n', '    POST /sparql/ HTTP/1.1\n', '    Host: www.example\n', '    User-agent: sparql-client/0.1\n', '    Content-Type: application/x-www-url-form-urlencoded\n', '    Content-Length: XXX\n', '    using-named-graph-uri=http%3A%2F%2Fexample%2Fpeople&update=%09%09PREFIX%20foaf%3A%20%20%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E%0A%09%09WITH%20%3Chttp%3A%2F%2Fexample%2Faddresses%3E%0A%09%09DELETE%20%7B%20%3Fperson%20foaf%3AgivenName%20%27Bill%27%20%7D%0A%09%09INSERT%20%7B%20%3Fperson%20foaf%3AgivenName%20%27William%27%20%7D%0A%09%09WHERE%20%7B%0A%09%09%09%3Fperson%20foaf%3AgivenName%20%27Bill%27%0A%09%09%7D%0A\n']
			response = ['#### Response\n', '    4xx\n', '       """ ;\n', '       dawgt:approval dawgt:Approved ;\n', '       dawgt:approvedBy <http://www.w3.org/2009/sparql/meeting/2012-11-20#resolution_3> ;\n']
		result = []
Parsing sparql11/data-sparql11/protocol/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/service/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[7] == expected_tests [7] :: 
[parse_manifest] INFO: expected_tests[7] == tests__names [7] :: 

		name = service1
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<service01.rq>'], ['qt:data', '<data01.ttl>'], ['serviceData', [['qt:endpoint', '<http://example.org/sparql>'], ['qt:data', '<data01endpoint.ttl>']]]]
			assigned_type_number = 3
		test = {'name': 'service1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SERVICE test 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_2>'}, 'actions': [['qt:query', '<service01.rq>'], ['qt:data', '<data01.ttl>'], ['serviceData', [['qt:endpoint', '<http://example.org/sparql>'], ['qt:data', '<data01endpoint.ttl>']]]], 'result': ['<service01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sd:BasicFederatedQuery'}, 'request': [], 'response': [], 'label': 'SPARQL Service', 'manifest': 'sparql11/data-sparql11/service/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/service', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<service01.rq>'], ['qt:data', '<data01.ttl>'], ['serviceData', [['qt:endpoint', '<http://example.org/sparql>'], ['qt:data', '<data01endpoint.ttl>']]]]
		result = ['<service01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = service2
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<service02.rq>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data02endpoint1.ttl>']]], ['serviceData', [['qt:endpoint', '<http://example2.org/sparql>'], ['qt:data', '<data02endpoint2.ttl>']]]]
			assigned_type_number = 3
		test = {'name': 'service2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SERVICE test 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_2>'}, 'actions': [['qt:query', '<service02.rq>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data02endpoint1.ttl>']]], ['serviceData', [['qt:endpoint', '<http://example2.org/sparql>'], ['qt:data', '<data02endpoint2.ttl>']]]], 'result': ['<service02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sd:BasicFederatedQuery'}, 'request': [], 'response': [], 'label': 'SPARQL Service', 'manifest': 'sparql11/data-sparql11/service/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/service', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<service02.rq>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data02endpoint1.ttl>']]], ['serviceData', [['qt:endpoint', '<http://example2.org/sparql>'], ['qt:data', '<data02endpoint2.ttl>']]]]
		result = ['<service02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = service3
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<service03.rq>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data03endpoint1.ttl>']]], ['serviceData', [['qt:endpoint', '<http://example2.org/sparql>'], ['qt:data', '<data03endpoint2.ttl>']]]]
			assigned_type_number = 3
		test = {'name': 'service3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SERVICE test 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_2>'}, 'actions': [['qt:query', '<service03.rq>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data03endpoint1.ttl>']]], ['serviceData', [['qt:endpoint', '<http://example2.org/sparql>'], ['qt:data', '<data03endpoint2.ttl>']]]], 'result': ['<service03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sd:BasicFederatedQuery'}, 'request': [], 'response': [], 'label': 'SPARQL Service', 'manifest': 'sparql11/data-sparql11/service/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/service', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<service03.rq>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data03endpoint1.ttl>']]], ['serviceData', [['qt:endpoint', '<http://example2.org/sparql>'], ['qt:data', '<data03endpoint2.ttl>']]]]
		result = ['<service03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = service4a
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<service04a.rq>'], ['qt:data', '<data04.ttl>'], ['serviceData', [['qt:endpoint', '<http://example.org/sparql>'], ['qt:data', '<data04endpoint.ttl>']]]]
			assigned_type_number = 3
		test = {'name': 'service4a', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SERVICE test 4a with VALUES clause"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_4>'}, 'actions': [['qt:query', '<service04a.rq>'], ['qt:data', '<data04.ttl>'], ['serviceData', [['qt:endpoint', '<http://example.org/sparql>'], ['qt:data', '<data04endpoint.ttl>']]]], 'result': ['<service04.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sd:BasicFederatedQuery'}, 'request': [], 'response': [], 'label': 'SPARQL Service', 'manifest': 'sparql11/data-sparql11/service/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/service', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<service04a.rq>'], ['qt:data', '<data04.ttl>'], ['serviceData', [['qt:endpoint', '<http://example.org/sparql>'], ['qt:data', '<data04endpoint.ttl>']]]]
		result = ['<service04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = service5
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<service05.rq>'], ['qt:data', '<data05.ttl>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data05endpoint1.ttl>']]], ['serviceData', [['qt:endpoint', '<http://example2.org/sparql>'], ['qt:data', '<data05endpoint2.ttl>']]]]
			assigned_type_number = 3
		test = {'name': 'service5', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SERVICE test 5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_2>'}, 'actions': [['qt:query', '<service05.rq>'], ['qt:data', '<data05.ttl>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data05endpoint1.ttl>']]], ['serviceData', [['qt:endpoint', '<http://example2.org/sparql>'], ['qt:data', '<data05endpoint2.ttl>']]]], 'result': ['<service05.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sd:BasicFederatedQuery'}, 'request': [], 'response': [], 'label': 'SPARQL Service', 'manifest': 'sparql11/data-sparql11/service/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/service', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<service05.rq>'], ['qt:data', '<data05.ttl>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data05endpoint1.ttl>']]], ['serviceData', [['qt:endpoint', '<http://example2.org/sparql>'], ['qt:data', '<data05endpoint2.ttl>']]]]
		result = ['<service05.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = service6
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<service06.rq>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data06endpoint1.ttl>']]]]
			assigned_type_number = 3
		test = {'name': 'service6', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SERVICE test 6"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_2>'}, 'actions': [['qt:query', '<service06.rq>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data06endpoint1.ttl>']]]], 'result': ['<service06.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sd:BasicFederatedQuery'}, 'request': [], 'response': [], 'label': 'SPARQL Service', 'manifest': 'sparql11/data-sparql11/service/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/service', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<service06.rq>'], ['serviceData', [['qt:endpoint', '<http://example1.org/sparql>'], ['qt:data', '<data06endpoint1.ttl>']]]]
		result = ['<service06.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = service7
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<service07.rq>'], ['qt:data', '<data07.ttl>']]
			assigned_type_number = 3
		test = {'name': 'service7', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"SERVICE test 7"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_2>'}, 'actions': [['qt:query', '<service07.rq>'], ['qt:data', '<data07.ttl>']], 'result': ['<service07.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {'mf:feature': 'sd:BasicFederatedQuery'}, 'request': [], 'response': [], 'label': 'SPARQL Service', 'manifest': 'sparql11/data-sparql11/service/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/service', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<service07.rq>'], ['qt:data', '<data07.ttl>']]
		result = ['<service07.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-sparql11/service/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/service-description/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[3] == expected_tests [3] :: 
[parse_manifest] INFO: expected_tests[3] == tests__names [3] :: 

		name = returns-rdf
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ServiceDescriptionTest'}
			assigned_type_number = 11
		test = {'name': 'returns-rdf', 'type': {'rdf:type': 'mf:ServiceDescriptionTest'}, 'mf_name': {'mf:name': '"GET on endpoint returns RDF"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-07-31#resolution_2>'}, 'actions': [], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL Service Description', 'manifest': 'sparql11/data-sparql11/service-description/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/service-description', 'version': 'Sparql 1.1'}
			request = []
			response = []
		result = []

		name = has-endpoint-triple
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ServiceDescriptionTest'}
			assigned_type_number = 11
		test = {'name': 'has-endpoint-triple', 'type': {'rdf:type': 'mf:ServiceDescriptionTest'}, 'mf_name': {'mf:name': '"Service description contains a matching sd:endpoint triple"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-07-31#resolution_2>'}, 'actions': [], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL Service Description', 'manifest': 'sparql11/data-sparql11/service-description/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/service-description', 'version': 'Sparql 1.1'}
			request = []
			response = []
		result = []

		name = conforms-to-schema
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:ServiceDescriptionTest'}
			assigned_type_number = 11
		test = {'name': 'conforms-to-schema', 'type': {'rdf:type': 'mf:ServiceDescriptionTest'}, 'mf_name': {'mf:name': '"Service description conforms to schema"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-07-31#resolution_2>'}, 'actions': [], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL Service Description', 'manifest': 'sparql11/data-sparql11/service-description/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/service-description', 'version': 'Sparql 1.1'}
			request = []
			response = []
		result = []
Parsing sparql11/data-sparql11/service-description/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/subquery/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[14] == expected_tests [14] :: 
[parse_manifest] INFO: expected_tests[14] == tests__names [14] :: 

		name = subquery01
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq01.rq>'], ['qt:graphData', '<sq01.rdf>']]
			assigned_type_number = 3
		test = {'name': 'subquery01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq01 - Subquery within graph pattern"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-07-13#resolution_2>'}, 'actions': [['qt:query', '<sq01.rq>'], ['qt:graphData', '<sq01.rdf>']], 'result': ['<sq01.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq01.rq>'], ['qt:graphData', '<sq01.rdf>']]
		result = ['<sq01.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = subquery02
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq02.rq>'], ['qt:graphData', '<sq01.rdf>']]
			assigned_type_number = 3
		test = {'name': 'subquery02', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq02 - Subquery within graph pattern, graph variable is bound"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-07-13#resolution_3>'}, 'actions': [['qt:query', '<sq02.rq>'], ['qt:graphData', '<sq01.rdf>']], 'result': ['<sq02.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq02.rq>'], ['qt:graphData', '<sq01.rdf>']]
		result = ['<sq02.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = subquery03
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq03.rq>'], ['qt:graphData', '<sq01.rdf>']]
			assigned_type_number = 3
		test = {'name': 'subquery03', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq03 - Subquery within graph pattern, graph variable is not bound"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-07-13#resolution_4>'}, 'actions': [['qt:query', '<sq03.rq>'], ['qt:graphData', '<sq01.rdf>']], 'result': ['<sq03.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq03.rq>'], ['qt:graphData', '<sq01.rdf>']]
		result = ['<sq03.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = subquery04
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq04.rq>'], ['qt:data', '<sq04.rdf>'], ['qt:graphData', '<sq01.rdf>']]
			assigned_type_number = 3
		test = {'name': 'subquery04', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq04 - Subquery within graph pattern, default graph does not apply"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-07-13#resolution_5>'}, 'actions': [['qt:query', '<sq04.rq>'], ['qt:data', '<sq04.rdf>'], ['qt:graphData', '<sq01.rdf>']], 'result': ['<sq04.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq04.rq>'], ['qt:data', '<sq04.rdf>'], ['qt:graphData', '<sq01.rdf>']]
		result = ['<sq04.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subquery05
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq05.rq>'], ['qt:graphData', '<sq05.rdf>']]
			assigned_type_number = 3
		test = {'name': 'subquery05', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq05 - Subquery within graph pattern, from named applies"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-07-20#resolution_2>'}, 'actions': [['qt:query', '<sq05.rq>'], ['qt:graphData', '<sq05.rdf>']], 'result': ['<sq05.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq05.rq>'], ['qt:graphData', '<sq05.rdf>']]
		result = ['<sq05.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = subquery06
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq06.rq>'], ['qt:data', '<sq05.rdf>']]
			assigned_type_number = 3
		test = {'name': 'subquery06', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq06 - Subquery with graph pattern, from named applies"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-07-20#resolution_2>'}, 'actions': [['qt:query', '<sq06.rq>'], ['qt:data', '<sq05.rdf>']], 'result': ['<sq06.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq06.rq>'], ['qt:data', '<sq05.rdf>']]
		result = ['<sq06.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subquery07
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq07.rq>'], ['qt:graphData', '<sq05.rdf>']]
			assigned_type_number = 3
		test = {'name': 'subquery07', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-07-20#resolution_2>'}, 'actions': [['qt:query', '<sq07.rq>'], ['qt:graphData', '<sq05.rdf>']], 'result': ['<sq07.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq07.rq>'], ['qt:graphData', '<sq05.rdf>']]
		result = ['<sq07.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }

		name = subquery08
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq08.rq>'], ['qt:data', '<sq08.rdf>']]
			assigned_type_number = 3
		test = {'name': 'subquery08', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq08 - Subquery with aggregate"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-07-20#resolution_2>'}, 'actions': [['qt:query', '<sq08.rq>'], ['qt:data', '<sq08.rdf>']], 'result': ['<sq08.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq08.rq>'], ['qt:data', '<sq08.rdf>']]
		result = ['<sq08.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subquery09
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq09.rq>'], ['qt:data', '<sq09.rdf>']]
			assigned_type_number = 3
		test = {'name': 'subquery09', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq09 - Nested Subqueries"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-07-20#resolution_2>'}, 'actions': [['qt:query', '<sq09.rq>'], ['qt:data', '<sq09.rdf>']], 'result': ['<sq09.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq09.rq>'], ['qt:data', '<sq09.rdf>']]
		result = ['<sq09.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subquery10
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq10.rq>'], ['qt:data', '<sq10.rdf>']]
			assigned_type_number = 3
		test = {'name': 'subquery10', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq10 - Subquery with exists"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2010-07-20#resolution_2>'}, 'actions': [['qt:query', '<sq10.rq>'], ['qt:data', '<sq10.rdf>']], 'result': ['<sq10.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq10.rq>'], ['qt:data', '<sq10.rdf>']]
		result = ['<sq10.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subquery11
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq11.rq>'], ['qt:data', '<sq11.ttl>']]
			assigned_type_number = 3
		test = {'name': 'subquery11', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq11 - Subquery limit per resource"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<sq11.rq>'], ['qt:data', '<sq11.ttl>']], 'result': ['<sq11.srx>'], 'comment': {'rdfs:comment': '"This query limits results per number of orders, rather than by number of rows";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq11.rq>'], ['qt:data', '<sq11.ttl>']]
		result = ['<sq11.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subquery12
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq12.rq>'], ['qt:data', '<sq12.ttl>']]
			assigned_type_number = 3
		test = {'name': 'subquery12', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq12 - Subquery in CONSTRUCT with built-ins"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<sq12.rq>'], ['qt:data', '<sq12.ttl>']], 'result': ['<sq12_out.ttl>'], 'comment': {'rdfs:comment': '"This query constructs full names from first and last names";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq12.rq>'], ['qt:data', '<sq12.ttl>']]
		result = ['<sq12_out.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subquery13
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq13.rq>'], ['qt:data', '<sq13.ttl>']]
			assigned_type_number = 3
		test = {'name': 'subquery13', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq13 - Subqueries don\'t inject bindings"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<sq13.rq>'], ['qt:data', '<sq13.ttl>']], 'result': ['<sq13.srx>'], 'comment': {'rdfs:comment': '"The result of this subquery is a Kartesian product of all orders, rather than paris of orders sharing products, since subqueries are evaluated independent from bindings from outside the subquery";'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq13.rq>'], ['qt:data', '<sq13.ttl>']]
		result = ['<sq13.srx>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }

		name = subquery14
		type = {'rdf:type': 'mf:QueryEvaluationTest'}
action_lst = [['qt:query', '<sq14.rq>'], ['qt:data', '<sq14.ttl>']]
			assigned_type_number = 3
		test = {'name': 'subquery14', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"sq14 - limit by resource"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['qt:query', '<sq14.rq>'], ['qt:data', '<sq14.ttl>']], 'result': ['<sq14-out.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Sub query', 'manifest': 'sparql11/data-sparql11/subquery/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/subquery', 'version': 'Sparql 1.1'}
		actions = [['qt:query', '<sq14.rq>'], ['qt:data', '<sq14.ttl>']]
		result = ['<sq14-out.ttl>']
			 »» Checking result contents.... ««
				 »»» Num = 0
					parse_to_yaml { .ttl or .srx }
					parse_to_yaml { action_flag == 0 }
Parsing sparql11/data-sparql11/subquery/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/syntax-fed/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[3] == expected_tests [3] :: 
[parse_manifest] INFO: expected_tests[3] == tests__names [3] :: 

		name = test_1
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_1', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-service-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-service-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Federation', 'manifest': 'sparql11/data-sparql11/syntax-fed/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-fed', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-service-01.rq>']]
		result = []

		name = test_2
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_2', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-service-02.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-service-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Federation', 'manifest': 'sparql11/data-sparql11/syntax-fed/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-fed', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-service-02.rq>']]
		result = []

		name = test_3
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_3', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-service-03.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-service-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Federation', 'manifest': 'sparql11/data-sparql11/syntax-fed/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-fed', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-service-03.rq>']]
		result = []
Parsing sparql11/data-sparql11/syntax-fed/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/syntax-query/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[92] == expected_tests [92] :: 
[parse_manifest] INFO: expected_tests[92] == tests__names [92] :: 

		name = test_1
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_1', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-select-expr-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-select-expr-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-select-expr-01.rq>']]
		result = []

		name = test_2
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_2', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-select-expr-02.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-select-expr-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-select-expr-02.rq>']]
		result = []

		name = test_3
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_3', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-select-expr-03.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-select-expr-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-select-expr-03.rq>']]
		result = []

		name = test_4
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_4', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-select-expr-04.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-select-expr-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-select-expr-04.rq>']]
		result = []

		name = test_5
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_5', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-select-expr-05.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-select-expr-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-select-expr-05.rq>']]
		result = []

		name = test_6
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_6', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-01.rq>']]
		result = []

		name = test_7
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_7', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-02.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-02.rq>']]
		result = []

		name = test_8
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_8', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-03.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-03.rq>']]
		result = []

		name = test_9
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_9', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-04.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-04.rq>']]
		result = []

		name = test_10
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_10', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-05.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-05.rq>']]
		result = []

		name = test_11
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_11', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-06.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-06.rq>']]
		result = []

		name = test_12
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_12', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-07.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-07.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-07.rq>']]
		result = []

		name = test_13
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_13', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-08.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-08.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-08.rq>']]
		result = []

		name = test_14
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_14', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-09.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-09.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-09.rq>']]
		result = []

		name = test_15
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_15', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-10.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-10.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-10.rq>']]
		result = []

		name = test_16
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_16', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-11.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-11.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-11.rq>']]
		result = []

		name = test_17
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_17', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-12.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-12.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-12.rq>']]
		result = []

		name = test_18
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_18', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-13.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-13.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-13.rq>']]
		result = []

		name = test_19
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_19', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-14.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-14.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-14.rq>']]
		result = []

		name = test_20
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_20', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-aggregate-15.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-aggregate-15.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-aggregate-15.rq>']]
		result = []

		name = test_21
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_21', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-subquery-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-subquery-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-subquery-01.rq>']]
		result = []

		name = test_22
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_22', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-subquery-02.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-subquery-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-subquery-02.rq>']]
		result = []

		name = test_23
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_23', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-subquery-03.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-subquery-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-subquery-03.rq>']]
		result = []

		name = test_24
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_24', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-not-exists-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-not-exists-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-not-exists-01.rq>']]
		result = []

		name = test_25
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_25', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-not-exists-02.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-not-exists-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-not-exists-02.rq>']]
		result = []

		name = test_26
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_26', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-not-exists-03.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-not-exists-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-not-exists-03.rq>']]
		result = []

		name = test_27
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_27', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-exists-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-exists-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-exists-01.rq>']]
		result = []

		name = test_28
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_28', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-exists-02.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-exists-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-exists-02.rq>']]
		result = []

		name = test_29
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_29', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-exists-03.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-exists-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-exists-03.rq>']]
		result = []

		name = test_30
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_30', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-minus-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-minus-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-minus-01.rq>']]
		result = []

		name = test_31
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_31', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-oneof-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-oneof-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-oneof-01.rq>']]
		result = []

		name = test_32
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_32', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-oneof-02.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-oneof-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-oneof-02.rq>']]
		result = []

		name = test_33
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_33', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-oneof-03.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-oneof-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-oneof-03.rq>']]
		result = []

		name = test_34
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_34', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-bindingBINDscopes-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-bindings-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-bindings-01.rq>']]
		result = []

		name = test_35a
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_35a', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-bindings-02a.rq with VALUES clause"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-bindings-02a.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-bindings-02a.rq>']]
		result = []

		name = test_36a
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_36a', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-bindings-03a.rq with VALUES clause"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-bindings-03a.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-bindings-03a.rq>']]
		result = []

		name = test_38a
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_38a', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-bindings-05a.rq with VALUES clause"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-bindings-05a.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-bindings-05a.rq>']]
		result = []

		name = test_40
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_40', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-bind-02.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-bind-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-bind-02.rq>']]
		result = []

		name = test_41
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_41', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-construct-where-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-construct-where-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-construct-where-01.rq>']]
		result = []

		name = test_42
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_42', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-construct-where-02.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-construct-where-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-construct-where-02.rq>']]
		result = []

		name = test_43
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_43', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-01.rq>']]
		result = []

		name = test_44
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_44', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-02.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-02.rq>']]
		result = []

		name = test_45
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_45', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-03.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-03.rq>']]
		result = []

		name = test_46
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_46', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-04.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-04.rq>']]
		result = []

		name = test_47
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_47', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-05.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-05.rq>']]
		result = []

		name = test_48
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_48', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-06.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-06.rq>']]
		result = []

		name = test_49
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_49', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-07.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-07.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-07.rq>']]
		result = []

		name = test_50
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_50', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-08.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-08.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-08.rq>']]
		result = []

		name = test_51
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_51', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-bindings-09.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-bindings-09.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-bindings-09.rq>']]
		result = []

		name = test_53
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_53', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"PrefixName with hex-encoded colons"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-01-31#resolution_3>'}, 'actions': [['mf:action', '<qname-escape-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<qname-escape-02.rq>']]
		result = []

		name = test_54
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_54', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"PrefixName with unescaped colons"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<qname-escape-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<qname-escape-03.rq>']]
		result = []

		name = test_55
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_55', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-BINDscope1.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-BINDscope1.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-BINDscope1.rq>']]
		result = []

		name = test_56
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_56', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-BINDscope2.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-BINDscope2.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-BINDscope2.rq>']]
		result = []

		name = test_57
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_57', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-BINDscope3.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-BINDscope3.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-BINDscope3.rq>']]
		result = []

		name = test_58
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_58', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-BINDscope4.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-BINDscope4.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-BINDscope4.rq>']]
		result = []

		name = test_59
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_59', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-BINDscope5.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-BINDscope5.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-BINDscope5.rq>']]
		result = []

		name = test_60
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_60', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-BINDscope6.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-BINDscope6.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-BINDscope6.rq>']]
		result = []

		name = test_61a
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_61a', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-BINDscope7.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-09-25#resolution_2>'}, 'actions': [['mf:action', '<syntax-BINDscope7.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-BINDscope7.rq>']]
		result = []

		name = test_62a
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_62a', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-BINDscope8.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-09-25#resolution_2>'}, 'actions': [['mf:action', '<syntax-BINDscope8.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-BINDscope8.rq>']]
		result = []

		name = test_63
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_63', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-propertyPaths-01.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-propertyPaths-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-propertyPaths-01.rq>']]
		result = []

		name = test_64
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_64', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-SELECTscope1.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-SELECTscope1.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-SELECTscope1.rq>']]
		result = []

		name = test_65
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_65', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-SELECTscope2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-SELECTscope2.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-SELECTscope2.rq>']]
		result = []

		name = test_66
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_66', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-SELECTscope3.rq"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syntax-SELECTscope3.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-SELECTscope3.rq>']]
		result = []

		name = test_pn_01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_pn_01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-pname-01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-pname-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-pname-01.rq>']]
		result = []

		name = test_pn_02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_pn_02', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-pname-02"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-pname-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-pname-02.rq>']]
		result = []

		name = test_pn_03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_pn_03', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-pname-03"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-pname-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-pname-03.rq>']]
		result = []

		name = test_pn_04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_pn_04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-pname-04"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-pname-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-pname-04.rq>']]
		result = []

		name = test_pn_05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_pn_05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-pname-05"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-pname-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-pname-05.rq>']]
		result = []

		name = test_pn_06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_pn_06', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-pname-06"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-pname-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-pname-06.rq>']]
		result = []

		name = test_pn_07
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_pn_07', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-pname-07"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-pname-07.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-pname-07.rq>']]
		result = []

		name = test_pn_08
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_pn_08', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-pname-08"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-pname-08.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-pname-08.rq>']]
		result = []

		name = test_pn_09
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_pn_09', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-pname-09"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-pname-09.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-pname-09.rq>']]
		result = []

		name = test_pn_bad_01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_01', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-01.rq>']]
		result = []

		name = test_pn_bad_02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_02', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-02"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-02.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-02.rq>']]
		result = []

		name = test_pn_bad_03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_03', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-03"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-03.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-03.rq>']]
		result = []

		name = test_pn_bad_04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_04', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-04"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-04.rq>']]
		result = []

		name = test_pn_bad_05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_05', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-05"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-05.rq>']]
		result = []

		name = test_pn_bad_06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_06', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-06"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-06.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-06.rq>']]
		result = []

		name = test_pn_bad_07
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_07', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-07"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-07.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-07.rq>']]
		result = []

		name = test_pn_bad_08
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_08', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-08"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-08.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-08.rq>']]
		result = []

		name = test_pn_bad_09
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_09', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-09"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-09.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-09.rq>']]
		result = []

		name = test_pn_bad_10
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_10', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-10"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-10.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-10.rq>']]
		result = []

		name = test_pn_bad_11
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_11', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-11"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-11.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-11.rq>']]
		result = []

		name = test_pn_bad_12
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_12', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-12"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-12.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-12.rq>']]
		result = []

		name = test_pn_bad_13
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_pn_bad_13', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-bad-pname-13"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-bad-pname-13.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-bad-pname-13.rq>']]
		result = []

		name = test_pp_coll
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_pp_coll', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"syn-pp-in-collection"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_2>'}, 'actions': [['mf:action', '<syn-pp-in-collection.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-pp-in-collection.rq>']]
		result = []

		name = test_codepoint_escape_01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_codepoint_escape_01', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"\\\\U unicode codepoint escaping in literal"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['mf:action', '<syn-codepoint-escape-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-codepoint-escape-01.rq>']]
		result = []

		name = test_codepoint_escape_bad_02
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_codepoint_escape_bad_02', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"Invalid multi-pass codepoint escaping (\\\\u then \\\\U)"'}, 'seeAlso': None, 'mf_description': {'mf:description': '"Unescaping one escape sequence must not produce content that is used in another escape sequence"'}, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['mf:action', '<syn-codepoint-escape-bad-04.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-codepoint-escape-bad-04.rq>']]
		result = []

		name = test_codepoint_escape_bad_03
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_codepoint_escape_bad_03', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"Invalid multi-pass codepoint escaping (\\\\U then \\\\u)"'}, 'seeAlso': None, 'mf_description': {'mf:description': '"Unescaping one escape sequence must not produce content that is used in another escape sequence"'}, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['mf:action', '<syn-codepoint-escape-bad-05.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-codepoint-escape-bad-05.rq>']]
		result = []

		name = test_codepoint_boundaries_04
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_codepoint_boundaries_04', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"utf8 literal using codepoints at notable unicode boundaries"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['mf:action', '<1val1STRING_LITERAL1_with_UTF8_boundaries.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<1val1STRING_LITERAL1_with_UTF8_boundaries.rq>']]
		result = []

		name = test_codepoint_boundaries_escaped_05
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveSyntaxTest11'}
			assigned_type_number = 1
		test = {'name': 'test_codepoint_boundaries_escaped_05', 'type': {'rdf:type': 'mf:PositiveSyntaxTest11'}, 'mf_name': {'mf:name': '"\\\\U and \\\\u unicode codepoint escaping in literal using codepoints at notable unicode boundaries"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['mf:action', '<1val1STRING_LITERAL1_with_UTF8_boundaries_escaped.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<1val1STRING_LITERAL1_with_UTF8_boundaries_escaped.rq>']]
		result = []

		name = test_codepoint_invalid_escaped_bad_06
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeSyntaxTest11'}
			assigned_type_number = 2
		test = {'name': 'test_codepoint_invalid_escaped_bad_06', 'type': {'rdf:type': 'mf:NegativeSyntaxTest11'}, 'mf_name': {'mf:name': '"\\\\u unicode codepoint escaping in literal using partial surrogate pair"'}, 'seeAlso': None, 'mf_description': {'mf:description': '"Using a codepoint that is half of a surrogate pair (in the range U+D800U+DFFF) without a corresponding codepoint is illegal"'}, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Proposed'}, '_approval_by': None, 'actions': [['mf:action', '<syn-invalid-codepoint-escaped-bad-01.rq>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Query', 'manifest': 'sparql11/data-sparql11/syntax-query/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-query', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syn-invalid-codepoint-escaped-bad-01.rq>']]
		result = []
Parsing sparql11/data-sparql11/syntax-query/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/syntax-update-1/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[54] == expected_tests [54] :: 
[parse_manifest] INFO: expected_tests[54] == tests__names [54] :: 

		name = test_1
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_1', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-01.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-01.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-01.ru>']]
		result = []

		name = test_2
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_2', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-02.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-02.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-02.ru>']]
		result = []

		name = test_3
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_3', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-03.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-03.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-03.ru>']]
		result = []

		name = test_4
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_4', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-04.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-04.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-04.ru>']]
		result = []

		name = test_5
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_5', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-05.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-05.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-05.ru>']]
		result = []

		name = test_6
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_6', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-06.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-06.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-06.ru>']]
		result = []

		name = test_7
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_7', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-07.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-07.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-07.ru>']]
		result = []

		name = test_8
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_8', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-08.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-08.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-08.ru>']]
		result = []

		name = test_9
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_9', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-09.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-09.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-09.ru>']]
		result = []

		name = test_10
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_10', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-10.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-10.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-10.ru>']]
		result = []

		name = test_11
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_11', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-11.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-11.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-11.ru>']]
		result = []

		name = test_12
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_12', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-12.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-12.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-12.ru>']]
		result = []

		name = test_13
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_13', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-13.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-13.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-13.ru>']]
		result = []

		name = test_14
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_14', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-14.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-14.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-14.ru>']]
		result = []

		name = test_15
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_15', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-15.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-15.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-15.ru>']]
		result = []

		name = test_16
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_16', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-16.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-16.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-16.ru>']]
		result = []

		name = test_17
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_17', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-17.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-17.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-17.ru>']]
		result = []

		name = test_18
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_18', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-18.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-18.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-18.ru>']]
		result = []

		name = test_19
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_19', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-19.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-19.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-19.ru>']]
		result = []

		name = test_20
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_20', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-20.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-20.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-20.ru>']]
		result = []

		name = test_21
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_21', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-21.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-21.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-21.ru>']]
		result = []

		name = test_22
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_22', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-22.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-22.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-22.ru>']]
		result = []

		name = test_23
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_23', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-23.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-23.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-23.ru>']]
		result = []

		name = test_24
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_24', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-24.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-24.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-24.ru>']]
		result = []

		name = test_25
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_25', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-25.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-25.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-25.ru>']]
		result = []

		name = test_26
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_26', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-26.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-26.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-26.ru>']]
		result = []

		name = test_27
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_27', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-27.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-27.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-27.ru>']]
		result = []

		name = test_28
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_28', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-28.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-28.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-28.ru>']]
		result = []

		name = test_29
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_29', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-29.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-29.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-29.ru>']]
		result = []

		name = test_30
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_30', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-30.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-30.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-30.ru>']]
		result = []

		name = test_31
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_31', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-31.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-31.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-31.ru>']]
		result = []

		name = test_32
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_32', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-32.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-32.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-32.ru>']]
		result = []

		name = test_33
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_33', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-33.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-33.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-33.ru>']]
		result = []

		name = test_34
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_34', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-34.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-34.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-34.ru>']]
		result = []

		name = test_35
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_35', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-35.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-35.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-35.ru>']]
		result = []

		name = test_36
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_36', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-36.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-36.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-36.ru>']]
		result = []

		name = test_37
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_37', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-37.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-37.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-37.ru>']]
		result = []

		name = test_38
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_38', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-38.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-38.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-38.ru>']]
		result = []

		name = test_39
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_39', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-39.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-39.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-39.ru>']]
		result = []

		name = test_40
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_40', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-40.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-40.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-40.ru>']]
		result = []

		name = test_41
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_41', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-01.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-01.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-01.ru>']]
		result = []

		name = test_42
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_42', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-02.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-02.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-02.ru>']]
		result = []

		name = test_43
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_43', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-03.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-03.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-03.ru>']]
		result = []

		name = test_44
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_44', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-04.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-04.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-04.ru>']]
		result = []

		name = test_45
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_45', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-05.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-05.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-05.ru>']]
		result = []

		name = test_46
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_46', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-06.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-06.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-06.ru>']]
		result = []

		name = test_47
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_47', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-07.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-07.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-07.ru>']]
		result = []

		name = test_48
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_48', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-08.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-08.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-08.ru>']]
		result = []

		name = test_49
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_49', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-09.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-09.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-09.ru>']]
		result = []

		name = test_50
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_50', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-10.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-10.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-10.ru>']]
		result = []

		name = test_51
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_51', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-11.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-11.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-11.ru>']]
		result = []

		name = test_52
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_52', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-bad-12.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<syntax-update-bad-12.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-bad-12.ru>']]
		result = []

		name = test_53
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'test_53', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-53.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-08-07#resolution_3>'}, 'actions': [['mf:action', '<syntax-update-53.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-53.ru>']]
		result = []

		name = test_54
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}
			assigned_type_number = 9
		test = {'name': 'test_54', 'type': {'rdf:type': 'mf:NegativeUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-54.ru"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-12-11#resolution_5>'}, 'actions': [['mf:action', '<syntax-update-54.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 1', 'manifest': 'sparql11/data-sparql11/syntax-update-1/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-1', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<syntax-update-54.ru>']]
		result = []
Parsing sparql11/data-sparql11/syntax-update-1/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/syntax-update-2/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[1] == expected_tests [1] :: 
[parse_manifest] INFO: expected_tests[1] == tests__names [1] :: 

		name = syntax-update-other-01
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}
			assigned_type_number = 10
		test = {'name': 'syntax-update-other-01', 'type': {'rdf:type': 'mf:PositiveUpdateSyntaxTest11'}, 'mf_name': {'mf:name': '"syntax-update-other-01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2011-04-05#resolution_2>'}, 'actions': [['mf:action', '<large-request-01.ru>']], 'result': [], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Syntax Update 2', 'manifest': 'sparql11/data-sparql11/syntax-update-2/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/syntax-update-2', 'version': 'Sparql 1.1'}
		actions = [['mf:action', '<large-request-01.ru>']]
		result = []
Parsing sparql11/data-sparql11/syntax-update-2/manifest.ttl done!

Found manifest in: sparql11/data-sparql11/update-silent/manifest.ttl
Parsing.....
[parse_manifest] INFO: tests_number[13] == expected_tests [13] :: 
[parse_manifest] INFO: expected_tests[13] == tests__names [13] :: 

		name = load-silent
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'load-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"LOAD SILENT"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<load-silent.ru>']], 'result': ['[]'], 'comment': {'rdfs:comment': '"Loading a non-existent graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<load-silent.ru>']]
		result = ['[]']
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1

		name = load-into-silent
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'load-into-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"LOAD SILENT INTO"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<load-silent-into.ru>']], 'result': ['[]'], 'comment': {'rdfs:comment': '"Loading a non-existent named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<load-silent-into.ru>']]
		result = ['[]']
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1

		name = clear-silent
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'clear-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"CLEAR SILENT GRAPH iri"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<clear-silent.ru>'], ['ut:data', '<spo.ttl>']], 'result': [['ut:data', '<spo.ttl>']], 'comment': {'rdfs:comment': '"Clearing a non-existent named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<clear-silent.ru>'], ['ut:data', '<spo.ttl>']]
		result = [['ut:data', '<spo.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = clear-default-silent
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'clear-default-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"CLEAR SILENT DEFAULT"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<clear-default-silent.ru>']], 'result': ['[]'], 'comment': {'rdfs:comment': '"Clearing the already empty default graph. (This operation would also succeed without SILENT)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<clear-default-silent.ru>']]
		result = ['[]']
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1

		name = create-silent
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'create-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"CREATE SILENT iri"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<create-silent.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'result': [['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]], 'comment': {'rdfs:comment': '"Creation of an already existent named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<create-silent.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
		result = [['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g1"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = drop-silent
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'drop-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DROP SILENT GRAPH iri"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<drop-silent.ru>'], ['ut:data', '<spo.ttl>']], 'result': [['ut:data', '<spo.ttl>']], 'comment': {'rdfs:comment': '"Clearing a non-existent named graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<drop-silent.ru>'], ['ut:data', '<spo.ttl>']]
		result = [['ut:data', '<spo.ttl>']]
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
					parse_to_yaml { .ttl or .srx }

		name = drop-default-silent
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'drop-default-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"DROP SILENT DEFAULT"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<drop-default-silent.ru>']], 'result': ['[]'], 'comment': {'rdfs:comment': '"Clearing the already empty default graph. (This operation would also succeed withou SILENT)"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<drop-default-silent.ru>']]
		result = ['[]']
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1

		name = copy-silent
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'copy-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"COPY SILENT"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<copy-silent.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"copy a non-existent graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<copy-silent.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = copy-to-default-silent
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'copy-to-default-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"COPY SILENT TO DEFAULT"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<copy-to-default-silent.ru>']], 'result': ['[]'], 'comment': {'rdfs:comment': '"copy a non-existent graph to default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<copy-to-default-silent.ru>']]
		result = ['[]']
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1

		name = move-silent
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'move-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"MOVE SILENT"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<move-silent.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"move a non-existent graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<move-silent.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = move-to-default-silent
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'move-to-default-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"MOVE SILENT TO DEFAULT"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<move-to-default-silent.ru>']], 'result': ['[]'], 'comment': {'rdfs:comment': '"move a non-existent graph to default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<move-to-default-silent.ru>']]
		result = ['[]']
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1

		name = add-silent
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'add-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"ADD SILENT"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<add-silent.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'result': [['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]], 'comment': {'rdfs:comment': '"add a non-existent graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<add-silent.ru>'], ['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
		result = [['graphData', [['ut:graph', '<spo.ttl>'], ['rdfs:label', '"http://example.org/g2"']]]]
			 »» Checking result contents.... ««
				 »»» Num = 0
					 >> graphData may be present in result

		name = add-to-default-silent
		 »» Empty result-test ««
		type = {'rdf:type': 'mf:UpdateEvaluationTest'}
			assigned_type_number = 4
		test = {'name': 'add-to-default-silent', 'type': {'rdf:type': 'mf:UpdateEvaluationTest'}, 'mf_name': {'mf:name': '"ADD SILENT TO DEFAULT"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved;'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2009/sparql/meeting/2012-02-07#resolution_3>'}, 'actions': [['ut:request', '<add-to-default-silent.ru>']], 'result': ['[]'], 'comment': {'rdfs:comment': '"add a non-existent graph to default graph"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'SPARQL 1.1 Update test cases for SILENT', 'manifest': 'sparql11/data-sparql11/update-silent/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-sparql11/update-silent', 'version': 'Sparql 1.1'}
		actions = [['ut:request', '<add-to-default-silent.ru>']]
		result = ['[]']
			 »» Checking result contents.... ««
				 »»» Num = 0
				 »»» Num = 1
Parsing sparql11/data-sparql11/update-silent/manifest.ttl done!

originalWorkDir = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python
currentWorkDir = /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter Semester/git_ad_freiburg_qlever/qlever-code/build/benchmark

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  1  = {'name': 'join-combo-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Join operator with OPTs, BGPs, and UNIONs"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0096/21-dawg-minutes.html>'}, 'actions': [['qt:query', '<join-combo-1.rq>'], ['qt:data', '<join-combo-graph-2.ttl>']], 'result': ['<join-combo-1.srx>'], 'comment': {'rdfs:comment': '"""Tests nested combination of Join with a BGP / OPT and a BGP / UNION"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i join-combo-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/join-combo-graph-2.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:46:27.069\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:46:27.070\t- INFO:  You specified the input format: TTL\n2022-06-01 17:46:27.070\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:46:27.070\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:46:27.070\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:46:27.070\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:46:27.070\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:46:27.070\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/join-combo-graph-2.ttl ...\n2022-06-01 17:46:27.415\t- INFO:  Done, total number of triples read: 11 [may contain duplicates]\n2022-06-01 17:46:27.415\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:46:27.415\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:46:27.416\t- INFO:  Number of words in internal vocabulary: 13\n2022-06-01 17:46:27.416\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:46:27.418\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:46:27.418\t- INFO:  Removing temporary files ...\n2022-06-01 17:46:27.423\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:46:27.425\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:46:28.247\t- INFO:  Done, total number of triples converted: 11\n2022-06-01 17:46:28.251\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:46:28.252\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:46:28.252\t- INFO:  Reduction of size of internal vocabulary: 59%\n2022-06-01 17:46:28.252\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:46:29.144\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:46:29.147\t- INFO:  Statistics for PSO: #relations = 8, #blocks = 1, #triples = 11\n2022-06-01 17:46:29.147\t- INFO:  Statistics for POS: #relations = 8, #blocks = 1, #triples = 11\n2022-06-01 17:46:29.147\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:46:29.147\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:46:30.835\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:46:30.839\t- INFO:  Statistics for SPO: #relations = 4, #blocks = 1, #triples = 11\n2022-06-01 17:46:30.840\t- INFO:  Statistics for SOP: #relations = 4, #blocks = 1, #triples = 11\n2022-06-01 17:46:30.840\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:46:30.840\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:46:30.841\t- INFO:  Number of distinct patterns: 4\n2022-06-01 17:46:30.841\t- INFO:  Number of subjects with pattern: 4 [all]\n2022-06-01 17:46:30.841\t- INFO:  Total number of distinct subject-predicate pairs: 10\n2022-06-01 17:46:30.841\t- INFO:  Average number of predicates per subject: 2.5\n2022-06-01 17:46:30.841\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:46:31.716\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:46:31.721\t- INFO:  Statistics for OSP: #relations = 8, #blocks = 1, #triples = 11\n2022-06-01 17:46:31.721\t- INFO:  Statistics for OPS: #relations = 8, #blocks = 1, #triples = 11\n2022-06-01 17:46:31.721\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:46:31.721\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:46:31.722\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i join-combo-1 -p 9099 -m 1

Port is not open
Server not reached: new try in 3 seconds....
b'2022-06-01 17:46:31.898\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:46:31.899\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:46:31.906\t- INFO:  Reading internal vocabulary from file join-combo-1.vocabulary.internal ...\n'
b'2022-06-01 17:46:31.908\t- INFO:  Done, number of words: 13\n'
b'2022-06-01 17:46:31.912\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:46:31.914\t- INFO:  Registered PSO permutation: #relations = 8, #blocks = 1, #triples = 11\n'
b'2022-06-01 17:46:31.916\t- INFO:  Registered POS permutation: #relations = 8, #blocks = 1, #triples = 11\n'
b'2022-06-01 17:46:31.920\t- INFO:  Registered OPS permutation: #relations = 8, #blocks = 1, #triples = 11\n'
b'2022-06-01 17:46:31.927\t- INFO:  Registered OSP permutation: #relations = 8, #blocks = 1, #triples = 11\n'
b'2022-06-01 17:46:31.933\t- INFO:  Registered SPO permutation: #relations = 4, #blocks = 1, #triples = 11\n'
b'2022-06-01 17:46:31.938\t- INFO:  Registered SOP permutation: #relations = 4, #blocks = 1, #triples = 11\n'
b'2022-06-01 17:46:31.938\t- INFO:  Reading patterns from file join-combo-1.index.patterns ...\n'
b'2022-06-01 17:46:31.941\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:46:31.943\t- INFO:  The server is ready\n'
Port is open

Ascii Request_data: 'PREFIX :    <http://example/>\n\nSELECT ?a ?y ?d ?z\n{ \n    ?a :p ?c OPTIONAL { ?a :r ?d }. \n    ?a ?p 1 { ?p a ?y } UNION { ?a ?z ?p } \n}'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/join-combo-1.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A++++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0ASELECT+%3Fa+%3Fy+%3Fd+%3Fz%0A%7B+%0A++++%3Fa+%3Ap+%3Fc+OPTIONAL+%7B+%3Fa+%3Ar+%3Fd+%7D.+%0A++++%3Fa+%3Fp+1+%7B+%3Fp+a+%3Fy+%7D+UNION+%7B+%3Fa+%3Fz+%3Fp+%7D+%0A%7D&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Error in SELECT: unexpected token: {", "query": "PREFIX :    <http://example/>\n\nSELECT ?a ?y ?d ?z\n{ \n    ?a :p ?c OPTIONAL { ?a :r ?d }. \n    ?a ?p 1 { ?p a ?y } UNION { ?a ?z ?p } \n}", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 1, "total": 1}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:46:34.882\t- INFO:  Query: PREFIX :    <http://example/>\n'
b'\n'
b'SELECT ?a ?y ?d ?z\n'
b'{ \n'
b'    ?a :p ?c OPTIONAL { ?a :r ?d }. \n'
b'    ?a ?p 1 { ?p a ?y } UNION { ?a ?z ?p } \n'
b'}\n'
b'2022-06-01 17:47:04.873\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  2  = {'name': 'join-combo-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Join operator with Graph and Union"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0096/21-dawg-minutes.html>'}, 'actions': [['qt:query', '<join-combo-2.rq>'], ['qt:graphData', '<join-combo-graph-1.ttl>'], ['qt:data', '<join-combo-graph-2.ttl>']], 'result': ['<join-combo-2.srx>'], 'comment': {'rdfs:comment': '"""Tests combination of Join operator with Graph on LHS and Union on RHS"""'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i join-combo-2 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/join-combo-graph-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:47:05.431\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:47:05.431\t- INFO:  You specified the input format: TTL\n2022-06-01 17:47:05.432\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:47:05.432\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:47:05.432\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:47:05.432\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:47:05.432\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:47:05.432\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/join-combo-graph-1.ttl ...\n2022-06-01 17:47:05.763\t- INFO:  Done, total number of triples read: 2 [may contain duplicates]\n2022-06-01 17:47:05.763\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:47:05.763\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:47:05.764\t- INFO:  Number of words in internal vocabulary: 4\n2022-06-01 17:47:05.764\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:47:05.766\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:47:05.766\t- INFO:  Removing temporary files ...\n2022-06-01 17:47:05.771\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:47:05.773\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:47:06.537\t- INFO:  Done, total number of triples converted: 2\n2022-06-01 17:47:06.540\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:47:06.540\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:47:06.540\t- INFO:  Reduction of size of internal vocabulary: 19%\n2022-06-01 17:47:06.541\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:47:07.457\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:47:07.460\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:47:07.460\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:47:07.460\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:47:07.460\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:47:09.104\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:47:09.109\t- INFO:  Statistics for SPO: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:47:09.109\t- INFO:  Statistics for SOP: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:47:09.109\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:47:09.110\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:47:09.110\t- INFO:  Number of distinct patterns: 1\n2022-06-01 17:47:09.110\t- INFO:  Number of subjects with pattern: 2 [all]\n2022-06-01 17:47:09.111\t- INFO:  Total number of distinct subject-predicate pairs: 2\n2022-06-01 17:47:09.111\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:47:09.111\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 17:47:10.003\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:47:10.008\t- INFO:  Statistics for OSP: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:47:10.008\t- INFO:  Statistics for OPS: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:47:10.008\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:47:10.008\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:47:10.009\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i join-combo-2 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX :    <http://example/>\n\nSELECT ?x ?y ?z\n{ \n    GRAPH ?g { ?x ?p 1 } { ?x :p ?y } UNION { ?p a ?z }\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/join-combo-2.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A++++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0ASELECT+%3Fx+%3Fy+%3Fz%0A%7B+%0A++++GRAPH+%3Fg+%7B+%3Fx+%3Fp+1+%7D+%7B+%3Fx+%3Ap+%3Fy+%7D+UNION+%7B+%3Fp+a+%3Fz+%7D%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: GRAPH ?g { ?x ?p 1 } { ?x :p ?y } UNION { ?p a ?z }\n}\n", "query": "PREFIX :    <http://example/>\n\nSELECT ?x ?y ?z\n{ \n    GRAPH ?g { ?x ?p 1 } { ?x :p ?y } UNION { ?p a ?z }\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:47:10.199\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:47:10.200\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:47:10.207\t- INFO:  Reading internal vocabulary from file join-combo-2.vocabulary.internal ...\n'
b'2022-06-01 17:47:10.209\t- INFO:  Done, number of words: 4\n'
b'2022-06-01 17:47:10.214\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:47:10.217\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:47:10.219\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:47:10.225\t- INFO:  Registered OPS permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:47:10.232\t- INFO:  Registered OSP permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:47:10.237\t- INFO:  Registered SPO permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:47:10.243\t- INFO:  Registered SOP permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:47:10.243\t- INFO:  Reading patterns from file join-combo-2.index.patterns ...\n'
b'2022-06-01 17:47:10.247\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:47:10.249\t- INFO:  The server is ready\n'
b'2022-06-01 17:47:10.175\t- INFO:  Query: PREFIX :    <http://example/>\n'
b'\n'
b'SELECT ?x ?y ?z\n'
b'{ \n'
b'    GRAPH ?g { ?x ?p 1 } { ?x :p ?y } UNION { ?p a ?z }\n'
b'}\n'
b'\n'
b'2022-06-01 17:47:40.171\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  3  = {'name': 'nested-opt-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Nested Optionals - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<two-nested-opt.rq>'], ['qt:data', '<two-nested-opt.ttl>']], 'result': ['<two-nested-opt.srx>'], 'comment': {'rdfs:comment': '"""Nested-optionals with a shared variable that does not appear in the middle pattern (a not well-formed query pattern as per "Semantics'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i nested-opt-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/two-nested-opt.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:47:40.727\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:47:40.727\t- INFO:  You specified the input format: TTL\n2022-06-01 17:47:40.727\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:47:40.727\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:47:40.728\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:47:40.728\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:47:40.728\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:47:40.728\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/two-nested-opt.ttl ...\n2022-06-01 17:47:41.056\t- INFO:  Done, total number of triples read: 4 [may contain duplicates]\n2022-06-01 17:47:41.056\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:47:41.056\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:47:41.057\t- INFO:  Number of words in internal vocabulary: 6\n2022-06-01 17:47:41.057\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:47:41.058\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:47:41.059\t- INFO:  Removing temporary files ...\n2022-06-01 17:47:41.064\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:47:41.066\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:47:41.841\t- INFO:  Done, total number of triples converted: 4\n2022-06-01 17:47:41.844\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:47:41.844\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:47:41.844\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 17:47:41.845\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:47:42.768\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:47:42.773\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 17:47:42.773\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 17:47:42.773\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:47:42.773\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:47:44.439\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:47:44.443\t- INFO:  Statistics for SPO: #relations = 3, #blocks = 1, #triples = 4\n2022-06-01 17:47:44.443\t- INFO:  Statistics for SOP: #relations = 3, #blocks = 1, #triples = 4\n2022-06-01 17:47:44.443\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:47:44.443\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:47:44.444\t- INFO:  Number of distinct patterns: 2\n2022-06-01 17:47:44.444\t- INFO:  Number of subjects with pattern: 3 [all]\n2022-06-01 17:47:44.444\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 17:47:44.444\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:47:44.444\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 17:47:45.336\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:47:45.342\t- INFO:  Statistics for OSP: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 17:47:45.342\t- INFO:  Statistics for OPS: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 17:47:45.342\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:47:45.342\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:47:45.343\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i nested-opt-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX :    <http://example/>\n\nSELECT *\n{ \n    :x1 :p ?v .\n    OPTIONAL\n    {\n      :x3 :q ?w .\n      OPTIONAL { :x2 :p ?v }\n    }\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/two-nested-opt.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A++++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0ASELECT+%2A%0A%7B+%0A++++%3Ax1+%3Ap+%3Fv+.%0A++++OPTIONAL%0A++++%7B%0A++++++%3Ax3+%3Aq+%3Fw+.%0A++++++OPTIONAL+%7B+%3Ax2+%3Ap+%3Fv+%7D%0A++++%7D%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Keyword WHERE expected after SELECT '*'", "query": "PREFIX :    <http://example/>\n\nSELECT *\n{ \n    :x1 :p ?v .\n    OPTIONAL\n    {\n      :x3 :q ?w .\n      OPTIONAL { :x2 :p ?v }\n    }\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:47:45.535\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:47:45.536\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:47:45.544\t- INFO:  Reading internal vocabulary from file nested-opt-1.vocabulary.internal ...\n'
b'2022-06-01 17:47:45.547\t- INFO:  Done, number of words: 6\n'
b'2022-06-01 17:47:45.551\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:47:45.553\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:47:45.556\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:47:45.561\t- INFO:  Registered OPS permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:47:45.566\t- INFO:  Registered OSP permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:47:45.571\t- INFO:  Registered SPO permutation: #relations = 3, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:47:45.576\t- INFO:  Registered SOP permutation: #relations = 3, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:47:45.576\t- INFO:  Reading patterns from file nested-opt-1.index.patterns ...\n'
b'2022-06-01 17:47:45.580\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:47:45.582\t- INFO:  The server is ready\n'
b'2022-06-01 17:47:45.528\t- INFO:  Query: PREFIX :    <http://example/>\n'
b'\n'
b'SELECT *\n'
b'{ \n'
b'    :x1 :p ?v .\n'
b'    OPTIONAL\n'
b'    {\n'
b'      :x3 :q ?w .\n'
b'      OPTIONAL { :x2 :p ?v }\n'
b'    }\n'
b'}\n'
b'\n'
b'2022-06-01 17:48:15.525\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  4  = {'name': 'nested-opt-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Nested Optionals - 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<two-nested-opt-alt.rq>'], ['qt:data', '<two-nested-opt.ttl>']], 'result': ['<two-nested-opt-alt.srx>'], 'comment': {'rdfs:comment': '"OPTIONALs parse in a left-associative manner"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i nested-opt-2 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/two-nested-opt.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:48:16.080\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:48:16.080\t- INFO:  You specified the input format: TTL\n2022-06-01 17:48:16.080\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:48:16.081\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:48:16.081\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:48:16.081\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:48:16.081\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:48:16.081\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/two-nested-opt.ttl ...\n2022-06-01 17:48:16.408\t- INFO:  Done, total number of triples read: 4 [may contain duplicates]\n2022-06-01 17:48:16.408\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:48:16.408\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:48:16.409\t- INFO:  Number of words in internal vocabulary: 6\n2022-06-01 17:48:16.409\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:48:16.411\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:48:16.411\t- INFO:  Removing temporary files ...\n2022-06-01 17:48:16.417\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:48:16.418\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:48:17.188\t- INFO:  Done, total number of triples converted: 4\n2022-06-01 17:48:17.191\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:48:17.191\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:48:17.191\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 17:48:17.192\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:48:18.092\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:48:18.096\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 17:48:18.097\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 17:48:18.097\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:48:18.097\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:48:19.743\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:48:19.748\t- INFO:  Statistics for SPO: #relations = 3, #blocks = 1, #triples = 4\n2022-06-01 17:48:19.748\t- INFO:  Statistics for SOP: #relations = 3, #blocks = 1, #triples = 4\n2022-06-01 17:48:19.748\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:48:19.748\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:48:19.749\t- INFO:  Number of distinct patterns: 2\n2022-06-01 17:48:19.749\t- INFO:  Number of subjects with pattern: 3 [all]\n2022-06-01 17:48:19.749\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 17:48:19.749\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:48:19.749\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 17:48:20.650\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:48:20.656\t- INFO:  Statistics for OSP: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 17:48:20.656\t- INFO:  Statistics for OPS: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 17:48:20.656\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:48:20.656\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:48:20.657\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i nested-opt-2 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX :    <http://example/>\n\n## The nested optional example, rewritten to a form that is the same\n## for the SPARQL algebra and the declarative semantics.\nSELECT *\n{ \n    :x1 :p ?v .\n    OPTIONAL { :x3 :q ?w }\n    OPTIONAL { :x3 :q ?w  . :x2 :p ?v }\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/two-nested-opt-alt.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A++++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0A%23%23+The+nested+optional+example%2C+rewritten+to+a+form+that+is+the+same%0A%23%23+for+the+SPARQL+algebra+and+the+declarative+semantics.%0ASELECT+%2A%0A%7B+%0A++++%3Ax1+%3Ap+%3Fv+.%0A++++OPTIONAL+%7B+%3Ax3+%3Aq+%3Fw+%7D%0A++++OPTIONAL+%7B+%3Ax3+%3Aq+%3Fw++.+%3Ax2+%3Ap+%3Fv+%7D%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Keyword WHERE expected after SELECT '*'", "query": "PREFIX :    <http://example/>\n\n## The nested optional example, rewritten to a form that is the same\n## for the SPARQL algebra and the declarative semantics.\nSELECT *\n{ \n    :x1 :p ?v .\n    OPTIONAL { :x3 :q ?w }\n    OPTIONAL { :x3 :q ?w  . :x2 :p ?v }\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:48:20.894\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:48:20.895\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:48:20.900\t- INFO:  Reading internal vocabulary from file nested-opt-2.vocabulary.internal ...\n'
b'2022-06-01 17:48:20.903\t- INFO:  Done, number of words: 6\n'
b'2022-06-01 17:48:20.905\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:48:20.905\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:20.906\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:20.906\t- INFO:  Registered OPS permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:20.906\t- INFO:  Registered OSP permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:20.907\t- INFO:  Registered SPO permutation: #relations = 3, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:20.907\t- INFO:  Registered SOP permutation: #relations = 3, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:20.907\t- INFO:  Reading patterns from file nested-opt-2.index.patterns ...\n'
b'2022-06-01 17:48:20.907\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:48:20.910\t- INFO:  The server is ready\n'
b'2022-06-01 17:48:20.866\t- INFO:  Query: PREFIX :    <http://example/>\n'
b'\n'
b'## The nested optional example, rewritten to a form that is the same\n'
b'## for the SPARQL algebra and the declarative semantics.\n'
b'SELECT *\n'
b'{ \n'
b'    :x1 :p ?v .\n'
b'    OPTIONAL { :x3 :q ?w }\n'
b'    OPTIONAL { :x3 :q ?w  . :x2 :p ?v }\n'
b'}\n'
b'\n'
b'2022-06-01 17:48:50.860\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  5  = {'name': 'opt-filter-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Optional-filter - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<opt-filter-1.rq>'], ['qt:data', '<opt-filter-1.ttl>']], 'result': ['<opt-filter-1.srx>'], 'comment': {'rdfs:comment': '"A FILTER inside an OPTIONAL can reference a variable bound in the required part of the OPTIONAL"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i opt-filter-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/opt-filter-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:48:51.418\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:48:51.418\t- INFO:  You specified the input format: TTL\n2022-06-01 17:48:51.419\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:48:51.419\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:48:51.419\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:48:51.419\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:48:51.419\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:48:51.419\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/opt-filter-1.ttl ...\n2022-06-01 17:48:51.748\t- INFO:  Done, total number of triples read: 4 [may contain duplicates]\n2022-06-01 17:48:51.748\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:48:51.748\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:48:51.749\t- INFO:  Number of words in internal vocabulary: 6\n2022-06-01 17:48:51.749\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:48:51.751\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:48:51.751\t- INFO:  Removing temporary files ...\n2022-06-01 17:48:51.756\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:48:51.758\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:48:52.526\t- INFO:  Done, total number of triples converted: 4\n2022-06-01 17:48:52.530\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:48:52.530\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:48:52.530\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 17:48:52.531\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:48:53.442\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:48:53.445\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 17:48:53.445\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 17:48:53.445\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:48:53.446\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:48:55.086\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:48:55.090\t- INFO:  Statistics for SPO: #relations = 3, #blocks = 1, #triples = 4\n2022-06-01 17:48:55.090\t- INFO:  Statistics for SOP: #relations = 3, #blocks = 1, #triples = 4\n2022-06-01 17:48:55.090\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:48:55.090\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:48:55.091\t- INFO:  Number of distinct patterns: 2\n2022-06-01 17:48:55.091\t- INFO:  Number of subjects with pattern: 3 [all]\n2022-06-01 17:48:55.091\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 17:48:55.091\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:48:55.092\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 17:48:55.958\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:48:55.963\t- INFO:  Statistics for OSP: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 17:48:55.963\t- INFO:  Statistics for OPS: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 17:48:55.963\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:48:55.963\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:48:55.965\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i opt-filter-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX :    <http://example/>\n\nSELECT *\n{ \n  ?x :p ?v .\n  OPTIONAL\n  { \n    ?y :q ?w .\n    FILTER(?v=2)\n  }\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/opt-filter-1.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A++++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0ASELECT+%2A%0A%7B+%0A++%3Fx+%3Ap+%3Fv+.%0A++OPTIONAL%0A++%7B+%0A++++%3Fy+%3Aq+%3Fw+.%0A++++FILTER%28%3Fv%3D2%29%0A++%7D%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Keyword WHERE expected after SELECT '*'", "query": "PREFIX :    <http://example/>\n\nSELECT *\n{ \n  ?x :p ?v .\n  OPTIONAL\n  { \n    ?y :q ?w .\n    FILTER(?v=2)\n  }\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:48:56.147\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:48:56.148\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:48:56.157\t- INFO:  Reading internal vocabulary from file opt-filter-1.vocabulary.internal ...\n'
b'2022-06-01 17:48:56.160\t- INFO:  Done, number of words: 6\n'
b'2022-06-01 17:48:56.166\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:48:56.168\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:56.171\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:56.176\t- INFO:  Registered OPS permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:56.181\t- INFO:  Registered OSP permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:56.187\t- INFO:  Registered SPO permutation: #relations = 3, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:56.192\t- INFO:  Registered SOP permutation: #relations = 3, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:48:56.192\t- INFO:  Reading patterns from file opt-filter-1.index.patterns ...\n'
b'2022-06-01 17:48:56.194\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:48:56.196\t- INFO:  The server is ready\n'
b'2022-06-01 17:48:56.122\t- INFO:  Query: PREFIX :    <http://example/>\n'
b'\n'
b'SELECT *\n'
b'{ \n'
b'  ?x :p ?v .\n'
b'  OPTIONAL\n'
b'  { \n'
b'    ?y :q ?w .\n'
b'    FILTER(?v=2)\n'
b'  }\n'
b'}\n'
b'\n'
b'2022-06-01 17:49:26.118\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  6  = {'name': 'opt-filter-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Optional-filter - 2 filters"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<opt-filter-2.rq>'], ['qt:data', '<opt-filter-2.ttl>']], 'result': ['<opt-filter-2.srx>'], 'comment': {'rdfs:comment': '"FILTERs inside an OPTIONAL can refer to variables from both the required and optional parts of the construct."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i opt-filter-2 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/opt-filter-2.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:49:26.672\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:49:26.673\t- INFO:  You specified the input format: TTL\n2022-06-01 17:49:26.673\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:49:26.673\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:49:26.673\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:49:26.673\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:49:26.673\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:49:26.674\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/opt-filter-2.ttl ...\n2022-06-01 17:49:27.001\t- INFO:  Done, total number of triples read: 4 [may contain duplicates]\n2022-06-01 17:49:27.001\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:49:27.001\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:49:27.001\t- INFO:  Number of words in internal vocabulary: 6\n2022-06-01 17:49:27.001\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:49:27.003\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:49:27.003\t- INFO:  Removing temporary files ...\n2022-06-01 17:49:27.009\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:49:27.011\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:49:27.776\t- INFO:  Done, total number of triples converted: 4\n2022-06-01 17:49:27.780\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:49:27.780\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:49:27.780\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 17:49:27.781\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:49:28.696\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:49:28.701\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 17:49:28.701\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 17:49:28.701\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:49:28.701\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:49:30.388\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:49:30.393\t- INFO:  Statistics for SPO: #relations = 3, #blocks = 1, #triples = 4\n2022-06-01 17:49:30.393\t- INFO:  Statistics for SOP: #relations = 3, #blocks = 1, #triples = 4\n2022-06-01 17:49:30.393\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:49:30.393\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:49:30.394\t- INFO:  Number of distinct patterns: 2\n2022-06-01 17:49:30.394\t- INFO:  Number of subjects with pattern: 3 [all]\n2022-06-01 17:49:30.394\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 17:49:30.394\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:49:30.394\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 17:49:31.322\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:49:31.328\t- INFO:  Statistics for OSP: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 17:49:31.328\t- INFO:  Statistics for OPS: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 17:49:31.328\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:49:31.328\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:49:31.329\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i opt-filter-2 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX :    <http://example/>\n\nSELECT *\n{ \n  ?x :p ?v .\n  OPTIONAL\n  { \n    ?y :q ?w .\n    FILTER(?v=2)\n    FILTER(?w=3)\n  }\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/opt-filter-2.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A++++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0ASELECT+%2A%0A%7B+%0A++%3Fx+%3Ap+%3Fv+.%0A++OPTIONAL%0A++%7B+%0A++++%3Fy+%3Aq+%3Fw+.%0A++++FILTER%28%3Fv%3D2%29%0A++++FILTER%28%3Fw%3D3%29%0A++%7D%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Keyword WHERE expected after SELECT '*'", "query": "PREFIX :    <http://example/>\n\nSELECT *\n{ \n  ?x :p ?v .\n  OPTIONAL\n  { \n    ?y :q ?w .\n    FILTER(?v=2)\n    FILTER(?w=3)\n  }\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:49:31.522\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:49:31.523\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:49:31.533\t- INFO:  Reading internal vocabulary from file opt-filter-2.vocabulary.internal ...\n'
b'2022-06-01 17:49:31.536\t- INFO:  Done, number of words: 6\n'
b'2022-06-01 17:49:31.540\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:49:31.543\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:49:31.546\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:49:31.552\t- INFO:  Registered OPS permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:49:31.557\t- INFO:  Registered OSP permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:49:31.563\t- INFO:  Registered SPO permutation: #relations = 3, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:49:31.568\t- INFO:  Registered SOP permutation: #relations = 3, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:49:31.568\t- INFO:  Reading patterns from file opt-filter-2.index.patterns ...\n'
b'2022-06-01 17:49:31.571\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:49:31.574\t- INFO:  The server is ready\n'
b'2022-06-01 17:49:31.495\t- INFO:  Query: PREFIX :    <http://example/>\n'
b'\n'
b'SELECT *\n'
b'{ \n'
b'  ?x :p ?v .\n'
b'  OPTIONAL\n'
b'  { \n'
b'    ?y :q ?w .\n'
b'    FILTER(?v=2)\n'
b'    FILTER(?w=3)\n'
b'  }\n'
b'}\n'
b'\n'
b'2022-06-01 17:50:01.491\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  7  = {'name': 'opt-filter-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Optional-filter - scope of variable"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<opt-filter-3.rq>'], ['qt:data', '<opt-filter-3.ttl>']], 'result': ['<opt-filter-3.srx>'], 'comment': {'rdfs:comment': '"FILTERs in an OPTIONAL do not extend to variables bound outside of the LeftJoin(...) operation"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i opt-filter-3 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/opt-filter-3.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:50:02.050\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:50:02.051\t- INFO:  You specified the input format: TTL\n2022-06-01 17:50:02.051\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:50:02.051\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:50:02.051\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:50:02.051\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:50:02.051\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:50:02.051\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/opt-filter-3.ttl ...\n2022-06-01 17:50:02.378\t- INFO:  Done, total number of triples read: 4 [may contain duplicates]\n2022-06-01 17:50:02.378\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:50:02.378\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:50:02.378\t- INFO:  Number of words in internal vocabulary: 6\n2022-06-01 17:50:02.379\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:50:02.380\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:50:02.380\t- INFO:  Removing temporary files ...\n2022-06-01 17:50:02.386\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:50:02.388\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:50:03.154\t- INFO:  Done, total number of triples converted: 4\n2022-06-01 17:50:03.158\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:50:03.158\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:50:03.158\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 17:50:03.159\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:50:04.076\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:50:04.079\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 17:50:04.079\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 17:50:04.079\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:50:04.079\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:50:05.735\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:50:05.740\t- INFO:  Statistics for SPO: #relations = 3, #blocks = 1, #triples = 4\n2022-06-01 17:50:05.740\t- INFO:  Statistics for SOP: #relations = 3, #blocks = 1, #triples = 4\n2022-06-01 17:50:05.740\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:50:05.740\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:50:05.741\t- INFO:  Number of distinct patterns: 2\n2022-06-01 17:50:05.741\t- INFO:  Number of subjects with pattern: 3 [all]\n2022-06-01 17:50:05.741\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 17:50:05.741\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:50:05.742\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 17:50:06.663\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:50:06.668\t- INFO:  Statistics for OSP: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 17:50:06.668\t- INFO:  Statistics for OPS: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 17:50:06.668\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:50:06.668\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:50:06.669\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i opt-filter-3 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX :    <http://example/>\n\nSELECT *\n{ \n    :x :p ?v . \n    { :x :q ?w \n      # ?v is not in scope so ?v2 never set\n      OPTIONAL {  :x :p ?v2 FILTER(?v = 1) }\n    }\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/opt-filter-3.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A++++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0ASELECT+%2A%0A%7B+%0A++++%3Ax+%3Ap+%3Fv+.+%0A++++%7B+%3Ax+%3Aq+%3Fw+%0A++++++%23+%3Fv+is+not+in+scope+so+%3Fv2+never+set%0A++++++OPTIONAL+%7B++%3Ax+%3Ap+%3Fv2+FILTER%28%3Fv+%3D+1%29+%7D%0A++++%7D%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Keyword WHERE expected after SELECT '*'", "query": "PREFIX :    <http://example/>\n\nSELECT *\n{ \n    :x :p ?v . \n    { :x :q ?w \n      # ?v is not in scope so ?v2 never set\n      OPTIONAL {  :x :p ?v2 FILTER(?v = 1) }\n    }\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:50:06.865\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:50:06.866\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:50:06.874\t- INFO:  Reading internal vocabulary from file opt-filter-3.vocabulary.internal ...\n'
b'2022-06-01 17:50:06.876\t- INFO:  Done, number of words: 6\n'
b'2022-06-01 17:50:06.881\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:50:06.883\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:50:06.885\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:50:06.890\t- INFO:  Registered OPS permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:50:06.896\t- INFO:  Registered OSP permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:50:06.901\t- INFO:  Registered SPO permutation: #relations = 3, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:50:06.906\t- INFO:  Registered SOP permutation: #relations = 3, #blocks = 1, #triples = 4\n'
b'2022-06-01 17:50:06.906\t- INFO:  Reading patterns from file opt-filter-3.index.patterns ...\n'
b'2022-06-01 17:50:06.908\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:50:06.911\t- INFO:  The server is ready\n'
b'2022-06-01 17:50:06.839\t- INFO:  Query: PREFIX :    <http://example/>\n'
b'\n'
b'SELECT *\n'
b'{ \n'
b'    :x :p ?v . \n'
b'    { :x :q ?w \n'
b'      # ?v is not in scope so ?v2 never set\n'
b'      OPTIONAL {  :x :p ?v2 FILTER(?v = 1) }\n'
b'    }\n'
b'}\n'
b'\n'
b'2022-06-01 17:50:36.835\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  8  = {'name': 'filter-place-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-placement - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-placement-1.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<filter-placement-1.srx>'], 'comment': {'rdfs:comment': '"FILTER placed after the triple pattern that contains the variable tested"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i filter-place-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-2.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:50:37.391\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:50:37.392\t- INFO:  You specified the input format: TTL\n2022-06-01 17:50:37.392\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:50:37.392\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:50:37.392\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:50:37.392\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:50:37.392\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:50:37.392\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-2.ttl ...\n2022-06-01 17:50:37.718\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 17:50:37.718\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:50:37.718\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:50:37.719\t- INFO:  Number of words in internal vocabulary: 4\n2022-06-01 17:50:37.719\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:50:37.721\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:50:37.721\t- INFO:  Removing temporary files ...\n2022-06-01 17:50:37.727\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:50:37.728\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:50:38.506\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 17:50:38.510\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:50:38.510\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:50:38.510\t- INFO:  Reduction of size of internal vocabulary: 34%\n2022-06-01 17:50:38.510\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:50:39.426\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:50:39.430\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 7\n2022-06-01 17:50:39.431\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 7\n2022-06-01 17:50:39.431\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:50:39.431\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:50:41.077\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:50:41.082\t- INFO:  Statistics for SPO: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 17:50:41.082\t- INFO:  Statistics for SOP: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 17:50:41.082\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:50:41.082\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:50:41.083\t- INFO:  Number of distinct patterns: 1\n2022-06-01 17:50:41.083\t- INFO:  Number of subjects with pattern: 1 [all]\n2022-06-01 17:50:41.083\t- INFO:  Total number of distinct subject-predicate pairs: 2\n2022-06-01 17:50:41.083\t- INFO:  Average number of predicates per subject: 2.0\n2022-06-01 17:50:41.083\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:50:41.980\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:50:41.986\t- INFO:  Statistics for OSP: #relations = 4, #blocks = 1, #triples = 7\n2022-06-01 17:50:41.986\t- INFO:  Statistics for OPS: #relations = 4, #blocks = 1, #triples = 7\n2022-06-01 17:50:41.986\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:50:41.986\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:50:41.987\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i filter-place-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example/>\n\nSELECT ?v \n{ \n    ?s :p ?v . \n    FILTER (?v = 2)\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/filter-placement-1.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample%2F%3E%0A%0ASELECT+%3Fv+%0A%7B+%0A++++%3Fs+%3Ap+%3Fv+.+%0A++++FILTER+%28%3Fv+%3D+2%29%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Error in SELECT: unexpected token: {", "query": "PREFIX : <http://example/>\n\nSELECT ?v \n{ \n    ?s :p ?v . \n    FILTER (?v = 2)\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:50:42.242\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:50:42.243\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:50:42.251\t- INFO:  Reading internal vocabulary from file filter-place-1.vocabulary.internal ...\n'
b'2022-06-01 17:50:42.254\t- INFO:  Done, number of words: 4\n'
b'2022-06-01 17:50:42.257\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:50:42.260\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:50:42.263\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:50:42.269\t- INFO:  Registered OPS permutation: #relations = 4, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:50:42.276\t- INFO:  Registered OSP permutation: #relations = 4, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:50:42.282\t- INFO:  Registered SPO permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:50:42.287\t- INFO:  Registered SOP permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:50:42.287\t- INFO:  Reading patterns from file filter-place-1.index.patterns ...\n'
b'2022-06-01 17:50:42.290\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:50:42.292\t- INFO:  The server is ready\n'
b'2022-06-01 17:50:42.214\t- INFO:  Query: PREFIX : <http://example/>\n'
b'\n'
b'SELECT ?v \n'
b'{ \n'
b'    ?s :p ?v . \n'
b'    FILTER (?v = 2)\n'
b'}\n'
b'\n'
b'2022-06-01 17:51:12.210\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  9  = {'name': 'filter-place-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-placement - 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-placement-2.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<filter-placement-2.srx>'], 'comment': {'rdfs:comment': '"FILTERs are scoped to the nearest enclosing group - placement within that group does not matter"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i filter-place-2 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-2.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:51:12.766\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:51:12.767\t- INFO:  You specified the input format: TTL\n2022-06-01 17:51:12.767\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:51:12.767\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:51:12.767\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:51:12.767\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:51:12.767\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:51:12.767\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-2.ttl ...\n2022-06-01 17:51:13.093\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 17:51:13.093\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:51:13.093\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:51:13.094\t- INFO:  Number of words in internal vocabulary: 4\n2022-06-01 17:51:13.094\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:51:13.096\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:51:13.096\t- INFO:  Removing temporary files ...\n2022-06-01 17:51:13.102\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:51:13.103\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:51:13.889\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 17:51:13.893\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:51:13.893\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:51:13.893\t- INFO:  Reduction of size of internal vocabulary: 34%\n2022-06-01 17:51:13.894\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:51:14.807\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:51:14.810\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 7\n2022-06-01 17:51:14.810\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 7\n2022-06-01 17:51:14.811\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:51:14.811\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:51:16.448\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:51:16.452\t- INFO:  Statistics for SPO: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 17:51:16.452\t- INFO:  Statistics for SOP: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 17:51:16.452\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:51:16.452\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:51:16.453\t- INFO:  Number of distinct patterns: 1\n2022-06-01 17:51:16.453\t- INFO:  Number of subjects with pattern: 1 [all]\n2022-06-01 17:51:16.453\t- INFO:  Total number of distinct subject-predicate pairs: 2\n2022-06-01 17:51:16.453\t- INFO:  Average number of predicates per subject: 2.0\n2022-06-01 17:51:16.453\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:51:17.376\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:51:17.382\t- INFO:  Statistics for OSP: #relations = 4, #blocks = 1, #triples = 7\n2022-06-01 17:51:17.382\t- INFO:  Statistics for OPS: #relations = 4, #blocks = 1, #triples = 7\n2022-06-01 17:51:17.382\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:51:17.382\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:51:17.384\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i filter-place-2 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example/>\n\nSELECT ?v \n{ \n    FILTER (?v = 2)\n    ?s :p ?v . \n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/filter-placement-2.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample%2F%3E%0A%0ASELECT+%3Fv+%0A%7B+%0A++++FILTER+%28%3Fv+%3D+2%29%0A++++%3Fs+%3Ap+%3Fv+.+%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Error in SELECT: unexpected token: {", "query": "PREFIX : <http://example/>\n\nSELECT ?v \n{ \n    FILTER (?v = 2)\n    ?s :p ?v . \n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:51:17.570\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:51:17.570\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:51:17.576\t- INFO:  Reading internal vocabulary from file filter-place-2.vocabulary.internal ...\n'
b'2022-06-01 17:51:17.579\t- INFO:  Done, number of words: 4\n'
b'2022-06-01 17:51:17.583\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:51:17.585\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:17.587\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:17.592\t- INFO:  Registered OPS permutation: #relations = 4, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:17.597\t- INFO:  Registered OSP permutation: #relations = 4, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:17.602\t- INFO:  Registered SPO permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:17.607\t- INFO:  Registered SOP permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:17.607\t- INFO:  Reading patterns from file filter-place-2.index.patterns ...\n'
b'2022-06-01 17:51:17.609\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:51:17.611\t- INFO:  The server is ready\n'
b'2022-06-01 17:51:17.548\t- INFO:  Query: PREFIX : <http://example/>\n'
b'\n'
b'SELECT ?v \n'
b'{ \n'
b'    FILTER (?v = 2)\n'
b'    ?s :p ?v . \n'
b'}\n'
b'\n'
b'2022-06-01 17:51:47.543\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  10  = {'name': 'filter-place-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-placement - 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-placement-3.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<filter-placement-3.srx>'], 'comment': {'rdfs:comment': '"FILTERs are scoped to the nearest enclosing group - placement within that group does not matter"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i filter-place-3 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-2.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:51:48.099\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:51:48.100\t- INFO:  You specified the input format: TTL\n2022-06-01 17:51:48.100\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:51:48.100\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:51:48.101\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:51:48.101\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:51:48.101\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:51:48.101\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-2.ttl ...\n2022-06-01 17:51:48.434\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 17:51:48.434\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:51:48.434\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:51:48.435\t- INFO:  Number of words in internal vocabulary: 4\n2022-06-01 17:51:48.435\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:51:48.437\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:51:48.437\t- INFO:  Removing temporary files ...\n2022-06-01 17:51:48.443\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:51:48.444\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:51:49.219\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 17:51:49.223\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:51:49.223\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:51:49.223\t- INFO:  Reduction of size of internal vocabulary: 34%\n2022-06-01 17:51:49.224\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:51:50.118\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:51:50.121\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 7\n2022-06-01 17:51:50.122\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 7\n2022-06-01 17:51:50.122\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:51:50.122\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:51:51.759\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:51:51.764\t- INFO:  Statistics for SPO: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 17:51:51.764\t- INFO:  Statistics for SOP: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 17:51:51.764\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:51:51.764\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:51:51.765\t- INFO:  Number of distinct patterns: 1\n2022-06-01 17:51:51.765\t- INFO:  Number of subjects with pattern: 1 [all]\n2022-06-01 17:51:51.765\t- INFO:  Total number of distinct subject-predicate pairs: 2\n2022-06-01 17:51:51.765\t- INFO:  Average number of predicates per subject: 2.0\n2022-06-01 17:51:51.765\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:51:52.674\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:51:52.679\t- INFO:  Statistics for OSP: #relations = 4, #blocks = 1, #triples = 7\n2022-06-01 17:51:52.679\t- INFO:  Statistics for OPS: #relations = 4, #blocks = 1, #triples = 7\n2022-06-01 17:51:52.679\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:51:52.679\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:51:52.680\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i filter-place-3 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example/>\n\nSELECT ?v ?w\n{ \n    FILTER (?v = 2)\n    FILTER (?w = 3)\n    ?s :p ?v . \n    ?s :q ?w .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/filter-placement-3.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample%2F%3E%0A%0ASELECT+%3Fv+%3Fw%0A%7B+%0A++++FILTER+%28%3Fv+%3D+2%29%0A++++FILTER+%28%3Fw+%3D+3%29%0A++++%3Fs+%3Ap+%3Fv+.+%0A++++%3Fs+%3Aq+%3Fw+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Error in SELECT: unexpected token: {", "query": "PREFIX : <http://example/>\n\nSELECT ?v ?w\n{ \n    FILTER (?v = 2)\n    FILTER (?w = 3)\n    ?s :p ?v . \n    ?s :q ?w .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:51:52.899\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:51:52.900\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:51:52.907\t- INFO:  Reading internal vocabulary from file filter-place-3.vocabulary.internal ...\n'
b'2022-06-01 17:51:52.910\t- INFO:  Done, number of words: 4\n'
b'2022-06-01 17:51:52.915\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:51:52.918\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:52.921\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:52.929\t- INFO:  Registered OPS permutation: #relations = 4, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:52.936\t- INFO:  Registered OSP permutation: #relations = 4, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:52.945\t- INFO:  Registered SPO permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:52.952\t- INFO:  Registered SOP permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:51:52.952\t- INFO:  Reading patterns from file filter-place-3.index.patterns ...\n'
b'2022-06-01 17:51:52.955\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:51:52.957\t- INFO:  The server is ready\n'
b'2022-06-01 17:51:52.873\t- INFO:  Query: PREFIX : <http://example/>\n'
b'\n'
b'SELECT ?v ?w\n'
b'{ \n'
b'    FILTER (?v = 2)\n'
b'    FILTER (?w = 3)\n'
b'    ?s :p ?v . \n'
b'    ?s :q ?w .\n'
b'}\n'
b'\n'
b'2022-06-01 17:52:22.869\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  11  = {'name': 'filter-nested-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-nested - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-nested-1.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<filter-nested-1.srx>'], 'comment': {'rdfs:comment': '"A FILTER is in scope for variables bound at the same level of the query tree"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i filter-nested-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:52:23.431\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:52:23.431\t- INFO:  You specified the input format: TTL\n2022-06-01 17:52:23.432\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:52:23.432\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:52:23.432\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:52:23.432\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:52:23.432\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:52:23.432\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-1.ttl ...\n2022-06-01 17:52:23.757\t- INFO:  Done, total number of triples read: 1 [may contain duplicates]\n2022-06-01 17:52:23.758\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:52:23.758\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:52:23.758\t- INFO:  Number of words in internal vocabulary: 3\n2022-06-01 17:52:23.758\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:52:23.760\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:52:23.760\t- INFO:  Removing temporary files ...\n2022-06-01 17:52:23.766\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:52:23.768\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:52:24.543\t- INFO:  Done, total number of triples converted: 1\n2022-06-01 17:52:24.547\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:52:24.547\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:52:24.547\t- INFO:  Reduction of size of internal vocabulary: 21%\n2022-06-01 17:52:24.547\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:52:25.484\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:52:25.488\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:52:25.488\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:52:25.488\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:52:25.488\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:52:27.123\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:52:27.127\t- INFO:  Statistics for SPO: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:52:27.127\t- INFO:  Statistics for SOP: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:52:27.127\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:52:27.127\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:52:27.128\t- INFO:  Number of distinct patterns: 1\n2022-06-01 17:52:27.128\t- INFO:  Number of subjects with pattern: 1 [all]\n2022-06-01 17:52:27.128\t- INFO:  Total number of distinct subject-predicate pairs: 1\n2022-06-01 17:52:27.129\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:52:27.129\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:52:28.046\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:52:28.052\t- INFO:  Statistics for OSP: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:52:28.052\t- INFO:  Statistics for OPS: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:52:28.052\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:52:28.052\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:52:28.053\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i filter-nested-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example/> \n\nSELECT ?v\n{ :x :p ?v . FILTER(?v = 1) }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/filter-nested-1.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample%2F%3E+%0A%0ASELECT+%3Fv%0A%7B+%3Ax+%3Ap+%3Fv+.+FILTER%28%3Fv+%3D+1%29+%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Error in SELECT: unexpected token: {", "query": "PREFIX : <http://example/> \n\nSELECT ?v\n{ :x :p ?v . FILTER(?v = 1) }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:52:28.281\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:52:28.283\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:52:28.291\t- INFO:  Reading internal vocabulary from file filter-nested-1.vocabulary.internal ...\n'
b'2022-06-01 17:52:28.295\t- INFO:  Done, number of words: 3\n'
b'2022-06-01 17:52:28.300\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:52:28.304\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:52:28.308\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:52:28.315\t- INFO:  Registered OPS permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:52:28.321\t- INFO:  Registered OSP permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:52:28.328\t- INFO:  Registered SPO permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:52:28.335\t- INFO:  Registered SOP permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:52:28.335\t- INFO:  Reading patterns from file filter-nested-1.index.patterns ...\n'
b'2022-06-01 17:52:28.337\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:52:28.340\t- INFO:  The server is ready\n'
b'2022-06-01 17:52:28.254\t- INFO:  Query: PREFIX : <http://example/> \n'
b'\n'
b'SELECT ?v\n'
b'{ :x :p ?v . FILTER(?v = 1) }\n'
b'\n'
b'2022-06-01 17:52:58.250\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  12  = {'name': 'filter-nested-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-nested - 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-nested-2.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<filter-nested-2.srx>'], 'comment': {'rdfs:comment': '"A FILTER in a group { ... } cannot see variables bound outside that group"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i filter-nested-2 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:52:58.803\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:52:58.803\t- INFO:  You specified the input format: TTL\n2022-06-01 17:52:58.804\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:52:58.804\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:52:58.804\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:52:58.804\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:52:58.804\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:52:58.804\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-1.ttl ...\n2022-06-01 17:52:59.132\t- INFO:  Done, total number of triples read: 1 [may contain duplicates]\n2022-06-01 17:52:59.133\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:52:59.133\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:52:59.133\t- INFO:  Number of words in internal vocabulary: 3\n2022-06-01 17:52:59.133\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:52:59.135\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:52:59.135\t- INFO:  Removing temporary files ...\n2022-06-01 17:52:59.141\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:52:59.143\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:52:59.911\t- INFO:  Done, total number of triples converted: 1\n2022-06-01 17:52:59.914\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:52:59.914\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:52:59.914\t- INFO:  Reduction of size of internal vocabulary: 21%\n2022-06-01 17:52:59.915\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:53:00.853\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:53:00.857\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:53:00.857\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:53:00.857\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:53:00.857\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:53:02.513\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:53:02.518\t- INFO:  Statistics for SPO: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:53:02.518\t- INFO:  Statistics for SOP: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:53:02.518\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:53:02.518\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:53:02.519\t- INFO:  Number of distinct patterns: 1\n2022-06-01 17:53:02.519\t- INFO:  Number of subjects with pattern: 1 [all]\n2022-06-01 17:53:02.519\t- INFO:  Total number of distinct subject-predicate pairs: 1\n2022-06-01 17:53:02.519\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:53:02.519\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:53:03.445\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:53:03.451\t- INFO:  Statistics for OSP: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:53:03.451\t- INFO:  Statistics for OPS: #relations = 1, #blocks = 1, #triples = 1\n2022-06-01 17:53:03.451\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:53:03.451\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:53:03.452\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i filter-nested-2 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example/> \n\nSELECT ?v\n{ :x :p ?v . { FILTER(?v = 1) } }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/filter-nested-2.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample%2F%3E+%0A%0ASELECT+%3Fv%0A%7B+%3Ax+%3Ap+%3Fv+.+%7B+FILTER%28%3Fv+%3D+1%29+%7D+%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Error in SELECT: unexpected token: {", "query": "PREFIX : <http://example/> \n\nSELECT ?v\n{ :x :p ?v . { FILTER(?v = 1) } }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:53:03.672\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:53:03.673\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:53:03.682\t- INFO:  Reading internal vocabulary from file filter-nested-2.vocabulary.internal ...\n'
b'2022-06-01 17:53:03.685\t- INFO:  Done, number of words: 3\n'
b'2022-06-01 17:53:03.689\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:53:03.692\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:53:03.695\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:53:03.701\t- INFO:  Registered OPS permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:53:03.707\t- INFO:  Registered OSP permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:53:03.713\t- INFO:  Registered SPO permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:53:03.719\t- INFO:  Registered SOP permutation: #relations = 1, #blocks = 1, #triples = 1\n'
b'2022-06-01 17:53:03.719\t- INFO:  Reading patterns from file filter-nested-2.index.patterns ...\n'
b'2022-06-01 17:53:03.722\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:53:03.724\t- INFO:  The server is ready\n'
b'2022-06-01 17:53:03.647\t- INFO:  Query: PREFIX : <http://example/> \n'
b'\n'
b'SELECT ?v\n'
b'{ :x :p ?v . { FILTER(?v = 1) } }\n'
b'\n'
b'2022-06-01 17:53:33.643\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  13  = {'name': 'filter-scope-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Filter-scope - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<filter-scope-1.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<filter-scope-1.srx>'], 'comment': {'rdfs:comment': '"FILTERs in an OPTIONAL do not extend to variables bound outside of the LeftJoin(...) operation"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i filter-scope-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-2.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:53:34.199\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:53:34.199\t- INFO:  You specified the input format: TTL\n2022-06-01 17:53:34.199\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:53:34.199\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:53:34.200\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:53:34.200\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:53:34.200\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:53:34.200\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/data-2.ttl ...\n2022-06-01 17:53:34.527\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 17:53:34.527\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:53:34.527\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:53:34.527\t- INFO:  Number of words in internal vocabulary: 4\n2022-06-01 17:53:34.528\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:53:34.529\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:53:34.529\t- INFO:  Removing temporary files ...\n2022-06-01 17:53:34.535\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:53:34.537\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:53:35.307\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 17:53:35.311\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:53:35.311\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:53:35.311\t- INFO:  Reduction of size of internal vocabulary: 34%\n2022-06-01 17:53:35.311\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:53:36.227\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:53:36.230\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 7\n2022-06-01 17:53:36.230\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 7\n2022-06-01 17:53:36.231\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:53:36.231\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:53:37.899\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:53:37.904\t- INFO:  Statistics for SPO: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 17:53:37.904\t- INFO:  Statistics for SOP: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 17:53:37.904\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:53:37.904\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:53:37.905\t- INFO:  Number of distinct patterns: 1\n2022-06-01 17:53:37.905\t- INFO:  Number of subjects with pattern: 1 [all]\n2022-06-01 17:53:37.905\t- INFO:  Total number of distinct subject-predicate pairs: 2\n2022-06-01 17:53:37.905\t- INFO:  Average number of predicates per subject: 2.0\n2022-06-01 17:53:37.905\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:53:38.796\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:53:38.802\t- INFO:  Statistics for OSP: #relations = 4, #blocks = 1, #triples = 7\n2022-06-01 17:53:38.802\t- INFO:  Statistics for OPS: #relations = 4, #blocks = 1, #triples = 7\n2022-06-01 17:53:38.802\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:53:38.802\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:53:38.803\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i filter-scope-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX :    <http://example/>\n\nSELECT *\n{ \n    :x :p ?v . \n    { :x :q ?w \n      OPTIONAL {  :x :p ?v2 FILTER(?v = 1) }\n    }\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/filter-scope-1.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A++++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0ASELECT+%2A%0A%7B+%0A++++%3Ax+%3Ap+%3Fv+.+%0A++++%7B+%3Ax+%3Aq+%3Fw+%0A++++++OPTIONAL+%7B++%3Ax+%3Ap+%3Fv2+FILTER%28%3Fv+%3D+1%29+%7D%0A++++%7D%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Keyword WHERE expected after SELECT '*'", "query": "PREFIX :    <http://example/>\n\nSELECT *\n{ \n    :x :p ?v . \n    { :x :q ?w \n      OPTIONAL {  :x :p ?v2 FILTER(?v = 1) }\n    }\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:53:39.000\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:53:39.001\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:53:39.011\t- INFO:  Reading internal vocabulary from file filter-scope-1.vocabulary.internal ...\n'
b'2022-06-01 17:53:39.014\t- INFO:  Done, number of words: 4\n'
b'2022-06-01 17:53:39.018\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:53:39.021\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:53:39.023\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:53:39.030\t- INFO:  Registered OPS permutation: #relations = 4, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:53:39.036\t- INFO:  Registered OSP permutation: #relations = 4, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:53:39.042\t- INFO:  Registered SPO permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:53:39.050\t- INFO:  Registered SOP permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 17:53:39.050\t- INFO:  Reading patterns from file filter-scope-1.index.patterns ...\n'
b'2022-06-01 17:53:39.053\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:53:39.055\t- INFO:  The server is ready\n'
b'2022-06-01 17:53:38.972\t- INFO:  Query: PREFIX :    <http://example/>\n'
b'\n'
b'SELECT *\n'
b'{ \n'
b'    :x :p ?v . \n'
b'    { :x :q ?w \n'
b'      OPTIONAL {  :x :p ?v2 FILTER(?v = 1) }\n'
b'    }\n'
b'}\n'
b'\n'
b'2022-06-01 17:54:08.968\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  14  = {'name': 'join-scope-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Join scope - 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://www.w3.org/2007/06/19-dawg-minutes.html>'}, 'actions': [['qt:query', '<var-scope-join-1.rq>'], ['qt:data', '<var-scope-join-1.ttl>']], 'result': ['<var-scope-join-1.srx>'], 'comment': {'rdfs:comment': '"Variables have query scope."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Algebra', 'manifest': 'sparql11/data-r2/algebra/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i join-scope-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/var-scope-join-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:54:09.524\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:54:09.524\t- INFO:  You specified the input format: TTL\n2022-06-01 17:54:09.525\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:54:09.525\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:54:09.525\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:54:09.525\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:54:09.525\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:54:09.525\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/var-scope-join-1.ttl ...\n2022-06-01 17:54:09.854\t- INFO:  Done, total number of triples read: 10 [may contain duplicates]\n2022-06-01 17:54:09.854\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:54:09.854\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:54:09.855\t- INFO:  Number of words in internal vocabulary: 19\n2022-06-01 17:54:09.855\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:54:09.857\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:54:09.857\t- INFO:  Removing temporary files ...\n2022-06-01 17:54:09.863\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:54:09.864\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:54:10.639\t- INFO:  Done, total number of triples converted: 10\n2022-06-01 17:54:10.643\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:54:10.643\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:54:10.643\t- INFO:  Reduction of size of internal vocabulary: 27%\n2022-06-01 17:54:10.644\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:54:11.573\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:54:11.576\t- INFO:  Statistics for PSO: #relations = 4, #blocks = 1, #triples = 10\n2022-06-01 17:54:11.576\t- INFO:  Statistics for POS: #relations = 4, #blocks = 1, #triples = 10\n2022-06-01 17:54:11.576\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:54:11.576\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:54:13.241\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:54:13.245\t- INFO:  Statistics for SPO: #relations = 4, #blocks = 1, #triples = 10\n2022-06-01 17:54:13.245\t- INFO:  Statistics for SOP: #relations = 4, #blocks = 1, #triples = 10\n2022-06-01 17:54:13.245\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:54:13.245\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:54:13.246\t- INFO:  Number of distinct patterns: 4\n2022-06-01 17:54:13.246\t- INFO:  Number of subjects with pattern: 4 [all]\n2022-06-01 17:54:13.246\t- INFO:  Total number of distinct subject-predicate pairs: 10\n2022-06-01 17:54:13.247\t- INFO:  Average number of predicates per subject: 2.5\n2022-06-01 17:54:13.247\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 17:54:14.130\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:54:14.134\t- INFO:  Statistics for OSP: #relations = 10, #blocks = 1, #triples = 10\n2022-06-01 17:54:14.134\t- INFO:  Statistics for OPS: #relations = 10, #blocks = 1, #triples = 10\n2022-06-01 17:54:14.134\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:54:14.134\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:54:14.136\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i join-scope-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example/>\n\nSELECT *\n{ \n  ?X  :name "paul"\n  {?Y :name "george" . OPTIONAL { ?X :email ?Z } }\n}\n\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/algebra/var-scope-join-1.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample%2F%3E%0A%0ASELECT+%2A%0A%7B+%0A++%3FX++%3Aname+%22paul%22%0A++%7B%3FY+%3Aname+%22george%22+.+OPTIONAL+%7B+%3FX+%3Aemail+%3FZ+%7D+%7D%0A%7D%0A%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Keyword WHERE expected after SELECT '*'", "query": "PREFIX : <http://example/>\n\nSELECT *\n{ \n  ?X  :name \"paul\"\n  {?Y :name \"george\" . OPTIONAL { ?X :email ?Z } }\n}\n\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:54:14.328\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:54:14.329\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:54:14.337\t- INFO:  Reading internal vocabulary from file join-scope-1.vocabulary.internal ...\n'
b'2022-06-01 17:54:14.340\t- INFO:  Done, number of words: 19\n'
b'2022-06-01 17:54:14.344\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:54:14.346\t- INFO:  Registered PSO permutation: #relations = 4, #blocks = 1, #triples = 10\n'
b'2022-06-01 17:54:14.349\t- INFO:  Registered POS permutation: #relations = 4, #blocks = 1, #triples = 10\n'
b'2022-06-01 17:54:14.352\t- INFO:  Registered OPS permutation: #relations = 10, #blocks = 1, #triples = 10\n'
b'2022-06-01 17:54:14.354\t- INFO:  Registered OSP permutation: #relations = 10, #blocks = 1, #triples = 10\n'
b'2022-06-01 17:54:14.359\t- INFO:  Registered SPO permutation: #relations = 4, #blocks = 1, #triples = 10\n'
b'2022-06-01 17:54:14.361\t- INFO:  Registered SOP permutation: #relations = 4, #blocks = 1, #triples = 10\n'
b'2022-06-01 17:54:14.361\t- INFO:  Reading patterns from file join-scope-1.index.patterns ...\n'
b'2022-06-01 17:54:14.362\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:54:14.364\t- INFO:  The server is ready\n'
b'2022-06-01 17:54:14.302\t- INFO:  Query: PREFIX : <http://example/>\n'
b'\n'
b'SELECT *\n'
b'{ \n'
b'  ?X  :name "paul"\n'
b'  {?Y :name "george" . OPTIONAL { ?X :email ?Z } }\n'
b'}\n'
b'\n'
b'\n'
b'2022-06-01 17:54:44.297\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  15  = {'name': 'ask-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ASK-1 (SPARQL XML results)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<ask-1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<ask-1.srx>'], 'comment': {}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'ASK', 'manifest': 'sparql11/data-r2/ask/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i ask-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:54:44.853\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:54:44.853\t- INFO:  You specified the input format: TTL\n2022-06-01 17:54:44.854\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:54:44.854\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:54:44.854\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:54:44.854\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:54:44.854\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:54:44.854\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/data.ttl ...\n2022-06-01 17:54:45.188\t- INFO:  Done, total number of triples read: 5 [may contain duplicates]\n2022-06-01 17:54:45.188\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:54:45.188\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:54:45.188\t- INFO:  Number of words in internal vocabulary: 7\n2022-06-01 17:54:45.189\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:54:45.190\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:54:45.190\t- INFO:  Removing temporary files ...\n2022-06-01 17:54:45.196\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:54:45.198\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:54:45.966\t- INFO:  Done, total number of triples converted: 5\n2022-06-01 17:54:45.969\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:54:45.970\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:54:45.970\t- INFO:  Reduction of size of internal vocabulary: 53%\n2022-06-01 17:54:45.970\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:54:46.927\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:54:46.932\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 5\n2022-06-01 17:54:46.932\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 5\n2022-06-01 17:54:46.932\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:54:46.932\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:54:48.591\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:54:48.597\t- INFO:  Statistics for SPO: #relations = 3, #blocks = 1, #triples = 5\n2022-06-01 17:54:48.597\t- INFO:  Statistics for SOP: #relations = 3, #blocks = 1, #triples = 5\n2022-06-01 17:54:48.597\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:54:48.597\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:54:48.598\t- INFO:  Number of distinct patterns: 2\n2022-06-01 17:54:48.598\t- INFO:  Number of subjects with pattern: 3 [all]\n2022-06-01 17:54:48.598\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 17:54:48.598\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:54:48.598\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 17:54:49.547\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:54:49.554\t- INFO:  Statistics for OSP: #relations = 5, #blocks = 1, #triples = 5\n2022-06-01 17:54:49.554\t- INFO:  Statistics for OPS: #relations = 5, #blocks = 1, #triples = 5\n2022-06-01 17:54:49.554\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:54:49.554\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:54:49.555\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i ask-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX :   <http://example/>\n\nASK { :x :p 1 }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/ask-1.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0AASK+%7B+%3Ax+%3Ap+1+%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Expected 'select' but got 'as' in the input at pos 30 : ASK { :x :p 1 }\n", "query": "PREFIX :   <http://example/>\n\nASK { :x :p 1 }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:54:49.777\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:54:49.779\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:54:49.786\t- INFO:  Reading internal vocabulary from file ask-1.vocabulary.internal ...\n'
b'2022-06-01 17:54:49.789\t- INFO:  Done, number of words: 7\n'
b'2022-06-01 17:54:49.793\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:54:49.796\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:54:49.798\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:54:49.805\t- INFO:  Registered OPS permutation: #relations = 5, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:54:49.812\t- INFO:  Registered OSP permutation: #relations = 5, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:54:49.819\t- INFO:  Registered SPO permutation: #relations = 3, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:54:49.826\t- INFO:  Registered SOP permutation: #relations = 3, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:54:49.826\t- INFO:  Reading patterns from file ask-1.index.patterns ...\n'
b'2022-06-01 17:54:49.829\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:54:49.831\t- INFO:  The server is ready\n'
b'2022-06-01 17:54:49.753\t- INFO:  Query: PREFIX :   <http://example/>\n'
b'\n'
b'ASK { :x :p 1 }\n'
b'\n'
b'2022-06-01 17:55:19.749\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  16  = {'name': 'ask-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ASK-4 (SPARQL XML results)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<ask-4.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<ask-4.srx>'], 'comment': {}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'ASK', 'manifest': 'sparql11/data-r2/ask/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i ask-4 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:55:20.304\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:55:20.305\t- INFO:  You specified the input format: TTL\n2022-06-01 17:55:20.305\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:55:20.305\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:55:20.305\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:55:20.306\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:55:20.306\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:55:20.306\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/data.ttl ...\n2022-06-01 17:55:20.633\t- INFO:  Done, total number of triples read: 5 [may contain duplicates]\n2022-06-01 17:55:20.633\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:55:20.633\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:55:20.633\t- INFO:  Number of words in internal vocabulary: 7\n2022-06-01 17:55:20.634\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:55:20.635\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:55:20.635\t- INFO:  Removing temporary files ...\n2022-06-01 17:55:20.641\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:55:20.643\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:55:21.412\t- INFO:  Done, total number of triples converted: 5\n2022-06-01 17:55:21.416\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:55:21.416\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:55:21.416\t- INFO:  Reduction of size of internal vocabulary: 53%\n2022-06-01 17:55:21.417\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:55:22.339\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:55:22.343\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 5\n2022-06-01 17:55:22.343\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 5\n2022-06-01 17:55:22.343\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:55:22.344\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:55:23.967\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:55:23.972\t- INFO:  Statistics for SPO: #relations = 3, #blocks = 1, #triples = 5\n2022-06-01 17:55:23.972\t- INFO:  Statistics for SOP: #relations = 3, #blocks = 1, #triples = 5\n2022-06-01 17:55:23.973\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:55:23.973\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:55:23.974\t- INFO:  Number of distinct patterns: 2\n2022-06-01 17:55:23.974\t- INFO:  Number of subjects with pattern: 3 [all]\n2022-06-01 17:55:23.974\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 17:55:23.974\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:55:23.974\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 17:55:24.875\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:55:24.881\t- INFO:  Statistics for OSP: #relations = 5, #blocks = 1, #triples = 5\n2022-06-01 17:55:24.881\t- INFO:  Statistics for OPS: #relations = 5, #blocks = 1, #triples = 5\n2022-06-01 17:55:24.881\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:55:24.881\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:55:24.882\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i ask-4 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX :   <http://example/>\n\nASK { :x :p 99 }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/ask-4.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0AASK+%7B+%3Ax+%3Ap+99+%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Expected 'select' but got 'as' in the input at pos 30 : ASK { :x :p 99 }\n", "query": "PREFIX :   <http://example/>\n\nASK { :x :p 99 }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:55:25.068\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:55:25.069\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:55:25.076\t- INFO:  Reading internal vocabulary from file ask-4.vocabulary.internal ...\n'
b'2022-06-01 17:55:25.079\t- INFO:  Done, number of words: 7\n'
b'2022-06-01 17:55:25.084\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:55:25.087\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:55:25.089\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:55:25.095\t- INFO:  Registered OPS permutation: #relations = 5, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:55:25.100\t- INFO:  Registered OSP permutation: #relations = 5, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:55:25.105\t- INFO:  Registered SPO permutation: #relations = 3, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:55:25.110\t- INFO:  Registered SOP permutation: #relations = 3, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:55:25.110\t- INFO:  Reading patterns from file ask-4.index.patterns ...\n'
b'2022-06-01 17:55:25.112\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:55:25.115\t- INFO:  The server is ready\n'
b'2022-06-01 17:55:25.041\t- INFO:  Query: PREFIX :   <http://example/>\n'
b'\n'
b'ASK { :x :p 99 }\n'
b'\n'
b'2022-06-01 17:55:55.038\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  17  = {'name': 'ask-7', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ASK-7 (SPARQL XML results)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<ask-7.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<ask-7.srx>'], 'comment': {}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'ASK', 'manifest': 'sparql11/data-r2/ask/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i ask-7 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:55:55.593\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:55:55.593\t- INFO:  You specified the input format: TTL\n2022-06-01 17:55:55.593\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:55:55.593\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:55:55.593\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:55:55.593\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:55:55.594\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:55:55.594\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/data.ttl ...\n2022-06-01 17:55:55.921\t- INFO:  Done, total number of triples read: 5 [may contain duplicates]\n2022-06-01 17:55:55.921\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:55:55.921\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:55:55.921\t- INFO:  Number of words in internal vocabulary: 7\n2022-06-01 17:55:55.921\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:55:55.923\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:55:55.923\t- INFO:  Removing temporary files ...\n2022-06-01 17:55:55.929\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:55:55.931\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:55:56.697\t- INFO:  Done, total number of triples converted: 5\n2022-06-01 17:55:56.701\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:55:56.701\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:55:56.701\t- INFO:  Reduction of size of internal vocabulary: 53%\n2022-06-01 17:55:56.701\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:55:57.619\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:55:57.623\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 5\n2022-06-01 17:55:57.623\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 5\n2022-06-01 17:55:57.623\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:55:57.623\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:55:59.255\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:55:59.259\t- INFO:  Statistics for SPO: #relations = 3, #blocks = 1, #triples = 5\n2022-06-01 17:55:59.259\t- INFO:  Statistics for SOP: #relations = 3, #blocks = 1, #triples = 5\n2022-06-01 17:55:59.259\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:55:59.259\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:55:59.260\t- INFO:  Number of distinct patterns: 2\n2022-06-01 17:55:59.260\t- INFO:  Number of subjects with pattern: 3 [all]\n2022-06-01 17:55:59.260\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 17:55:59.260\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:55:59.260\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 17:56:00.202\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:56:00.207\t- INFO:  Statistics for OSP: #relations = 5, #blocks = 1, #triples = 5\n2022-06-01 17:56:00.207\t- INFO:  Statistics for OPS: #relations = 5, #blocks = 1, #triples = 5\n2022-06-01 17:56:00.207\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:56:00.207\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:56:00.208\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i ask-7 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX :   <http://example/>\n\nASK { :x :p ?x }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/ask-7.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0AASK+%7B+%3Ax+%3Ap+%3Fx+%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Expected 'select' but got 'as' in the input at pos 30 : ASK { :x :p ?x }\n", "query": "PREFIX :   <http://example/>\n\nASK { :x :p ?x }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:56:00.434\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:56:00.435\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:56:00.442\t- INFO:  Reading internal vocabulary from file ask-7.vocabulary.internal ...\n'
b'2022-06-01 17:56:00.444\t- INFO:  Done, number of words: 7\n'
b'2022-06-01 17:56:00.448\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:56:00.452\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:00.455\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:00.460\t- INFO:  Registered OPS permutation: #relations = 5, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:00.465\t- INFO:  Registered OSP permutation: #relations = 5, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:00.470\t- INFO:  Registered SPO permutation: #relations = 3, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:00.476\t- INFO:  Registered SOP permutation: #relations = 3, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:00.476\t- INFO:  Reading patterns from file ask-7.index.patterns ...\n'
b'2022-06-01 17:56:00.479\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:56:00.482\t- INFO:  The server is ready\n'
b'2022-06-01 17:56:00.408\t- INFO:  Query: PREFIX :   <http://example/>\n'
b'\n'
b'ASK { :x :p ?x }\n'
b'\n'
b'2022-06-01 17:56:30.404\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  18  = {'name': 'ask-8', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"ASK-8 (SPARQL XML results)"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<ask-8.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<ask-8.srx>'], 'comment': {}, 'query_form': {'qt:queryForm': 'qt:QueryAsk'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'ASK', 'manifest': 'sparql11/data-r2/ask/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i ask-8 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:56:30.987\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:56:30.988\t- INFO:  You specified the input format: TTL\n2022-06-01 17:56:30.988\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:56:30.988\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:56:30.988\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:56:30.988\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:56:30.988\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:56:30.988\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/data.ttl ...\n2022-06-01 17:56:31.317\t- INFO:  Done, total number of triples read: 5 [may contain duplicates]\n2022-06-01 17:56:31.317\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:56:31.317\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:56:31.317\t- INFO:  Number of words in internal vocabulary: 7\n2022-06-01 17:56:31.318\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:56:31.319\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:56:31.319\t- INFO:  Removing temporary files ...\n2022-06-01 17:56:31.325\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:56:31.327\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:56:32.092\t- INFO:  Done, total number of triples converted: 5\n2022-06-01 17:56:32.096\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:56:32.096\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:56:32.096\t- INFO:  Reduction of size of internal vocabulary: 53%\n2022-06-01 17:56:32.097\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:56:33.000\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:56:33.003\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 5\n2022-06-01 17:56:33.004\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 5\n2022-06-01 17:56:33.004\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:56:33.004\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:56:34.684\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:56:34.690\t- INFO:  Statistics for SPO: #relations = 3, #blocks = 1, #triples = 5\n2022-06-01 17:56:34.690\t- INFO:  Statistics for SOP: #relations = 3, #blocks = 1, #triples = 5\n2022-06-01 17:56:34.690\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:56:34.690\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:56:34.691\t- INFO:  Number of distinct patterns: 2\n2022-06-01 17:56:34.691\t- INFO:  Number of subjects with pattern: 3 [all]\n2022-06-01 17:56:34.691\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 17:56:34.691\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:56:34.691\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 17:56:35.644\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:56:35.649\t- INFO:  Statistics for OSP: #relations = 5, #blocks = 1, #triples = 5\n2022-06-01 17:56:35.649\t- INFO:  Statistics for OPS: #relations = 5, #blocks = 1, #triples = 5\n2022-06-01 17:56:35.649\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:56:35.649\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:56:35.651\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i ask-8 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX :   <http://example/>\n\nASK { :x :p ?x . FILTER(?x = 99) }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/ask/ask-8.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+++%3Chttp%3A%2F%2Fexample%2F%3E%0A%0AASK+%7B+%3Ax+%3Ap+%3Fx+.+FILTER%28%3Fx+%3D+99%29+%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Expected 'select' but got 'as' in the input at pos 30 : ASK { :x :p ?x . FILTER(?x = 99) }\n", "query": "PREFIX :   <http://example/>\n\nASK { :x :p ?x . FILTER(?x = 99) }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:56:35.862\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:56:35.863\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:56:35.870\t- INFO:  Reading internal vocabulary from file ask-8.vocabulary.internal ...\n'
b'2022-06-01 17:56:35.874\t- INFO:  Done, number of words: 7\n'
b'2022-06-01 17:56:35.877\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:56:35.880\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:35.882\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:35.888\t- INFO:  Registered OPS permutation: #relations = 5, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:35.895\t- INFO:  Registered OSP permutation: #relations = 5, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:35.902\t- INFO:  Registered SPO permutation: #relations = 3, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:35.907\t- INFO:  Registered SOP permutation: #relations = 3, #blocks = 1, #triples = 5\n'
b'2022-06-01 17:56:35.907\t- INFO:  Reading patterns from file ask-8.index.patterns ...\n'
b'2022-06-01 17:56:35.910\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:56:35.912\t- INFO:  The server is ready\n'
b'2022-06-01 17:56:35.854\t- INFO:  Query: PREFIX :   <http://example/>\n'
b'\n'
b'ASK { :x :p ?x . FILTER(?x = 99) }\n'
b'\n'
b'2022-06-01 17:57:05.851\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  19  = {'name': 'bgp-no-match', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Non-matching triple pattern"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<bgp-no-match.rq>'], ['qt:data', '<data-7.ttl>']], 'result': ['<bgp-no-match.srx>'], 'comment': {'rdfs:comment': '"Patterns not in data don\'t match"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i bgp-no-match -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-7.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:57:06.406\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:57:06.406\t- INFO:  You specified the input format: TTL\n2022-06-01 17:57:06.407\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:57:06.407\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:57:06.407\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:57:06.407\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:57:06.407\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:57:06.407\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-7.ttl ...\n2022-06-01 17:57:06.734\t- INFO:  Done, total number of triples read: 2 [may contain duplicates]\n2022-06-01 17:57:06.734\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:57:06.734\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:57:06.734\t- INFO:  Number of words in internal vocabulary: 6\n2022-06-01 17:57:06.735\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:57:06.736\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:57:06.737\t- INFO:  Removing temporary files ...\n2022-06-01 17:57:06.742\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:57:06.744\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:57:07.513\t- INFO:  Done, total number of triples converted: 2\n2022-06-01 17:57:07.517\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:57:07.517\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:57:07.517\t- INFO:  Reduction of size of internal vocabulary: 21%\n2022-06-01 17:57:07.517\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:57:08.422\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:57:08.426\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:57:08.426\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:57:08.426\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:57:08.426\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:57:10.058\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:57:10.062\t- INFO:  Statistics for SPO: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:57:10.062\t- INFO:  Statistics for SOP: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:57:10.062\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:57:10.062\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:57:10.063\t- INFO:  Number of distinct patterns: 1\n2022-06-01 17:57:10.063\t- INFO:  Number of subjects with pattern: 1 [all]\n2022-06-01 17:57:10.063\t- INFO:  Total number of distinct subject-predicate pairs: 2\n2022-06-01 17:57:10.064\t- INFO:  Average number of predicates per subject: 2.0\n2022-06-01 17:57:10.064\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:57:10.943\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:57:10.949\t- INFO:  Statistics for OSP: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:57:10.949\t- INFO:  Statistics for OPS: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:57:10.949\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:57:10.949\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:57:10.951\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i bgp-no-match -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example.org/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nSELECT ?x\nWHERE {\n  ?x foaf:name "John Smith" ;\n       a foaf:Womble .\n}\n\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/bgp-no-match.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample.org%2F%3E%0APREFIX+foaf%3A+%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E%0ASELECT+%3Fx%0AWHERE+%7B%0A++%3Fx+foaf%3Aname+%22John+Smith%22+%3B%0A+++++++a+foaf%3AWomble+.%0A%7D%0A%0A&send=4096&action=sparql_json_export
b'2022-06-01 17:57:11.141\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'response_reason = OK

response_statusCode = b'2022-06-01 17:57:11.142\t- INFO:  Initializing server ...\n' 
200
response_json = {"head": {"vars": ["x"]}, "results": {"bindings": []}}
b'2022-06-01 17:57:11.150\t- INFO:  Reading internal vocabulary from file bgp-no-match.vocabulary.internal ...\n'
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:57:11.152\t- INFO:  Done, number of words: 6\n'
b'2022-06-01 17:57:11.157\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:57:11.159\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:11.161\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:11.168\t- INFO:  Registered OPS permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:11.173\t- INFO:  Registered OSP permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:11.179\t- INFO:  Registered SPO permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:11.185\t- INFO:  Registered SOP permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:11.185\t- INFO:  Reading patterns from file bgp-no-match.index.patterns ...\n'
b'2022-06-01 17:57:11.188\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:57:11.190\t- INFO:  The server is ready\n'
b'2022-06-01 17:57:11.115\t- INFO:  Query: PREFIX : <http://example.org/>\n'
b'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
b'SELECT ?x\n'
b'WHERE {\n'
b'  ?x foaf:name "John Smith" ;\n'
b'       a foaf:Womble .\n'
b'}\n'
b'\n'
b'\n'
b'2022-06-01 17:57:11.121\t- INFO:  \n'
b'Runtime Info:\n'
b'\xe2\x94\x82  \n'
b'\xe2\x94\x9c\xe2\x94\x80 Join on ?x\n'
b'\xe2\x94\x82  result_size: 0 x 1\n'
b'\xe2\x94\x82  columns: ?x\n'
b'\xe2\x94\x82  total_time: 0.00 ms\n'
b'\xe2\x94\x82  operation_time: 0.00 ms\n'
b'\xe2\x94\x82  cached: false\n'
b'\xe2\x94\x82    original_operation_time: 0.00\n'
b'\xe2\x94\x82    original_total_time: 0.00\n'
b'\xe2\x94\x82  \xe2\x94\xac\n'
b'\xe2\x94\x82  \xe2\x94\x82  \n'
b'\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 IndexScan ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Womble>\n'
b'\xe2\x94\x82  \xe2\x94\x82  result_size: 0 x 1\n'
b'\xe2\x94\x82  \xe2\x94\x82  columns: ?x\n'
b'\xe2\x94\x82  \xe2\x94\x82  total_time: 0.00 ms\n'
b'\xe2\x94\x82  \xe2\x94\x82  operation_time: 0.00 ms\n'
b'\xe2\x94\x82  \xe2\x94\x82  cached: true\n'
b'\xe2\x94\x82  \xe2\x94\x82    original_operation_time: 0.00\n'
b'\xe2\x94\x82  \xe2\x94\x82    original_total_time: 0.00\n'
b'\xe2\x94\x82  \xe2\x94\x82  \n'
b'\xe2\x94\x82  \xe2\x94\x9c\xe2\x94\x80 IndexScan ?x <http://xmlns.com/foaf/0.1/name> "John Smith"\n'
b'\xe2\x94\x82  \xe2\x94\x82  result_size: 0 x 1\n'
b'\xe2\x94\x82  \xe2\x94\x82  columns: ?x\n'
b'\xe2\x94\x82  \xe2\x94\x82  total_time: 0.00 ms\n'
b'\xe2\x94\x82  \xe2\x94\x82  operation_time: 0.00 ms\n'
b'\xe2\x94\x82  \xe2\x94\x82  cached: true\n'
b'\xe2\x94\x82  \xe2\x94\x82    original_operation_time: 0.00\n'
b'\xe2\x94\x82  \xe2\x94\x82    original_total_time: 0.00\n'
b'2022-06-01 17:57:41.111\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  20  = {'name': 'prefix-name-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Prefix name 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<prefix-name-1.rq>'], ['qt:data', '<data-6.ttl>']], 'result': ['<prefix-name-1.srx>'], 'comment': {'rdfs:comment': '"No local name - foo:"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i prefix-name-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-6.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:57:41.698\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:57:41.699\t- INFO:  You specified the input format: TTL\n2022-06-01 17:57:41.699\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:57:41.699\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:57:41.699\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:57:41.699\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:57:41.699\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:57:41.699\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-6.ttl ...\n2022-06-01 17:57:42.029\t- INFO:  Done, total number of triples read: 2 [may contain duplicates]\n2022-06-01 17:57:42.029\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:57:42.029\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:57:42.030\t- INFO:  Number of words in internal vocabulary: 3\n2022-06-01 17:57:42.030\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:57:42.032\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:57:42.032\t- INFO:  Removing temporary files ...\n2022-06-01 17:57:42.037\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:57:42.039\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:57:42.805\t- INFO:  Done, total number of triples converted: 2\n2022-06-01 17:57:42.808\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:57:42.808\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:57:42.808\t- INFO:  Reduction of size of internal vocabulary: 26%\n2022-06-01 17:57:42.809\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:57:43.710\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:57:43.713\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:57:43.713\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:57:43.713\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:57:43.714\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:57:45.354\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:57:45.360\t- INFO:  Statistics for SPO: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:57:45.360\t- INFO:  Statistics for SOP: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:57:45.360\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:57:45.360\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:57:45.361\t- INFO:  Number of distinct patterns: 1\n2022-06-01 17:57:45.361\t- INFO:  Number of subjects with pattern: 1 [all]\n2022-06-01 17:57:45.361\t- INFO:  Total number of distinct subject-predicate pairs: 1\n2022-06-01 17:57:45.361\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:57:45.361\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:57:46.238\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:57:46.243\t- INFO:  Statistics for OSP: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:57:46.243\t- INFO:  Statistics for OPS: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:57:46.243\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:57:46.244\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:57:46.245\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i prefix-name-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX ex: <http://example.org/ns#x> \nSELECT ?p {\n  ex: ?p 1 .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/prefix-name-1.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+ex%3A+%3Chttp%3A%2F%2Fexample.org%2Fns%23x%3E+%0ASELECT+%3Fp+%7B%0A++ex%3A+%3Fp+1+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Error in SELECT: unexpected token: {", "query": "PREFIX ex: <http://example.org/ns#x> \nSELECT ?p {\n  ex: ?p 1 .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:57:46.445\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:57:46.446\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:57:46.454\t- INFO:  Reading internal vocabulary from file prefix-name-1.vocabulary.internal ...\n'
b'2022-06-01 17:57:46.457\t- INFO:  Done, number of words: 3\n'
b'2022-06-01 17:57:46.462\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:57:46.465\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:46.469\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:46.476\t- INFO:  Registered OPS permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:46.481\t- INFO:  Registered OSP permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:46.487\t- INFO:  Registered SPO permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:46.492\t- INFO:  Registered SOP permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:57:46.493\t- INFO:  Reading patterns from file prefix-name-1.index.patterns ...\n'
b'2022-06-01 17:57:46.496\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:57:46.498\t- INFO:  The server is ready\n'
b'2022-06-01 17:57:46.421\t- INFO:  Query: PREFIX ex: <http://example.org/ns#x> \n'
b'SELECT ?p {\n'
b'  ex: ?p 1 .\n'
b'}\n'
b'\n'
b'2022-06-01 17:58:16.416\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  21  = {'name': 'spoo-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic graph pattern - spoo"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<spoo-1.rq>'], ['qt:data', '<data-6.ttl>']], 'result': ['<spoo-1.srx>'], 'comment': {'rdfs:comment': '"Test the :x :y :o1, :o2 construct"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i spoo-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-6.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:58:16.973\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:58:16.974\t- INFO:  You specified the input format: TTL\n2022-06-01 17:58:16.974\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:58:16.974\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:58:16.974\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:58:16.974\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:58:16.974\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:58:16.974\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-6.ttl ...\n2022-06-01 17:58:17.308\t- INFO:  Done, total number of triples read: 2 [may contain duplicates]\n2022-06-01 17:58:17.308\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:58:17.308\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:58:17.309\t- INFO:  Number of words in internal vocabulary: 3\n2022-06-01 17:58:17.309\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:58:17.311\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:58:17.311\t- INFO:  Removing temporary files ...\n2022-06-01 17:58:17.317\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:58:17.318\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:58:18.089\t- INFO:  Done, total number of triples converted: 2\n2022-06-01 17:58:18.093\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:58:18.093\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:58:18.093\t- INFO:  Reduction of size of internal vocabulary: 26%\n2022-06-01 17:58:18.094\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:58:19.024\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:58:19.027\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:58:19.027\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:58:19.027\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:58:19.027\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:58:20.668\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:58:20.673\t- INFO:  Statistics for SPO: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:58:20.673\t- INFO:  Statistics for SOP: #relations = 1, #blocks = 1, #triples = 2\n2022-06-01 17:58:20.673\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:58:20.673\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:58:20.674\t- INFO:  Number of distinct patterns: 1\n2022-06-01 17:58:20.674\t- INFO:  Number of subjects with pattern: 1 [all]\n2022-06-01 17:58:20.674\t- INFO:  Total number of distinct subject-predicate pairs: 1\n2022-06-01 17:58:20.674\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 17:58:20.674\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:58:21.553\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:58:21.557\t- INFO:  Statistics for OSP: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:58:21.557\t- INFO:  Statistics for OPS: #relations = 2, #blocks = 1, #triples = 2\n2022-06-01 17:58:21.557\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:58:21.558\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:58:21.559\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i spoo-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example.org/ns#> \nPREFIX xsd:        <http://www.w3.org/2001/XMLSchema#> \n\nSELECT ?s WHERE {\n ?s :p1 1, 2 .\n}\n\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/spoo-1.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample.org%2Fns%23%3E+%0APREFIX+xsd%3A++++++++%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E+%0A%0ASELECT+%3Fs+WHERE+%7B%0A+%3Fs+%3Ap1+1%2C+2+.%0A%7D%0A%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Expected a token of type IRI but got a token of type LOGICAL_OR (1) in the input at pos 118 : 1, 2 .\n}\n\n", "query": "PREFIX : <http://example.org/ns#> \nPREFIX xsd:        <http://www.w3.org/2001/XMLSchema#> \n\nSELECT ?s WHERE {\n ?s :p1 1, 2 .\n}\n\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:58:21.747\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:58:21.748\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:58:21.755\t- INFO:  Reading internal vocabulary from file spoo-1.vocabulary.internal ...\n'
b'2022-06-01 17:58:21.757\t- INFO:  Done, number of words: 3\n'
b'2022-06-01 17:58:21.762\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:58:21.765\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:58:21.767\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:58:21.773\t- INFO:  Registered OPS permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:58:21.778\t- INFO:  Registered OSP permutation: #relations = 2, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:58:21.784\t- INFO:  Registered SPO permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:58:21.789\t- INFO:  Registered SOP permutation: #relations = 1, #blocks = 1, #triples = 2\n'
b'2022-06-01 17:58:21.789\t- INFO:  Reading patterns from file spoo-1.index.patterns ...\n'
b'2022-06-01 17:58:21.792\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:58:21.795\t- INFO:  The server is ready\n'
b'2022-06-01 17:58:21.722\t- INFO:  Query: PREFIX : <http://example.org/ns#> \n'
b'PREFIX xsd:        <http://www.w3.org/2001/XMLSchema#> \n'
b'\n'
b'SELECT ?s WHERE {\n'
b' ?s :p1 1, 2 .\n'
b'}\n'
b'\n'
b'\n'
b'2022-06-01 17:58:51.719\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  22  = {'name': 'base-prefix-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Prefix/Base 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<base-prefix-1.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<base-prefix-1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i base-prefix-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:58:52.298\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:58:52.299\t- INFO:  You specified the input format: TTL\n2022-06-01 17:58:52.299\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:58:52.299\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:58:52.299\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:58:52.299\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:58:52.299\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:58:52.299\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-1.ttl ...\n2022-06-01 17:58:52.627\t- INFO:  Done, total number of triples read: 3 [may contain duplicates]\n2022-06-01 17:58:52.627\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:58:52.627\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:58:52.627\t- INFO:  Number of words in internal vocabulary: 9\n2022-06-01 17:58:52.628\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:58:52.629\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:58:52.629\t- INFO:  Removing temporary files ...\n2022-06-01 17:58:52.635\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:58:52.637\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:58:53.408\t- INFO:  Done, total number of triples converted: 3\n2022-06-01 17:58:53.412\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:58:53.412\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:58:53.412\t- INFO:  Reduction of size of internal vocabulary: 44%\n2022-06-01 17:58:53.413\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:58:54.303\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:58:54.306\t- INFO:  Statistics for PSO: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 17:58:54.306\t- INFO:  Statistics for POS: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 17:58:54.306\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:58:54.306\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:58:55.959\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:58:55.964\t- INFO:  Statistics for SPO: #relations = 2, #blocks = 1, #triples = 3\n2022-06-01 17:58:55.964\t- INFO:  Statistics for SOP: #relations = 2, #blocks = 1, #triples = 3\n2022-06-01 17:58:55.964\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:58:55.964\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:58:55.965\t- INFO:  Number of distinct patterns: 2\n2022-06-01 17:58:55.965\t- INFO:  Number of subjects with pattern: 2 [all]\n2022-06-01 17:58:55.965\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 17:58:55.965\t- INFO:  Average number of predicates per subject: 1.5\n2022-06-01 17:58:55.965\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:58:56.893\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:58:56.902\t- INFO:  Statistics for OSP: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 17:58:56.902\t- INFO:  Statistics for OPS: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 17:58:56.902\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:58:56.902\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:58:56.903\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i base-prefix-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'BASE <http://example.org/x/> \nPREFIX : <>\n\nSELECT * WHERE { :x ?p ?v } \n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/base-prefix-1.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=BASE+%3Chttp%3A%2F%2Fexample.org%2Fx%2F%3E+%0APREFIX+%3A+%3C%3E%0A%0ASELECT+%2A+WHERE+%7B+%3Ax+%3Fp+%3Fv+%7D+%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: BASE <http://example.org/x/> \nPREFIX : <>\n\nSELECT * WHERE { :x ?p ?v } \n", "query": "BASE <http://example.org/x/> \nPREFIX : <>\n\nSELECT * WHERE { :x ?p ?v } \n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:58:57.165\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:58:57.166\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:58:57.177\t- INFO:  Reading internal vocabulary from file base-prefix-1.vocabulary.internal ...\n'
b'2022-06-01 17:58:57.181\t- INFO:  Done, number of words: 9\n'
b'2022-06-01 17:58:57.186\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:58:57.190\t- INFO:  Registered PSO permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:58:57.194\t- INFO:  Registered POS permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:58:57.200\t- INFO:  Registered OPS permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:58:57.208\t- INFO:  Registered OSP permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:58:57.214\t- INFO:  Registered SPO permutation: #relations = 2, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:58:57.222\t- INFO:  Registered SOP permutation: #relations = 2, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:58:57.222\t- INFO:  Reading patterns from file base-prefix-1.index.patterns ...\n'
b'2022-06-01 17:58:57.226\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:58:57.228\t- INFO:  The server is ready\n'
b'2022-06-01 17:58:57.137\t- INFO:  Query: BASE <http://example.org/x/> \n'
b'PREFIX : <>\n'
b'\n'
b'SELECT * WHERE { :x ?p ?v } \n'
b'\n'
b'2022-06-01 17:59:27.130\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  23  = {'name': 'base-prefix-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Prefix/Base 2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<base-prefix-2.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<base-prefix-2.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i base-prefix-2 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 17:59:27.716\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 17:59:27.716\t- INFO:  You specified the input format: TTL\n2022-06-01 17:59:27.717\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 17:59:27.717\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 17:59:27.717\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 17:59:27.717\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 17:59:27.717\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 17:59:27.717\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-1.ttl ...\n2022-06-01 17:59:28.046\t- INFO:  Done, total number of triples read: 3 [may contain duplicates]\n2022-06-01 17:59:28.046\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 17:59:28.046\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 17:59:28.046\t- INFO:  Number of words in internal vocabulary: 9\n2022-06-01 17:59:28.046\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 17:59:28.048\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 17:59:28.048\t- INFO:  Removing temporary files ...\n2022-06-01 17:59:28.054\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 17:59:28.057\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 17:59:28.830\t- INFO:  Done, total number of triples converted: 3\n2022-06-01 17:59:28.833\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 17:59:28.833\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 17:59:28.834\t- INFO:  Reduction of size of internal vocabulary: 44%\n2022-06-01 17:59:28.834\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 17:59:29.751\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:59:29.755\t- INFO:  Statistics for PSO: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 17:59:29.756\t- INFO:  Statistics for POS: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 17:59:29.756\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 17:59:29.756\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 17:59:31.416\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:59:31.422\t- INFO:  Statistics for SPO: #relations = 2, #blocks = 1, #triples = 3\n2022-06-01 17:59:31.422\t- INFO:  Statistics for SOP: #relations = 2, #blocks = 1, #triples = 3\n2022-06-01 17:59:31.422\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 17:59:31.422\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 17:59:31.423\t- INFO:  Number of distinct patterns: 2\n2022-06-01 17:59:31.423\t- INFO:  Number of subjects with pattern: 2 [all]\n2022-06-01 17:59:31.423\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 17:59:31.423\t- INFO:  Average number of predicates per subject: 1.5\n2022-06-01 17:59:31.423\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 17:59:32.363\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 17:59:32.369\t- INFO:  Statistics for OSP: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 17:59:32.369\t- INFO:  Statistics for OPS: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 17:59:32.369\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 17:59:32.369\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 17:59:32.370\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i base-prefix-2 -p 9099 -m 1

Port is open

Ascii Request_data: 'BASE <http://example.org/x/> \nPREFIX : <#>\n\nSELECT * WHERE { :x ?p ?v } \n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/base-prefix-2.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=BASE+%3Chttp%3A%2F%2Fexample.org%2Fx%2F%3E+%0APREFIX+%3A+%3C%23%3E%0A%0ASELECT+%2A+WHERE+%7B+%3Ax+%3Fp+%3Fv+%7D+%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: BASE <http://example.org/x/> \nPREFIX : <#>\n\nSELECT * WHERE { :x ?p ?v } \n", "query": "BASE <http://example.org/x/> \nPREFIX : <#>\n\nSELECT * WHERE { :x ?p ?v } \n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 17:59:32.606\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 17:59:32.607\t- INFO:  Initializing server ...\n'
b'2022-06-01 17:59:32.615\t- INFO:  Reading internal vocabulary from file base-prefix-2.vocabulary.internal ...\n'
b'2022-06-01 17:59:32.619\t- INFO:  Done, number of words: 9\n'
b'2022-06-01 17:59:32.623\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 17:59:32.631\t- INFO:  Registered PSO permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:59:32.634\t- INFO:  Registered POS permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:59:32.640\t- INFO:  Registered OPS permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:59:32.646\t- INFO:  Registered OSP permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:59:32.651\t- INFO:  Registered SPO permutation: #relations = 2, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:59:32.658\t- INFO:  Registered SOP permutation: #relations = 2, #blocks = 1, #triples = 3\n'
b'2022-06-01 17:59:32.658\t- INFO:  Reading patterns from file base-prefix-2.index.patterns ...\n'
b'2022-06-01 17:59:32.661\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 17:59:32.663\t- INFO:  The server is ready\n'
b'2022-06-01 17:59:32.580\t- INFO:  Query: BASE <http://example.org/x/> \n'
b'PREFIX : <#>\n'
b'\n'
b'SELECT * WHERE { :x ?p ?v } \n'
b'\n'
b'2022-06-01 18:00:02.572\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  24  = {'name': 'base-prefix-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Prefix/Base 3"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<base-prefix-3.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<base-prefix-3.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i base-prefix-3 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:00:03.134\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:00:03.134\t- INFO:  You specified the input format: TTL\n2022-06-01 18:00:03.135\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:00:03.135\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:00:03.135\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:00:03.135\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:00:03.135\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:00:03.135\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-1.ttl ...\n2022-06-01 18:00:03.462\t- INFO:  Done, total number of triples read: 3 [may contain duplicates]\n2022-06-01 18:00:03.462\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:00:03.462\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:00:03.463\t- INFO:  Number of words in internal vocabulary: 9\n2022-06-01 18:00:03.463\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:00:03.465\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:00:03.465\t- INFO:  Removing temporary files ...\n2022-06-01 18:00:03.472\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:00:03.474\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:00:04.242\t- INFO:  Done, total number of triples converted: 3\n2022-06-01 18:00:04.246\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:00:04.246\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:00:04.246\t- INFO:  Reduction of size of internal vocabulary: 44%\n2022-06-01 18:00:04.247\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:00:05.158\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:00:05.161\t- INFO:  Statistics for PSO: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:00:05.161\t- INFO:  Statistics for POS: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:00:05.161\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:00:05.161\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:00:06.821\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:00:06.826\t- INFO:  Statistics for SPO: #relations = 2, #blocks = 1, #triples = 3\n2022-06-01 18:00:06.826\t- INFO:  Statistics for SOP: #relations = 2, #blocks = 1, #triples = 3\n2022-06-01 18:00:06.826\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:00:06.826\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:00:06.827\t- INFO:  Number of distinct patterns: 2\n2022-06-01 18:00:06.827\t- INFO:  Number of subjects with pattern: 2 [all]\n2022-06-01 18:00:06.827\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 18:00:06.827\t- INFO:  Average number of predicates per subject: 1.5\n2022-06-01 18:00:06.827\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 18:00:07.716\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:00:07.723\t- INFO:  Statistics for OSP: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:00:07.723\t- INFO:  Statistics for OPS: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:00:07.723\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:00:07.723\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:00:07.724\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i base-prefix-3 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX ns: <http://example.org/ns#>\nPREFIX x:  <http://example.org/x/>\n\nSELECT * WHERE { x:x ns:p ?v } \n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/base-prefix-3.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+ns%3A+%3Chttp%3A%2F%2Fexample.org%2Fns%23%3E%0APREFIX+x%3A++%3Chttp%3A%2F%2Fexample.org%2Fx%2F%3E%0A%0ASELECT+%2A+WHERE+%7B+x%3Ax+ns%3Ap+%3Fv+%7D+%0A&send=4096&action=sparql_json_export
response_reason = OK
response_statusCode =  200
response_json = {"head": {"vars": ["v"]}, "results": {"bindings": []}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:00:07.917\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:00:07.918\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:00:07.931\t- INFO:  Reading internal vocabulary from file base-prefix-3.vocabulary.internal ...\n'
b'2022-06-01 18:00:07.934\t- INFO:  Done, number of words: 9\n'
b'2022-06-01 18:00:07.939\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:00:07.942\t- INFO:  Registered PSO permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:07.945\t- INFO:  Registered POS permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:07.952\t- INFO:  Registered OPS permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:07.958\t- INFO:  Registered OSP permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:07.963\t- INFO:  Registered SPO permutation: #relations = 2, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:07.968\t- INFO:  Registered SOP permutation: #relations = 2, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:07.968\t- INFO:  Reading patterns from file base-prefix-3.index.patterns ...\n'
b'2022-06-01 18:00:07.971\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:00:07.974\t- INFO:  The server is ready\n'
b'2022-06-01 18:00:07.895\t- INFO:  Query: PREFIX ns: <http://example.org/ns#>\n'
b'PREFIX x:  <http://example.org/x/>\n'
b'\n'
b'SELECT * WHERE { x:x ns:p ?v } \n'
b'\n'
b'2022-06-01 18:00:07.905\t- INFO:  \n'
b'Runtime Info:\n'
b'\xe2\x94\x82  \n'
b'\xe2\x94\x9c\xe2\x94\x80 IndexScan <http://example.org/x/x> <http://example.org/ns#p> ?v\n'
b'\xe2\x94\x82  result_size: 0 x 1\n'
b'\xe2\x94\x82  columns: ?v\n'
b'\xe2\x94\x82  total_time: 0.00 ms\n'
b'\xe2\x94\x82  operation_time: 0.00 ms\n'
b'\xe2\x94\x82  cached: true\n'
b'\xe2\x94\x82    original_operation_time: 0.00\n'
b'\xe2\x94\x82    original_total_time: 0.00\n'
b'2022-06-01 18:00:37.887\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  25  = {'name': 'base-prefix-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Prefix/Base 4"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<base-prefix-4.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<base-prefix-4.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i base-prefix-4 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:00:38.458\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:00:38.458\t- INFO:  You specified the input format: TTL\n2022-06-01 18:00:38.458\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:00:38.458\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:00:38.459\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:00:38.459\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:00:38.459\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:00:38.459\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-1.ttl ...\n2022-06-01 18:00:38.785\t- INFO:  Done, total number of triples read: 3 [may contain duplicates]\n2022-06-01 18:00:38.786\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:00:38.786\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:00:38.786\t- INFO:  Number of words in internal vocabulary: 9\n2022-06-01 18:00:38.786\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:00:38.788\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:00:38.788\t- INFO:  Removing temporary files ...\n2022-06-01 18:00:38.794\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:00:38.795\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:00:39.558\t- INFO:  Done, total number of triples converted: 3\n2022-06-01 18:00:39.562\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:00:39.562\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:00:39.562\t- INFO:  Reduction of size of internal vocabulary: 44%\n2022-06-01 18:00:39.562\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:00:40.480\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:00:40.484\t- INFO:  Statistics for PSO: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:00:40.484\t- INFO:  Statistics for POS: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:00:40.484\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:00:40.484\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:00:42.113\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:00:42.118\t- INFO:  Statistics for SPO: #relations = 2, #blocks = 1, #triples = 3\n2022-06-01 18:00:42.118\t- INFO:  Statistics for SOP: #relations = 2, #blocks = 1, #triples = 3\n2022-06-01 18:00:42.118\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:00:42.118\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:00:42.119\t- INFO:  Number of distinct patterns: 2\n2022-06-01 18:00:42.119\t- INFO:  Number of subjects with pattern: 2 [all]\n2022-06-01 18:00:42.119\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 18:00:42.119\t- INFO:  Average number of predicates per subject: 1.5\n2022-06-01 18:00:42.119\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 18:00:42.996\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:00:43.000\t- INFO:  Statistics for OSP: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:00:43.000\t- INFO:  Statistics for OPS: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:00:43.001\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:00:43.001\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:00:43.002\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i base-prefix-4 -p 9099 -m 1

Port is open

Ascii Request_data: 'BASE <http://example.org/x/>\n\nSELECT * WHERE { <x> <p> ?v } \n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/base-prefix-4.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=BASE+%3Chttp%3A%2F%2Fexample.org%2Fx%2F%3E%0A%0ASELECT+%2A+WHERE+%7B+%3Cx%3E+%3Cp%3E+%3Fv+%7D+%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: BASE <http://example.org/x/>\n\nSELECT * WHERE { <x> <p> ?v } \n", "query": "BASE <http://example.org/x/>\n\nSELECT * WHERE { <x> <p> ?v } \n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:00:43.184\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:00:43.185\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:00:43.193\t- INFO:  Reading internal vocabulary from file base-prefix-4.vocabulary.internal ...\n'
b'2022-06-01 18:00:43.196\t- INFO:  Done, number of words: 9\n'
b'2022-06-01 18:00:43.200\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:00:43.201\t- INFO:  Registered PSO permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:43.201\t- INFO:  Registered POS permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:43.202\t- INFO:  Registered OPS permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:43.202\t- INFO:  Registered OSP permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:43.203\t- INFO:  Registered SPO permutation: #relations = 2, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:43.203\t- INFO:  Registered SOP permutation: #relations = 2, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:00:43.203\t- INFO:  Reading patterns from file base-prefix-4.index.patterns ...\n'
b'2022-06-01 18:00:43.203\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:00:43.206\t- INFO:  The server is ready\n'
b'2022-06-01 18:00:43.161\t- INFO:  Query: BASE <http://example.org/x/>\n'
b'\n'
b'SELECT * WHERE { <x> <p> ?v } \n'
b'\n'
b'2022-06-01 18:01:13.154\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  26  = {'name': 'base-prefix-5', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - Prefix/Base 5"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<base-prefix-5.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<base-prefix-5.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i base-prefix-5 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:01:13.733\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:01:13.734\t- INFO:  You specified the input format: TTL\n2022-06-01 18:01:13.734\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:01:13.734\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:01:13.734\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:01:13.734\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:01:13.734\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:01:13.734\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-1.ttl ...\n2022-06-01 18:01:14.061\t- INFO:  Done, total number of triples read: 3 [may contain duplicates]\n2022-06-01 18:01:14.061\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:01:14.061\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:01:14.061\t- INFO:  Number of words in internal vocabulary: 9\n2022-06-01 18:01:14.062\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:01:14.064\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:01:14.064\t- INFO:  Removing temporary files ...\n2022-06-01 18:01:14.070\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:01:14.071\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:01:14.841\t- INFO:  Done, total number of triples converted: 3\n2022-06-01 18:01:14.845\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:01:14.845\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:01:14.845\t- INFO:  Reduction of size of internal vocabulary: 44%\n2022-06-01 18:01:14.846\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:01:15.739\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:01:15.742\t- INFO:  Statistics for PSO: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:01:15.742\t- INFO:  Statistics for POS: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:01:15.742\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:01:15.742\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:01:17.380\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:01:17.384\t- INFO:  Statistics for SPO: #relations = 2, #blocks = 1, #triples = 3\n2022-06-01 18:01:17.384\t- INFO:  Statistics for SOP: #relations = 2, #blocks = 1, #triples = 3\n2022-06-01 18:01:17.384\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:01:17.384\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:01:17.385\t- INFO:  Number of distinct patterns: 2\n2022-06-01 18:01:17.385\t- INFO:  Number of subjects with pattern: 2 [all]\n2022-06-01 18:01:17.385\t- INFO:  Total number of distinct subject-predicate pairs: 3\n2022-06-01 18:01:17.385\t- INFO:  Average number of predicates per subject: 1.5\n2022-06-01 18:01:17.385\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 18:01:18.300\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:01:18.305\t- INFO:  Statistics for OSP: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:01:18.305\t- INFO:  Statistics for OPS: #relations = 3, #blocks = 1, #triples = 3\n2022-06-01 18:01:18.305\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:01:18.305\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:01:18.306\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i base-prefix-5 -p 9099 -m 1

Port is open

Ascii Request_data: 'BASE <http://example.org/x/>\n\nSELECT * WHERE { <#x> <#p> ?v } \n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/base-prefix-5.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=BASE+%3Chttp%3A%2F%2Fexample.org%2Fx%2F%3E%0A%0ASELECT+%2A+WHERE+%7B+%3C%23x%3E+%3C%23p%3E+%3Fv+%7D+%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: BASE <http://example.org/x/>\n\nSELECT * WHERE { <#x> <#p> ?v } \n", "query": "BASE <http://example.org/x/>\n\nSELECT * WHERE { <#x> <#p> ?v } \n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:01:18.498\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:01:18.499\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:01:18.512\t- INFO:  Reading internal vocabulary from file base-prefix-5.vocabulary.internal ...\n'
b'2022-06-01 18:01:18.515\t- INFO:  Done, number of words: 9\n'
b'2022-06-01 18:01:18.520\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:01:18.522\t- INFO:  Registered PSO permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:01:18.525\t- INFO:  Registered POS permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:01:18.530\t- INFO:  Registered OPS permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:01:18.535\t- INFO:  Registered OSP permutation: #relations = 3, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:01:18.541\t- INFO:  Registered SPO permutation: #relations = 2, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:01:18.547\t- INFO:  Registered SOP permutation: #relations = 2, #blocks = 1, #triples = 3\n'
b'2022-06-01 18:01:18.547\t- INFO:  Reading patterns from file base-prefix-5.index.patterns ...\n'
b'2022-06-01 18:01:18.551\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:01:18.553\t- INFO:  The server is ready\n'
b'2022-06-01 18:01:18.477\t- INFO:  Query: BASE <http://example.org/x/>\n'
b'\n'
b'SELECT * WHERE { <#x> <#p> ?v } \n'
b'\n'
b'2022-06-01 18:01:48.472\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  27  = {'name': 'list-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Basic - List 1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0060/2007-08-07-dawg-minutes.html>'}, 'actions': [['qt:query', '<list-1.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<list-1.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Basic', 'manifest': 'sparql11/data-r2/basic/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i list-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-2.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:01:49.033\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:01:49.034\t- INFO:  You specified the input format: TTL\n2022-06-01 18:01:49.034\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:01:49.034\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:01:49.034\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:01:49.034\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:01:49.034\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:01:49.034\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/basic/data-2.ttl ...\n2022-06-01 18:01:49.300\t- ERROR: Parse error at byte position 11: The QLever turtle parser cannot handle collections yet\n2022-06-01 18:01:49.300\t- INFO:  The next 500 bytes are:\n) .\n:x :list1 ("1"^^xsd:integer) .\n:x :list2 ("11"^^xsd:integer "22"^^xsd:integer) .\n:x :list3 ("111"^^xsd:integer "222"^^xsd:integer "333"^^xsd:integer) .\n\n'
SubProcess error = b"terminate called after throwing an instance of 'TurtleParser<Tokenizer>::ParseException'\n  what():  Error parsing turtle input\nAborted (core dumped)\n"
Error! indexBuilderProcess exit_code = 134


*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  28  = {'name': 'dawg-bnode-coref-001', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-bnode-coreference"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<query.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<result.ttl>'], 'comment': {'"Query results must maintain bnode co-references in the dataset"': '"Query results must maintain bnode co-references in the dataset"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'bnode co-reference', 'manifest': 'sparql11/data-r2/bnode-coreference/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/bnode-coreference', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i dawg-bnode-coref-001 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/bnode-coreference/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:01:49.350\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:01:49.350\t- INFO:  You specified the input format: TTL\n2022-06-01 18:01:49.351\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:01:49.351\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:01:49.351\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:01:49.351\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:01:49.351\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:01:49.351\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/bnode-coreference/data.ttl ...\n2022-06-01 18:01:49.690\t- INFO:  Done, total number of triples read: 14 [may contain duplicates]\n2022-06-01 18:01:49.690\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:01:49.690\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:01:49.691\t- INFO:  Number of words in internal vocabulary: 17\n2022-06-01 18:01:49.691\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:01:49.693\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:01:49.693\t- INFO:  Removing temporary files ...\n2022-06-01 18:01:49.698\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:01:49.700\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:01:50.489\t- INFO:  Done, total number of triples converted: 14\n2022-06-01 18:01:50.494\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:01:50.495\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:01:50.495\t- INFO:  Reduction of size of internal vocabulary: 34%\n2022-06-01 18:01:50.496\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:01:51.387\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:01:51.391\t- INFO:  Statistics for PSO: #relations = 4, #blocks = 1, #triples = 14\n2022-06-01 18:01:51.391\t- INFO:  Statistics for POS: #relations = 4, #blocks = 1, #triples = 14\n2022-06-01 18:01:51.391\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:01:51.391\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:01:53.081\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:01:53.087\t- INFO:  Statistics for SPO: #relations = 4, #blocks = 1, #triples = 14\n2022-06-01 18:01:53.087\t- INFO:  Statistics for SOP: #relations = 4, #blocks = 1, #triples = 14\n2022-06-01 18:01:53.087\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:01:53.087\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:01:53.089\t- INFO:  Number of distinct patterns: 3\n2022-06-01 18:01:53.089\t- INFO:  Number of subjects with pattern: 4 [all]\n2022-06-01 18:01:53.089\t- INFO:  Total number of distinct subject-predicate pairs: 13\n2022-06-01 18:01:53.089\t- INFO:  Average number of predicates per subject: 3.2\n2022-06-01 18:01:53.089\t- INFO:  Average number of subjects per predicate: 3\n2022-06-01 18:01:53.976\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:01:53.981\t- INFO:  Statistics for OSP: #relations = 11, #blocks = 1, #triples = 14\n2022-06-01 18:01:53.981\t- INFO:  Statistics for OPS: #relations = 11, #blocks = 1, #triples = 14\n2022-06-01 18:01:53.981\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:01:53.981\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:01:53.982\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i dawg-bnode-coref-001 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \nPREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n\nSELECT ?x ?y\nWHERE {\n  ?x foaf:knows ?y .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/bnode-coreference/result.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E+%0APREFIX++foaf%3A+++++++%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E%0A%0ASELECT+%3Fx+%3Fy%0AWHERE+%7B%0A++%3Fx+foaf%3Aknows+%3Fy+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = OK
response_statusCode =  200
response_json = {"head": {"vars": ["x", "y"]}, "results": {"bindings": []}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:01:54.151\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:01:54.152\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:01:54.164\t- INFO:  Reading internal vocabulary from file dawg-bnode-coref-001.vocabulary.internal ...\n'
b'2022-06-01 18:01:54.167\t- INFO:  Done, number of words: 17\n'
b'2022-06-01 18:01:54.171\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:01:54.173\t- INFO:  Registered PSO permutation: #relations = 4, #blocks = 1, #triples = 14\n'
b'2022-06-01 18:01:54.175\t- INFO:  Registered POS permutation: #relations = 4, #blocks = 1, #triples = 14\n'
b'2022-06-01 18:01:54.180\t- INFO:  Registered OPS permutation: #relations = 11, #blocks = 1, #triples = 14\n'
b'2022-06-01 18:01:54.185\t- INFO:  Registered OSP permutation: #relations = 11, #blocks = 1, #triples = 14\n'
b'2022-06-01 18:01:54.190\t- INFO:  Registered SPO permutation: #relations = 4, #blocks = 1, #triples = 14\n'
b'2022-06-01 18:01:54.195\t- INFO:  Registered SOP permutation: #relations = 4, #blocks = 1, #triples = 14\n'
b'2022-06-01 18:01:54.195\t- INFO:  Reading patterns from file dawg-bnode-coref-001.index.patterns ...\n'
b'2022-06-01 18:01:54.198\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:01:54.200\t- INFO:  The server is ready\n'
b'2022-06-01 18:01:54.133\t- INFO:  Query: PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n'
b'PREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n'
b'\n'
b'SELECT ?x ?y\n'
b'WHERE {\n'
b'  ?x foaf:knows ?y .\n'
b'}\n'
b'\n'
b'2022-06-01 18:01:54.134\t- INFO:  \n'
b'Runtime Info:\n'
b'\xe2\x94\x82  \n'
b'\xe2\x94\x9c\xe2\x94\x80 IndexScan ?x <http://xmlns.com/foaf/0.1/knows> ?y\n'
b'\xe2\x94\x82  result_size: 0 x 2\n'
b'\xe2\x94\x82  columns: ?x, ?y\n'
b'\xe2\x94\x82  total_time: 0.00 ms\n'
b'\xe2\x94\x82  operation_time: 0.00 ms\n'
b'\xe2\x94\x82  cached: false\n'
b'\xe2\x94\x82    original_operation_time: 0.00\n'
b'\xe2\x94\x82    original_total_time: 0.00\n'
b'2022-06-01 18:02:24.126\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  29  = {'name': 'dawg-boolean-literal', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test literal \'true\'"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-boolean-literal.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<result-boolean-literal.ttl>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i dawg-boolean-literal -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:02:24.689\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:02:24.689\t- INFO:  You specified the input format: TTL\n2022-06-01 18:02:24.690\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:02:24.690\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:02:24.690\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:02:24.690\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:02:24.690\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:02:24.690\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-1.ttl ...\n2022-06-01 18:02:25.020\t- INFO:  Done, total number of triples read: 8 [may contain duplicates]\n2022-06-01 18:02:25.020\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:02:25.020\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:02:25.020\t- INFO:  Number of words in internal vocabulary: 14\n2022-06-01 18:02:25.021\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:02:25.022\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:02:25.022\t- INFO:  Removing temporary files ...\n2022-06-01 18:02:25.028\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:02:25.030\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:02:25.800\t- INFO:  Done, total number of triples converted: 8\n2022-06-01 18:02:25.804\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:02:25.804\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:02:25.804\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:02:25.805\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:02:26.708\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:02:26.712\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 8\n2022-06-01 18:02:26.712\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 8\n2022-06-01 18:02:26.712\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:02:26.712\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:02:28.371\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:02:28.376\t- INFO:  Statistics for SPO: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:02:28.376\t- INFO:  Statistics for SOP: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:02:28.376\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:02:28.376\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:02:28.377\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:02:28.377\t- INFO:  Number of subjects with pattern: 8 [all]\n2022-06-01 18:02:28.377\t- INFO:  Total number of distinct subject-predicate pairs: 8\n2022-06-01 18:02:28.377\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:02:28.377\t- INFO:  Average number of subjects per predicate: 8\n2022-06-01 18:02:29.274\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:02:29.279\t- INFO:  Statistics for OSP: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:02:29.279\t- INFO:  Statistics for OPS: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:02:29.279\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:02:29.279\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:02:29.280\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i dawg-boolean-literal -p 9099 -m 1

Port is open

Ascii Request_data: 'prefix : <http://example.org/ns#>\nselect ?x where {\n    ?x :p "foo" .\n    FILTER (true) .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/result-boolean-literal.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=prefix+%3A+%3Chttp%3A%2F%2Fexample.org%2Fns%23%3E%0Aselect+%3Fx+where+%7B%0A++++%3Fx+%3Ap+%22foo%22+.%0A++++FILTER+%28true%29+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: true) .\n}\n", "query": "prefix : <http://example.org/ns#>\nselect ?x where {\n    ?x :p \"foo\" .\n    FILTER (true) .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:02:29.495\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:02:29.496\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:02:29.509\t- INFO:  Reading internal vocabulary from file dawg-boolean-literal.vocabulary.internal ...\n'
b'2022-06-01 18:02:29.513\t- INFO:  Done, number of words: 14\n'
b'2022-06-01 18:02:29.518\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:02:29.521\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:02:29.525\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:02:29.531\t- INFO:  Registered OPS permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:02:29.538\t- INFO:  Registered OSP permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:02:29.546\t- INFO:  Registered SPO permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:02:29.553\t- INFO:  Registered SOP permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:02:29.553\t- INFO:  Reading patterns from file dawg-boolean-literal.index.patterns ...\n'
b'2022-06-01 18:02:29.557\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:02:29.559\t- INFO:  The server is ready\n'
b'2022-06-01 18:02:29.470\t- INFO:  Query: prefix : <http://example.org/ns#>\n'
b'select ?x where {\n'
b'    ?x :p "foo" .\n'
b'    FILTER (true) .\n'
b'}\n'
b'\n'
b'2022-06-01 18:02:59.463\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  30  = {'name': 'dawg-bev-1', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - true"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-1.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<result-bev-1.ttl>'], 'comment': {'rdfs:comment': '"Non-zero numerics, non-empty strings, and the true boolean have an EBV of true"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i dawg-bev-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:03:00.040\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:03:00.040\t- INFO:  You specified the input format: TTL\n2022-06-01 18:03:00.041\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:03:00.041\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:03:00.041\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:03:00.041\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:03:00.041\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:03:00.041\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-1.ttl ...\n2022-06-01 18:03:00.374\t- INFO:  Done, total number of triples read: 8 [may contain duplicates]\n2022-06-01 18:03:00.374\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:03:00.374\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:03:00.375\t- INFO:  Number of words in internal vocabulary: 14\n2022-06-01 18:03:00.375\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:03:00.377\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:03:00.377\t- INFO:  Removing temporary files ...\n2022-06-01 18:03:00.383\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:03:00.385\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:03:01.163\t- INFO:  Done, total number of triples converted: 8\n2022-06-01 18:03:01.166\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:03:01.166\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:03:01.166\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:03:01.167\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:03:02.065\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:03:02.068\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 8\n2022-06-01 18:03:02.068\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 8\n2022-06-01 18:03:02.068\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:03:02.068\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:03:03.708\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:03:03.712\t- INFO:  Statistics for SPO: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:03:03.713\t- INFO:  Statistics for SOP: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:03:03.713\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:03:03.713\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:03:03.714\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:03:03.714\t- INFO:  Number of subjects with pattern: 8 [all]\n2022-06-01 18:03:03.714\t- INFO:  Total number of distinct subject-predicate pairs: 8\n2022-06-01 18:03:03.714\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:03:03.714\t- INFO:  Average number of subjects per predicate: 8\n2022-06-01 18:03:04.610\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:03:04.615\t- INFO:  Statistics for OSP: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:03:04.615\t- INFO:  Statistics for OPS: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:03:04.615\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:03:04.615\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:03:04.616\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i dawg-bev-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a\nWHERE\n    { ?a :p ?v . \n      FILTER (?v) .\n    }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/result-bev-1.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX++xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0APREFIX++%3A+%3Chttp%3A%2F%2Fexample.org%2Fns%23%3E%0ASELECT++%3Fa%0AWHERE%0A++++%7B+%3Fa+%3Ap+%3Fv+.+%0A++++++FILTER+%28%3Fv%29+.%0A++++%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: ) is not a valid relation for a filter.", "query": "PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a\nWHERE\n    { ?a :p ?v . \n      FILTER (?v) .\n    }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:03:04.809\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:03:04.810\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:03:04.815\t- INFO:  Reading internal vocabulary from file dawg-bev-1.vocabulary.internal ...\n'
b'2022-06-01 18:03:04.818\t- INFO:  Done, number of words: 14\n'
b'2022-06-01 18:03:04.819\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:03:04.819\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:04.819\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:04.820\t- INFO:  Registered OPS permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:04.820\t- INFO:  Registered OSP permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:04.821\t- INFO:  Registered SPO permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:04.821\t- INFO:  Registered SOP permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:04.821\t- INFO:  Reading patterns from file dawg-bev-1.index.patterns ...\n'
b'2022-06-01 18:03:04.821\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:03:04.824\t- INFO:  The server is ready\n'
b'2022-06-01 18:03:04.788\t- INFO:  Query: PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'PREFIX  : <http://example.org/ns#>\n'
b'SELECT  ?a\n'
b'WHERE\n'
b'    { ?a :p ?v . \n'
b'      FILTER (?v) .\n'
b'    }\n'
b'\n'
b'2022-06-01 18:03:34.782\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  31  = {'name': 'dawg-bev-2', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - false"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-2.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<result-bev-2.ttl>'], 'comment': {'rdfs:comment': '"Zero-valued numerics, the empty string, and the false boolean have an EBV of false"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i dawg-bev-2 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:03:35.345\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:03:35.346\t- INFO:  You specified the input format: TTL\n2022-06-01 18:03:35.346\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:03:35.346\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:03:35.346\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:03:35.347\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:03:35.347\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:03:35.347\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-1.ttl ...\n2022-06-01 18:03:35.672\t- INFO:  Done, total number of triples read: 8 [may contain duplicates]\n2022-06-01 18:03:35.672\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:03:35.672\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:03:35.673\t- INFO:  Number of words in internal vocabulary: 14\n2022-06-01 18:03:35.673\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:03:35.675\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:03:35.675\t- INFO:  Removing temporary files ...\n2022-06-01 18:03:35.681\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:03:35.683\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:03:36.451\t- INFO:  Done, total number of triples converted: 8\n2022-06-01 18:03:36.455\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:03:36.455\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:03:36.455\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:03:36.455\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:03:37.356\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:03:37.359\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 8\n2022-06-01 18:03:37.359\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 8\n2022-06-01 18:03:37.359\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:03:37.359\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:03:39.006\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:03:39.011\t- INFO:  Statistics for SPO: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:03:39.011\t- INFO:  Statistics for SOP: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:03:39.011\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:03:39.011\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:03:39.012\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:03:39.012\t- INFO:  Number of subjects with pattern: 8 [all]\n2022-06-01 18:03:39.012\t- INFO:  Total number of distinct subject-predicate pairs: 8\n2022-06-01 18:03:39.012\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:03:39.012\t- INFO:  Average number of subjects per predicate: 8\n2022-06-01 18:03:39.889\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:03:39.894\t- INFO:  Statistics for OSP: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:03:39.894\t- INFO:  Statistics for OPS: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:03:39.894\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:03:39.894\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:03:39.895\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i dawg-bev-2 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a\nWHERE\n    { ?a :p ?v . \n      FILTER ( ! ?v ) .\n    }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/result-bev-2.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX++xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0APREFIX++%3A+%3Chttp%3A%2F%2Fexample.org%2Fns%23%3E%0ASELECT++%3Fa%0AWHERE%0A++++%7B+%3Fa+%3Ap+%3Fv+.+%0A++++++FILTER+%28+%21+%3Fv+%29+.%0A++++%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: ! is not a valid left hand side for a filter.", "query": "PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a\nWHERE\n    { ?a :p ?v . \n      FILTER ( ! ?v ) .\n    }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:03:40.086\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:03:40.086\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:03:40.095\t- INFO:  Reading internal vocabulary from file dawg-bev-2.vocabulary.internal ...\n'
b'2022-06-01 18:03:40.098\t- INFO:  Done, number of words: 14\n'
b'2022-06-01 18:03:40.101\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:03:40.104\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:40.108\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:40.113\t- INFO:  Registered OPS permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:40.118\t- INFO:  Registered OSP permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:40.124\t- INFO:  Registered SPO permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:40.129\t- INFO:  Registered SOP permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:03:40.130\t- INFO:  Reading patterns from file dawg-bev-2.index.patterns ...\n'
b'2022-06-01 18:03:40.132\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:03:40.135\t- INFO:  The server is ready\n'
b'2022-06-01 18:03:40.064\t- INFO:  Query: PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'PREFIX  : <http://example.org/ns#>\n'
b'SELECT  ?a\n'
b'WHERE\n'
b'    { ?a :p ?v . \n'
b'      FILTER ( ! ?v ) .\n'
b'    }\n'
b'\n'
b'2022-06-01 18:04:10.057\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  32  = {'name': 'dawg-bev-3', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - &&"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-3.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<result-bev-3.ttl>'], 'comment': {'rdfs:comment': '"The && operator takes the EBV of its operands"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i dawg-bev-3 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:04:10.614\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:04:10.614\t- INFO:  You specified the input format: TTL\n2022-06-01 18:04:10.615\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:04:10.615\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:04:10.615\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:04:10.615\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:04:10.615\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:04:10.615\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-1.ttl ...\n2022-06-01 18:04:10.945\t- INFO:  Done, total number of triples read: 8 [may contain duplicates]\n2022-06-01 18:04:10.945\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:04:10.945\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:04:10.946\t- INFO:  Number of words in internal vocabulary: 14\n2022-06-01 18:04:10.946\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:04:10.948\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:04:10.948\t- INFO:  Removing temporary files ...\n2022-06-01 18:04:10.953\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:04:10.955\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:04:11.723\t- INFO:  Done, total number of triples converted: 8\n2022-06-01 18:04:11.726\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:04:11.726\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:04:11.726\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:04:11.727\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:04:12.622\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:04:12.625\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 8\n2022-06-01 18:04:12.625\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 8\n2022-06-01 18:04:12.625\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:04:12.625\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:04:14.301\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:04:14.305\t- INFO:  Statistics for SPO: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:04:14.305\t- INFO:  Statistics for SOP: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:04:14.305\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:04:14.305\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:04:14.306\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:04:14.306\t- INFO:  Number of subjects with pattern: 8 [all]\n2022-06-01 18:04:14.306\t- INFO:  Total number of distinct subject-predicate pairs: 8\n2022-06-01 18:04:14.306\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:04:14.307\t- INFO:  Average number of subjects per predicate: 8\n2022-06-01 18:04:15.172\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:04:15.177\t- INFO:  Statistics for OSP: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:04:15.177\t- INFO:  Statistics for OPS: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:04:15.177\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:04:15.177\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:04:15.178\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i dawg-bev-3 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a\nWHERE\n    { ?a :p ?v . \n      FILTER ("true"^^xsd:boolean && ?v) .\n    }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/result-bev-3.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX++xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0APREFIX++%3A+%3Chttp%3A%2F%2Fexample.org%2Fns%23%3E%0ASELECT++%3Fa%0AWHERE%0A++++%7B+%3Fa+%3Ap+%3Fv+.+%0A++++++FILTER+%28%22true%22%5E%5Exsd%3Aboolean+%26%26+%3Fv%29+.%0A++++%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: && ?v) .\n    }\n", "query": "PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a\nWHERE\n    { ?a :p ?v . \n      FILTER (\"true\"^^xsd:boolean && ?v) .\n    }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:04:15.406\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:04:15.407\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:04:15.416\t- INFO:  Reading internal vocabulary from file dawg-bev-3.vocabulary.internal ...\n'
b'2022-06-01 18:04:15.419\t- INFO:  Done, number of words: 14\n'
b'2022-06-01 18:04:15.424\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:04:15.426\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:15.430\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:15.436\t- INFO:  Registered OPS permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:15.442\t- INFO:  Registered OSP permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:15.449\t- INFO:  Registered SPO permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:15.456\t- INFO:  Registered SOP permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:15.456\t- INFO:  Reading patterns from file dawg-bev-3.index.patterns ...\n'
b'2022-06-01 18:04:15.459\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:04:15.461\t- INFO:  The server is ready\n'
b'2022-06-01 18:04:15.383\t- INFO:  Query: PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'PREFIX  : <http://example.org/ns#>\n'
b'SELECT  ?a\n'
b'WHERE\n'
b'    { ?a :p ?v . \n'
b'      FILTER ("true"^^xsd:boolean && ?v) .\n'
b'    }\n'
b'\n'
b'2022-06-01 18:04:45.375\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  33  = {'name': 'dawg-bev-4', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - ||"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-4.rq>'], ['qt:data', '<data-1.ttl>']], 'result': ['<result-bev-4.ttl>'], 'comment': {'rdfs:comment': '"The || operator takes the EBV of its operands"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i dawg-bev-4 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-1.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:04:45.938\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:04:45.939\t- INFO:  You specified the input format: TTL\n2022-06-01 18:04:45.939\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:04:45.939\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:04:45.939\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:04:45.939\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:04:45.939\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:04:45.939\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-1.ttl ...\n2022-06-01 18:04:46.269\t- INFO:  Done, total number of triples read: 8 [may contain duplicates]\n2022-06-01 18:04:46.269\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:04:46.269\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:04:46.269\t- INFO:  Number of words in internal vocabulary: 14\n2022-06-01 18:04:46.269\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:04:46.271\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:04:46.271\t- INFO:  Removing temporary files ...\n2022-06-01 18:04:46.277\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:04:46.279\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:04:47.042\t- INFO:  Done, total number of triples converted: 8\n2022-06-01 18:04:47.046\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:04:47.046\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:04:47.046\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:04:47.047\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:04:47.981\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:04:47.984\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 8\n2022-06-01 18:04:47.984\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 8\n2022-06-01 18:04:47.984\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:04:47.984\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:04:49.610\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:04:49.615\t- INFO:  Statistics for SPO: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:04:49.615\t- INFO:  Statistics for SOP: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:04:49.615\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:04:49.615\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:04:49.616\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:04:49.616\t- INFO:  Number of subjects with pattern: 8 [all]\n2022-06-01 18:04:49.616\t- INFO:  Total number of distinct subject-predicate pairs: 8\n2022-06-01 18:04:49.616\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:04:49.616\t- INFO:  Average number of subjects per predicate: 8\n2022-06-01 18:04:50.482\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:04:50.487\t- INFO:  Statistics for OSP: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:04:50.487\t- INFO:  Statistics for OPS: #relations = 8, #blocks = 1, #triples = 8\n2022-06-01 18:04:50.487\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:04:50.487\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:04:50.488\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i dawg-bev-4 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a\nWHERE\n    { ?a :p ?v . \n      FILTER ("false"^^xsd:boolean || ?v) .\n    }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/result-bev-4.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX++xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0APREFIX++%3A+%3Chttp%3A%2F%2Fexample.org%2Fns%23%3E%0ASELECT++%3Fa%0AWHERE%0A++++%7B+%3Fa+%3Ap+%3Fv+.+%0A++++++FILTER+%28%22false%22%5E%5Exsd%3Aboolean+%7C%7C+%3Fv%29+.%0A++++%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: || is not a valid relation for a filter.", "query": "PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a\nWHERE\n    { ?a :p ?v . \n      FILTER (\"false\"^^xsd:boolean || ?v) .\n    }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:04:50.691\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:04:50.692\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:04:50.701\t- INFO:  Reading internal vocabulary from file dawg-bev-4.vocabulary.internal ...\n'
b'2022-06-01 18:04:50.704\t- INFO:  Done, number of words: 14\n'
b'2022-06-01 18:04:50.709\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:04:50.711\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:50.715\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:50.721\t- INFO:  Registered OPS permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:50.726\t- INFO:  Registered OSP permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:50.732\t- INFO:  Registered SPO permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:50.738\t- INFO:  Registered SOP permutation: #relations = 8, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:04:50.738\t- INFO:  Reading patterns from file dawg-bev-4.index.patterns ...\n'
b'2022-06-01 18:04:50.741\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:04:50.743\t- INFO:  The server is ready\n'
b'2022-06-01 18:04:50.666\t- INFO:  Query: PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'PREFIX  : <http://example.org/ns#>\n'
b'SELECT  ?a\n'
b'WHERE\n'
b'    { ?a :p ?v . \n'
b'      FILTER ("false"^^xsd:boolean || ?v) .\n'
b'    }\n'
b'\n'
b'2022-06-01 18:05:20.658\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  34  = {'name': 'dawg-bev-5', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - optional"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-5.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<result-bev-5.ttl>'], 'comment': {'rdfs:comment': '"The EBV of an unbound value or a literal with an unknown datatype is a type error, which eliminates the solution in question"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i dawg-bev-5 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-2.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:05:21.224\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:05:21.225\t- INFO:  You specified the input format: TTL\n2022-06-01 18:05:21.225\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:05:21.225\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:05:21.225\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:05:21.225\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:05:21.225\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:05:21.225\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-2.ttl ...\n2022-06-01 18:05:21.557\t- INFO:  Done, total number of triples read: 11 [may contain duplicates]\n2022-06-01 18:05:21.557\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:05:21.557\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:05:21.558\t- INFO:  Number of words in internal vocabulary: 16\n2022-06-01 18:05:21.558\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:05:21.564\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:05:21.564\t- INFO:  Removing temporary files ...\n2022-06-01 18:05:21.570\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:05:21.572\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:05:22.339\t- INFO:  Done, total number of triples converted: 11\n2022-06-01 18:05:22.342\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:05:22.343\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:05:22.343\t- INFO:  Reduction of size of internal vocabulary: 47%\n2022-06-01 18:05:22.343\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:05:23.257\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:05:23.262\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 11\n2022-06-01 18:05:23.262\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 11\n2022-06-01 18:05:23.262\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:05:23.262\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:05:24.897\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:05:24.902\t- INFO:  Statistics for SPO: #relations = 8, #blocks = 1, #triples = 11\n2022-06-01 18:05:24.902\t- INFO:  Statistics for SOP: #relations = 8, #blocks = 1, #triples = 11\n2022-06-01 18:05:24.902\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:05:24.902\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:05:24.903\t- INFO:  Number of distinct patterns: 2\n2022-06-01 18:05:24.903\t- INFO:  Number of subjects with pattern: 8 [all]\n2022-06-01 18:05:24.903\t- INFO:  Total number of distinct subject-predicate pairs: 11\n2022-06-01 18:05:24.903\t- INFO:  Average number of predicates per subject: 1.4\n2022-06-01 18:05:24.903\t- INFO:  Average number of subjects per predicate: 6\n2022-06-01 18:05:25.812\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:05:25.817\t- INFO:  Statistics for OSP: #relations = 9, #blocks = 1, #triples = 11\n2022-06-01 18:05:25.817\t- INFO:  Statistics for OPS: #relations = 9, #blocks = 1, #triples = 11\n2022-06-01 18:05:25.817\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:05:25.817\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:05:25.818\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i dawg-bev-5 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a\nWHERE\n    { ?a :p ?v . \n      OPTIONAL\n        { ?a :q ?w } . \n      FILTER (?w) .\n    }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/result-bev-5.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX++xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0APREFIX++%3A+%3Chttp%3A%2F%2Fexample.org%2Fns%23%3E%0ASELECT++%3Fa%0AWHERE%0A++++%7B+%3Fa+%3Ap+%3Fv+.+%0A++++++OPTIONAL%0A++++++++%7B+%3Fa+%3Aq+%3Fw+%7D+.+%0A++++++FILTER+%28%3Fw%29+.%0A++++%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: ) is not a valid relation for a filter.", "query": "PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a\nWHERE\n    { ?a :p ?v . \n      OPTIONAL\n        { ?a :q ?w } . \n      FILTER (?w) .\n    }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:05:26.040\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:05:26.041\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:05:26.054\t- INFO:  Reading internal vocabulary from file dawg-bev-5.vocabulary.internal ...\n'
b'2022-06-01 18:05:26.058\t- INFO:  Done, number of words: 16\n'
b'2022-06-01 18:05:26.062\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:05:26.065\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:05:26.068\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:05:26.076\t- INFO:  Registered OPS permutation: #relations = 9, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:05:26.082\t- INFO:  Registered OSP permutation: #relations = 9, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:05:26.088\t- INFO:  Registered SPO permutation: #relations = 8, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:05:26.095\t- INFO:  Registered SOP permutation: #relations = 8, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:05:26.095\t- INFO:  Reading patterns from file dawg-bev-5.index.patterns ...\n'
b'2022-06-01 18:05:26.097\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:05:26.100\t- INFO:  The server is ready\n'
b'2022-06-01 18:05:26.018\t- INFO:  Query: PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'PREFIX  : <http://example.org/ns#>\n'
b'SELECT  ?a\n'
b'WHERE\n'
b'    { ?a :p ?v . \n'
b'      OPTIONAL\n'
b'        { ?a :q ?w } . \n'
b'      FILTER (?w) .\n'
b'    }\n'
b'\n'
b'2022-06-01 18:05:56.010\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  35  = {'name': 'dawg-bev-6', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Test \'boolean effective value\' - unknown types"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/att-0082/2007-06-12-dawg-minutes.html>'}, 'actions': [['qt:query', '<query-bev-6.rq>'], ['qt:data', '<data-2.ttl>']], 'result': ['<result-bev-6.ttl>'], 'comment': {'rdfs:comment': '"Negating a type error is still a type error"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Boolean Effective Value', 'manifest': 'sparql11/data-r2/boolean-effective-value/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i dawg-bev-6 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-2.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:05:56.573\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:05:56.574\t- INFO:  You specified the input format: TTL\n2022-06-01 18:05:56.574\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:05:56.574\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:05:56.574\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:05:56.574\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:05:56.574\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:05:56.574\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/data-2.ttl ...\n2022-06-01 18:05:56.902\t- INFO:  Done, total number of triples read: 11 [may contain duplicates]\n2022-06-01 18:05:56.902\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:05:56.902\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:05:56.903\t- INFO:  Number of words in internal vocabulary: 16\n2022-06-01 18:05:56.903\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:05:56.909\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:05:56.909\t- INFO:  Removing temporary files ...\n2022-06-01 18:05:56.915\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:05:56.916\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:05:57.686\t- INFO:  Done, total number of triples converted: 11\n2022-06-01 18:05:57.689\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:05:57.690\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:05:57.690\t- INFO:  Reduction of size of internal vocabulary: 47%\n2022-06-01 18:05:57.690\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:05:58.602\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:05:58.605\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 11\n2022-06-01 18:05:58.605\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 11\n2022-06-01 18:05:58.605\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:05:58.605\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:06:00.257\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:06:00.262\t- INFO:  Statistics for SPO: #relations = 8, #blocks = 1, #triples = 11\n2022-06-01 18:06:00.262\t- INFO:  Statistics for SOP: #relations = 8, #blocks = 1, #triples = 11\n2022-06-01 18:06:00.262\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:06:00.262\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:06:00.263\t- INFO:  Number of distinct patterns: 2\n2022-06-01 18:06:00.263\t- INFO:  Number of subjects with pattern: 8 [all]\n2022-06-01 18:06:00.264\t- INFO:  Total number of distinct subject-predicate pairs: 11\n2022-06-01 18:06:00.264\t- INFO:  Average number of predicates per subject: 1.4\n2022-06-01 18:06:00.264\t- INFO:  Average number of subjects per predicate: 6\n2022-06-01 18:06:01.186\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:06:01.191\t- INFO:  Statistics for OSP: #relations = 9, #blocks = 1, #triples = 11\n2022-06-01 18:06:01.191\t- INFO:  Statistics for OPS: #relations = 9, #blocks = 1, #triples = 11\n2022-06-01 18:06:01.191\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:06:01.191\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:06:01.192\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i dawg-bev-6 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a ?w\nWHERE\n    { ?a :p ?v . \n      OPTIONAL\n        { ?a :q ?w } . \n      FILTER ( ! ?w ) .\n    }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/boolean-effective-value/result-bev-6.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX++xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0APREFIX++%3A+%3Chttp%3A%2F%2Fexample.org%2Fns%23%3E%0ASELECT++%3Fa+%3Fw%0AWHERE%0A++++%7B+%3Fa+%3Ap+%3Fv+.+%0A++++++OPTIONAL%0A++++++++%7B+%3Fa+%3Aq+%3Fw+%7D+.+%0A++++++FILTER+%28+%21+%3Fw+%29+.%0A++++%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: ! is not a valid left hand side for a filter.", "query": "PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX  : <http://example.org/ns#>\nSELECT  ?a ?w\nWHERE\n    { ?a :p ?v . \n      OPTIONAL\n        { ?a :q ?w } . \n      FILTER ( ! ?w ) .\n    }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:06:01.383\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:06:01.384\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:06:01.392\t- INFO:  Reading internal vocabulary from file dawg-bev-6.vocabulary.internal ...\n'
b'2022-06-01 18:06:01.399\t- INFO:  Done, number of words: 16\n'
b'2022-06-01 18:06:01.402\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:06:01.405\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:06:01.407\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:06:01.412\t- INFO:  Registered OPS permutation: #relations = 9, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:06:01.417\t- INFO:  Registered OSP permutation: #relations = 9, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:06:01.422\t- INFO:  Registered SPO permutation: #relations = 8, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:06:01.428\t- INFO:  Registered SOP permutation: #relations = 8, #blocks = 1, #triples = 11\n'
b'2022-06-01 18:06:01.428\t- INFO:  Reading patterns from file dawg-bev-6.index.patterns ...\n'
b'2022-06-01 18:06:01.431\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:06:01.433\t- INFO:  The server is ready\n'
b'2022-06-01 18:06:01.365\t- INFO:  Query: PREFIX  xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'PREFIX  : <http://example.org/ns#>\n'
b'SELECT  ?a ?w\n'
b'WHERE\n'
b'    { ?a :p ?v . \n'
b'      OPTIONAL\n'
b'        { ?a :q ?w } . \n'
b'      FILTER ( ! ?w ) .\n'
b'    }\n'
b'\n'
b'2022-06-01 18:06:31.360\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  36  = {'name': 'dawg-bound-query-001', 'type': {'a': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-bound-query-001"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007AprJun/0006>'}, 'actions': [['qt:query', '<bound1.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<bound1-result.ttl>'], 'comment': {'"BOUND test case."': '"BOUND test case."'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'bound', 'manifest': 'sparql11/data-r2/bound/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/bound', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i dawg-bound-query-001 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/bound/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:06:31.922\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:06:31.922\t- INFO:  You specified the input format: TTL\n2022-06-01 18:06:31.922\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:06:31.922\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:06:31.923\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:06:31.923\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:06:31.923\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:06:31.923\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/bound/data.ttl ...\n2022-06-01 18:06:32.253\t- INFO:  Done, total number of triples read: 4 [may contain duplicates]\n2022-06-01 18:06:32.253\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:06:32.253\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:06:32.253\t- INFO:  Number of words in internal vocabulary: 9\n2022-06-01 18:06:32.253\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:06:32.255\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:06:32.255\t- INFO:  Removing temporary files ...\n2022-06-01 18:06:32.261\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:06:32.263\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:06:33.030\t- INFO:  Done, total number of triples converted: 4\n2022-06-01 18:06:33.033\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:06:33.034\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:06:33.034\t- INFO:  Reduction of size of internal vocabulary: 66%\n2022-06-01 18:06:33.034\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:06:33.953\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:06:33.957\t- INFO:  Statistics for PSO: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 18:06:33.957\t- INFO:  Statistics for POS: #relations = 2, #blocks = 1, #triples = 4\n2022-06-01 18:06:33.957\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:06:33.957\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:06:35.593\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:06:35.597\t- INFO:  Statistics for SPO: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 18:06:35.598\t- INFO:  Statistics for SOP: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 18:06:35.598\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:06:35.598\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:06:35.599\t- INFO:  Number of distinct patterns: 2\n2022-06-01 18:06:35.599\t- INFO:  Number of subjects with pattern: 4 [all]\n2022-06-01 18:06:35.599\t- INFO:  Total number of distinct subject-predicate pairs: 4\n2022-06-01 18:06:35.599\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:06:35.599\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 18:06:36.481\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:06:36.487\t- INFO:  Statistics for OSP: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 18:06:36.487\t- INFO:  Statistics for OPS: #relations = 4, #blocks = 1, #triples = 4\n2022-06-01 18:06:36.487\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:06:36.487\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:06:36.488\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i dawg-bound-query-001 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX  : <http://example.org/ns#>\nSELECT  ?a ?c\nWHERE\n    { ?a :b ?c . \n      OPTIONAL\n        { ?c :d ?e } . \n      FILTER (! bound(?e)) \n    }\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/bound/bound1-result.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX++%3A+%3Chttp%3A%2F%2Fexample.org%2Fns%23%3E%0ASELECT++%3Fa+%3Fc%0AWHERE%0A++++%7B+%3Fa+%3Ab+%3Fc+.+%0A++++++OPTIONAL%0A++++++++%7B+%3Fc+%3Ad+%3Fe+%7D+.+%0A++++++FILTER+%28%21+bound%28%3Fe%29%29+%0A++++%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: bound(?e)) \n    }\n", "query": "PREFIX  : <http://example.org/ns#>\nSELECT  ?a ?c\nWHERE\n    { ?a :b ?c . \n      OPTIONAL\n        { ?c :d ?e } . \n      FILTER (! bound(?e)) \n    }\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:06:36.713\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:06:36.714\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:06:36.723\t- INFO:  Reading internal vocabulary from file dawg-bound-query-001.vocabulary.internal ...\n'
b'2022-06-01 18:06:36.726\t- INFO:  Done, number of words: 9\n'
b'2022-06-01 18:06:36.731\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:06:36.735\t- INFO:  Registered PSO permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 18:06:36.739\t- INFO:  Registered POS permutation: #relations = 2, #blocks = 1, #triples = 4\n'
b'2022-06-01 18:06:36.746\t- INFO:  Registered OPS permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 18:06:36.752\t- INFO:  Registered OSP permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 18:06:36.758\t- INFO:  Registered SPO permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 18:06:36.765\t- INFO:  Registered SOP permutation: #relations = 4, #blocks = 1, #triples = 4\n'
b'2022-06-01 18:06:36.765\t- INFO:  Reading patterns from file dawg-bound-query-001.index.patterns ...\n'
b'2022-06-01 18:06:36.768\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:06:36.771\t- INFO:  The server is ready\n'
b'2022-06-01 18:06:36.688\t- INFO:  Query: PREFIX  : <http://example.org/ns#>\n'
b'SELECT  ?a ?c\n'
b'WHERE\n'
b'    { ?a :b ?c . \n'
b'      OPTIONAL\n'
b'        { ?c :d ?e } . \n'
b'      FILTER (! bound(?e)) \n'
b'    }\n'
b'\n'
b'2022-06-01 18:07:06.680\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  37  = {'name': 'cast-str', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:string"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-str.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-str.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i cast-str -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:07:07.245\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:07:07.246\t- INFO:  You specified the input format: TTL\n2022-06-01 18:07:07.246\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:07:07.246\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:07:07.246\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:07:07.246\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:07:07.246\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:07:07.246\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl ...\n2022-06-01 18:07:07.580\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 18:07:07.580\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:07:07.580\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:07:07.581\t- INFO:  Number of words in internal vocabulary: 16\n2022-06-01 18:07:07.581\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:07:07.583\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:07:07.583\t- INFO:  Removing temporary files ...\n2022-06-01 18:07:07.589\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:07:07.590\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:07:08.360\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 18:07:08.364\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:07:08.364\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:07:08.364\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:07:08.365\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:07:09.276\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:07:09.280\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:07:09.280\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:07:09.280\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:07:09.280\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:07:10.909\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:07:10.914\t- INFO:  Statistics for SPO: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:07:10.914\t- INFO:  Statistics for SOP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:07:10.914\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:07:10.914\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:07:10.915\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:07:10.915\t- INFO:  Number of subjects with pattern: 7 [all]\n2022-06-01 18:07:10.915\t- INFO:  Total number of distinct subject-predicate pairs: 7\n2022-06-01 18:07:10.915\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:07:10.915\t- INFO:  Average number of subjects per predicate: 7\n2022-06-01 18:07:11.850\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:07:11.856\t- INFO:  Statistics for OSP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:07:11.856\t- INFO:  Statistics for OPS: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:07:11.856\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:07:11.856\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:07:11.857\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i cast-str -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:string(?v)) = xsd:string) .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/cast-str.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample.org%2F%3E%0APREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E%0APREFIX+xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0ASELECT+%3Fs+WHERE+%7B%0A++++%3Fs+%3Ap+%3Fv+.%0A++++FILTER%28datatype%28xsd%3Astring%28%3Fv%29%29+%3D+xsd%3Astring%29+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: datatype(xsd:string(?v)) = xsd:string) .\n}\n", "query": "PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:string(?v)) = xsd:string) .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:07:12.080\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:07:12.081\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:07:12.091\t- INFO:  Reading internal vocabulary from file cast-str.vocabulary.internal ...\n'
b'2022-06-01 18:07:12.098\t- INFO:  Done, number of words: 16\n'
b'2022-06-01 18:07:12.102\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:07:12.106\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:12.108\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:12.114\t- INFO:  Registered OPS permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:12.119\t- INFO:  Registered OSP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:12.126\t- INFO:  Registered SPO permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:12.133\t- INFO:  Registered SOP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:12.133\t- INFO:  Reading patterns from file cast-str.index.patterns ...\n'
b'2022-06-01 18:07:12.136\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:07:12.140\t- INFO:  The server is ready\n'
b'2022-06-01 18:07:12.060\t- INFO:  Query: PREFIX : <http://example.org/>\n'
b'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n'
b'PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'SELECT ?s WHERE {\n'
b'    ?s :p ?v .\n'
b'    FILTER(datatype(xsd:string(?v)) = xsd:string) .\n'
b'}\n'
b'\n'
b'2022-06-01 18:07:42.051\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  38  = {'name': 'cast-flt', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:float"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-flt.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-flt.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i cast-flt -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:07:42.614\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:07:42.614\t- INFO:  You specified the input format: TTL\n2022-06-01 18:07:42.614\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:07:42.614\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:07:42.615\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:07:42.615\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:07:42.615\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:07:42.615\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl ...\n2022-06-01 18:07:42.944\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 18:07:42.944\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:07:42.944\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:07:42.944\t- INFO:  Number of words in internal vocabulary: 16\n2022-06-01 18:07:42.944\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:07:42.946\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:07:42.946\t- INFO:  Removing temporary files ...\n2022-06-01 18:07:42.952\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:07:42.954\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:07:43.718\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 18:07:43.722\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:07:43.722\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:07:43.722\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:07:43.723\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:07:44.616\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:07:44.620\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:07:44.620\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:07:44.620\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:07:44.620\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:07:46.252\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:07:46.256\t- INFO:  Statistics for SPO: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:07:46.257\t- INFO:  Statistics for SOP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:07:46.257\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:07:46.257\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:07:46.258\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:07:46.258\t- INFO:  Number of subjects with pattern: 7 [all]\n2022-06-01 18:07:46.258\t- INFO:  Total number of distinct subject-predicate pairs: 7\n2022-06-01 18:07:46.258\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:07:46.258\t- INFO:  Average number of subjects per predicate: 7\n2022-06-01 18:07:47.140\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:07:47.145\t- INFO:  Statistics for OSP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:07:47.145\t- INFO:  Statistics for OPS: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:07:47.145\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:07:47.145\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:07:47.146\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i cast-flt -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:float(?v)) = xsd:float) .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/cast-flt.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample.org%2F%3E%0APREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E%0APREFIX+xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0ASELECT+%3Fs+WHERE+%7B%0A++++%3Fs+%3Ap+%3Fv+.%0A++++FILTER%28datatype%28xsd%3Afloat%28%3Fv%29%29+%3D+xsd%3Afloat%29+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: datatype(xsd:float(?v)) = xsd:float) .\n}\n", "query": "PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:float(?v)) = xsd:float) .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:07:47.337\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:07:47.338\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:07:47.346\t- INFO:  Reading internal vocabulary from file cast-flt.vocabulary.internal ...\n'
b'2022-06-01 18:07:47.349\t- INFO:  Done, number of words: 16\n'
b'2022-06-01 18:07:47.353\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:07:47.356\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:47.359\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:47.364\t- INFO:  Registered OPS permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:47.369\t- INFO:  Registered OSP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:47.375\t- INFO:  Registered SPO permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:47.380\t- INFO:  Registered SOP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:07:47.380\t- INFO:  Reading patterns from file cast-flt.index.patterns ...\n'
b'2022-06-01 18:07:47.382\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:07:47.385\t- INFO:  The server is ready\n'
b'2022-06-01 18:07:47.314\t- INFO:  Query: PREFIX : <http://example.org/>\n'
b'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n'
b'PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'SELECT ?s WHERE {\n'
b'    ?s :p ?v .\n'
b'    FILTER(datatype(xsd:float(?v)) = xsd:float) .\n'
b'}\n'
b'\n'
b'2022-06-01 18:08:17.306\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  39  = {'name': 'cast-dbl', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:double"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-dbl.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-dbl.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i cast-dbl -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:08:17.871\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:08:17.872\t- INFO:  You specified the input format: TTL\n2022-06-01 18:08:17.872\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:08:17.872\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:08:17.872\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:08:17.872\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:08:17.872\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:08:17.872\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl ...\n2022-06-01 18:08:18.207\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 18:08:18.207\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:08:18.207\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:08:18.207\t- INFO:  Number of words in internal vocabulary: 16\n2022-06-01 18:08:18.207\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:08:18.209\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:08:18.209\t- INFO:  Removing temporary files ...\n2022-06-01 18:08:18.215\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:08:18.216\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:08:19.056\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 18:08:19.062\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:08:19.062\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:08:19.062\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:08:19.063\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:08:19.971\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:08:19.974\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:08:19.974\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:08:19.974\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:08:19.974\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:08:21.694\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:08:21.698\t- INFO:  Statistics for SPO: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:08:21.699\t- INFO:  Statistics for SOP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:08:21.699\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:08:21.699\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:08:21.700\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:08:21.700\t- INFO:  Number of subjects with pattern: 7 [all]\n2022-06-01 18:08:21.700\t- INFO:  Total number of distinct subject-predicate pairs: 7\n2022-06-01 18:08:21.700\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:08:21.700\t- INFO:  Average number of subjects per predicate: 7\n2022-06-01 18:08:22.558\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:08:22.563\t- INFO:  Statistics for OSP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:08:22.563\t- INFO:  Statistics for OPS: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:08:22.563\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:08:22.563\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:08:22.564\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i cast-dbl -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:double(?v)) = xsd:double) .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/cast-dbl.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample.org%2F%3E%0APREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E%0APREFIX+xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0ASELECT+%3Fs+WHERE+%7B%0A++++%3Fs+%3Ap+%3Fv+.%0A++++FILTER%28datatype%28xsd%3Adouble%28%3Fv%29%29+%3D+xsd%3Adouble%29+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: datatype(xsd:double(?v)) = xsd:double) .\n}\n", "query": "PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:double(?v)) = xsd:double) .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:08:22.725\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:08:22.725\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:08:22.736\t- INFO:  Reading internal vocabulary from file cast-dbl.vocabulary.internal ...\n'
b'2022-06-01 18:08:22.738\t- INFO:  Done, number of words: 16\n'
b'2022-06-01 18:08:22.742\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:08:22.745\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:22.747\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:22.751\t- INFO:  Registered OPS permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:22.755\t- INFO:  Registered OSP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:22.761\t- INFO:  Registered SPO permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:22.766\t- INFO:  Registered SOP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:22.766\t- INFO:  Reading patterns from file cast-dbl.index.patterns ...\n'
b'2022-06-01 18:08:22.768\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:08:22.769\t- INFO:  The server is ready\n'
b'2022-06-01 18:08:22.709\t- INFO:  Query: PREFIX : <http://example.org/>\n'
b'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n'
b'PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'SELECT ?s WHERE {\n'
b'    ?s :p ?v .\n'
b'    FILTER(datatype(xsd:double(?v)) = xsd:double) .\n'
b'}\n'
b'\n'
b'2022-06-01 18:08:52.702\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  40  = {'name': 'cast-dec', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:decimal"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-dec.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-dec.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i cast-dec -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:08:53.263\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:08:53.264\t- INFO:  You specified the input format: TTL\n2022-06-01 18:08:53.264\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:08:53.264\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:08:53.264\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:08:53.264\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:08:53.264\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:08:53.264\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl ...\n2022-06-01 18:08:53.600\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 18:08:53.600\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:08:53.600\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:08:53.601\t- INFO:  Number of words in internal vocabulary: 16\n2022-06-01 18:08:53.601\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:08:53.603\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:08:53.603\t- INFO:  Removing temporary files ...\n2022-06-01 18:08:53.608\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:08:53.610\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:08:54.379\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 18:08:54.382\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:08:54.383\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:08:54.383\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:08:54.383\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:08:55.281\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:08:55.286\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:08:55.286\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:08:55.286\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:08:55.286\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:08:56.923\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:08:56.927\t- INFO:  Statistics for SPO: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:08:56.927\t- INFO:  Statistics for SOP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:08:56.927\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:08:56.927\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:08:56.928\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:08:56.928\t- INFO:  Number of subjects with pattern: 7 [all]\n2022-06-01 18:08:56.928\t- INFO:  Total number of distinct subject-predicate pairs: 7\n2022-06-01 18:08:56.928\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:08:56.928\t- INFO:  Average number of subjects per predicate: 7\n2022-06-01 18:08:57.830\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:08:57.835\t- INFO:  Statistics for OSP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:08:57.835\t- INFO:  Statistics for OPS: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:08:57.835\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:08:57.835\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:08:57.836\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i cast-dec -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:decimal(?v)) = xsd:decimal) .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/cast-dec.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample.org%2F%3E%0APREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E%0APREFIX+xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0ASELECT+%3Fs+WHERE+%7B%0A++++%3Fs+%3Ap+%3Fv+.%0A++++FILTER%28datatype%28xsd%3Adecimal%28%3Fv%29%29+%3D+xsd%3Adecimal%29+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: datatype(xsd:decimal(?v)) = xsd:decimal) .\n}\n", "query": "PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:decimal(?v)) = xsd:decimal) .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:08:58.032\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:08:58.033\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:08:58.042\t- INFO:  Reading internal vocabulary from file cast-dec.vocabulary.internal ...\n'
b'2022-06-01 18:08:58.049\t- INFO:  Done, number of words: 16\n'
b'2022-06-01 18:08:58.053\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:08:58.056\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:58.059\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:58.063\t- INFO:  Registered OPS permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:58.066\t- INFO:  Registered OSP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:58.071\t- INFO:  Registered SPO permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:58.074\t- INFO:  Registered SOP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:08:58.074\t- INFO:  Reading patterns from file cast-dec.index.patterns ...\n'
b'2022-06-01 18:08:58.074\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:08:58.077\t- INFO:  The server is ready\n'
b'2022-06-01 18:08:58.011\t- INFO:  Query: PREFIX : <http://example.org/>\n'
b'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n'
b'PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'SELECT ?s WHERE {\n'
b'    ?s :p ?v .\n'
b'    FILTER(datatype(xsd:decimal(?v)) = xsd:decimal) .\n'
b'}\n'
b'\n'
b'2022-06-01 18:09:28.003\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  41  = {'name': 'cast-int', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:integer"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-int.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-int.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i cast-int -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:09:28.585\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:09:28.585\t- INFO:  You specified the input format: TTL\n2022-06-01 18:09:28.585\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:09:28.585\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:09:28.586\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:09:28.586\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:09:28.586\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:09:28.586\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl ...\n2022-06-01 18:09:28.914\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 18:09:28.914\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:09:28.914\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:09:28.915\t- INFO:  Number of words in internal vocabulary: 16\n2022-06-01 18:09:28.915\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:09:28.917\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:09:28.917\t- INFO:  Removing temporary files ...\n2022-06-01 18:09:28.923\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:09:28.925\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:09:29.699\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 18:09:29.703\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:09:29.703\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:09:29.703\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:09:29.703\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:09:30.665\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:09:30.669\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:09:30.670\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:09:30.670\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:09:30.670\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:09:32.324\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:09:32.328\t- INFO:  Statistics for SPO: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:09:32.328\t- INFO:  Statistics for SOP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:09:32.328\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:09:32.328\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:09:32.329\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:09:32.329\t- INFO:  Number of subjects with pattern: 7 [all]\n2022-06-01 18:09:32.329\t- INFO:  Total number of distinct subject-predicate pairs: 7\n2022-06-01 18:09:32.329\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:09:32.330\t- INFO:  Average number of subjects per predicate: 7\n2022-06-01 18:09:33.262\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:09:33.267\t- INFO:  Statistics for OSP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:09:33.267\t- INFO:  Statistics for OPS: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:09:33.267\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:09:33.267\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:09:33.269\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i cast-int -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:integer(?v)) = xsd:integer) .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/cast-int.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample.org%2F%3E%0APREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E%0APREFIX+xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0ASELECT+%3Fs+WHERE+%7B%0A++++%3Fs+%3Ap+%3Fv+.%0A++++FILTER%28datatype%28xsd%3Ainteger%28%3Fv%29%29+%3D+xsd%3Ainteger%29+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: datatype(xsd:integer(?v)) = xsd:integer) .\n}\n", "query": "PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:integer(?v)) = xsd:integer) .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:09:33.460\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:09:33.461\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:09:33.470\t- INFO:  Reading internal vocabulary from file cast-int.vocabulary.internal ...\n'
b'2022-06-01 18:09:33.474\t- INFO:  Done, number of words: 16\n'
b'2022-06-01 18:09:33.479\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:09:33.482\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:09:33.484\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:09:33.485\t- INFO:  Registered OPS permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:09:33.486\t- INFO:  Registered OSP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:09:33.491\t- INFO:  Registered SPO permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:09:33.494\t- INFO:  Registered SOP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:09:33.494\t- INFO:  Reading patterns from file cast-int.index.patterns ...\n'
b'2022-06-01 18:09:33.494\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:09:33.496\t- INFO:  The server is ready\n'
b'2022-06-01 18:09:33.440\t- INFO:  Query: PREFIX : <http://example.org/>\n'
b'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n'
b'PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'SELECT ?s WHERE {\n'
b'    ?s :p ?v .\n'
b'    FILTER(datatype(xsd:integer(?v)) = xsd:integer) .\n'
b'}\n'
b'\n'
b'2022-06-01 18:10:03.432\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  42  = {'name': 'cast-dT', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:dateTime"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-dT.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-dT.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i cast-dT -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:10:03.997\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:10:03.997\t- INFO:  You specified the input format: TTL\n2022-06-01 18:10:03.998\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:10:03.998\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:10:03.998\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:10:03.998\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:10:03.998\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:10:03.998\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl ...\n2022-06-01 18:10:04.328\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 18:10:04.328\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:10:04.328\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:10:04.328\t- INFO:  Number of words in internal vocabulary: 16\n2022-06-01 18:10:04.328\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:10:04.330\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:10:04.330\t- INFO:  Removing temporary files ...\n2022-06-01 18:10:04.336\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:10:04.338\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:10:05.108\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 18:10:05.111\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:10:05.111\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:10:05.111\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:10:05.112\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:10:06.058\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:10:06.062\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:10:06.062\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:10:06.062\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:10:06.062\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:10:07.725\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:10:07.730\t- INFO:  Statistics for SPO: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:10:07.730\t- INFO:  Statistics for SOP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:10:07.730\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:10:07.730\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:10:07.732\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:10:07.732\t- INFO:  Number of subjects with pattern: 7 [all]\n2022-06-01 18:10:07.732\t- INFO:  Total number of distinct subject-predicate pairs: 7\n2022-06-01 18:10:07.732\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:10:07.732\t- INFO:  Average number of subjects per predicate: 7\n2022-06-01 18:10:08.627\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:10:08.633\t- INFO:  Statistics for OSP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:10:08.633\t- INFO:  Statistics for OPS: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:10:08.633\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:10:08.633\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:10:08.634\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i cast-dT -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:dateTime(?v)) = xsd:dateTime) .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/cast-dT.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample.org%2F%3E%0APREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E%0APREFIX+xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0ASELECT+%3Fs+WHERE+%7B%0A++++%3Fs+%3Ap+%3Fv+.%0A++++FILTER%28datatype%28xsd%3AdateTime%28%3Fv%29%29+%3D+xsd%3AdateTime%29+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: datatype(xsd:dateTime(?v)) = xsd:dateTime) .\n}\n", "query": "PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:dateTime(?v)) = xsd:dateTime) .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:10:08.830\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:10:08.831\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:10:08.842\t- INFO:  Reading internal vocabulary from file cast-dT.vocabulary.internal ...\n'
b'2022-06-01 18:10:08.850\t- INFO:  Done, number of words: 16\n'
b'2022-06-01 18:10:08.855\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:10:08.857\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:08.860\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:08.866\t- INFO:  Registered OPS permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:08.872\t- INFO:  Registered OSP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:08.878\t- INFO:  Registered SPO permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:08.884\t- INFO:  Registered SOP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:08.884\t- INFO:  Reading patterns from file cast-dT.index.patterns ...\n'
b'2022-06-01 18:10:08.887\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:10:08.890\t- INFO:  The server is ready\n'
b'2022-06-01 18:10:08.808\t- INFO:  Query: PREFIX : <http://example.org/>\n'
b'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n'
b'PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'SELECT ?s WHERE {\n'
b'    ?s :p ?v .\n'
b'    FILTER(datatype(xsd:dateTime(?v)) = xsd:dateTime) .\n'
b'}\n'
b'\n'
b'2022-06-01 18:10:38.799\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  43  = {'name': 'cast-bool', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"Cast to xsd:boolean"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0087/14-dawg-minutes.html>'}, 'actions': [['qt:query', '<cast-bool.rq>'], ['qt:data', '<data.ttl>']], 'result': ['<cast-bool.srx>'], 'comment': {}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'Casting', 'manifest': 'sparql11/data-r2/cast/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i cast-bool -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:10:39.361\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:10:39.362\t- INFO:  You specified the input format: TTL\n2022-06-01 18:10:39.362\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:10:39.362\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:10:39.362\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:10:39.362\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:10:39.362\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:10:39.362\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/data.ttl ...\n2022-06-01 18:10:39.699\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 18:10:39.699\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:10:39.699\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:10:39.700\t- INFO:  Number of words in internal vocabulary: 16\n2022-06-01 18:10:39.700\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:10:39.701\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:10:39.702\t- INFO:  Removing temporary files ...\n2022-06-01 18:10:39.708\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:10:39.710\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:10:40.479\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 18:10:40.483\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:10:40.483\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:10:40.483\t- INFO:  Reduction of size of internal vocabulary: 49%\n2022-06-01 18:10:40.483\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:10:41.395\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:10:41.400\t- INFO:  Statistics for PSO: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:10:41.400\t- INFO:  Statistics for POS: #relations = 1, #blocks = 1, #triples = 7\n2022-06-01 18:10:41.400\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:10:41.400\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:10:43.028\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:10:43.033\t- INFO:  Statistics for SPO: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:10:43.033\t- INFO:  Statistics for SOP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:10:43.033\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:10:43.033\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:10:43.034\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:10:43.034\t- INFO:  Number of subjects with pattern: 7 [all]\n2022-06-01 18:10:43.034\t- INFO:  Total number of distinct subject-predicate pairs: 7\n2022-06-01 18:10:43.034\t- INFO:  Average number of predicates per subject: 1.0\n2022-06-01 18:10:43.034\t- INFO:  Average number of subjects per predicate: 7\n2022-06-01 18:10:43.908\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:10:43.913\t- INFO:  Statistics for OSP: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:10:43.913\t- INFO:  Statistics for OPS: #relations = 7, #blocks = 1, #triples = 7\n2022-06-01 18:10:43.913\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:10:43.913\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:10:43.914\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i cast-bool -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:boolean(?v)) = xsd:boolean) .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/cast/cast-bool.srx
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample.org%2F%3E%0APREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E%0APREFIX+xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E%0ASELECT+%3Fs+WHERE+%7B%0A++++%3Fs+%3Ap+%3Fv+.%0A++++FILTER%28datatype%28xsd%3Aboolean%28%3Fv%29%29+%3D+xsd%3Aboolean%29+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "ParseException, cause: Unexpected input: datatype(xsd:boolean(?v)) = xsd:boolean) .\n}\n", "query": "PREFIX : <http://example.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?s WHERE {\n    ?s :p ?v .\n    FILTER(datatype(xsd:boolean(?v)) = xsd:boolean) .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  srx  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:10:44.100\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:10:44.101\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:10:44.111\t- INFO:  Reading internal vocabulary from file cast-bool.vocabulary.internal ...\n'
b'2022-06-01 18:10:44.113\t- INFO:  Done, number of words: 16\n'
b'2022-06-01 18:10:44.117\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:10:44.120\t- INFO:  Registered PSO permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:44.123\t- INFO:  Registered POS permutation: #relations = 1, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:44.147\t- INFO:  Registered OPS permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:44.152\t- INFO:  Registered OSP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:44.158\t- INFO:  Registered SPO permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:44.163\t- INFO:  Registered SOP permutation: #relations = 7, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:10:44.163\t- INFO:  Reading patterns from file cast-bool.index.patterns ...\n'
b'2022-06-01 18:10:44.166\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:10:44.168\t- INFO:  The server is ready\n'
b'2022-06-01 18:10:44.081\t- INFO:  Query: PREFIX : <http://example.org/>\n'
b'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n'
b'PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n'
b'SELECT ?s WHERE {\n'
b'    ?s :p ?v .\n'
b'    FILTER(datatype(xsd:boolean(?v)) = xsd:boolean) .\n'
b'}\n'
b'\n'
b'2022-06-01 18:11:14.072\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  44  = {'name': 'construct-1', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-construct-identity"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<query-ident.rq>'], ['qt:data', '<data-ident.ttl>']], 'result': ['<result-ident.ttl>'], 'comment': {'rdfs:comment': '"Graph equivalent result graph"'}, 'query_form': {'qt:queryForm': 'qt:QueryConstruct'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-r2/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i construct-1 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/data-ident.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:11:14.638\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:11:14.638\t- INFO:  You specified the input format: TTL\n2022-06-01 18:11:14.638\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:11:14.639\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:11:14.639\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:11:14.639\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:11:14.639\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:11:14.639\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/data-ident.ttl ...\n2022-06-01 18:11:14.975\t- INFO:  Done, total number of triples read: 9 [may contain duplicates]\n2022-06-01 18:11:14.975\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:11:14.975\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:11:14.975\t- INFO:  Number of words in internal vocabulary: 13\n2022-06-01 18:11:14.976\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:11:14.978\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:11:14.978\t- INFO:  Removing temporary files ...\n2022-06-01 18:11:14.984\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:11:14.986\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:11:15.767\t- INFO:  Done, total number of triples converted: 9\n2022-06-01 18:11:15.771\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:11:15.771\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:11:15.771\t- INFO:  Reduction of size of internal vocabulary: 35%\n2022-06-01 18:11:15.771\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:11:16.679\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:11:16.682\t- INFO:  Statistics for PSO: #relations = 4, #blocks = 1, #triples = 9\n2022-06-01 18:11:16.682\t- INFO:  Statistics for POS: #relations = 4, #blocks = 1, #triples = 9\n2022-06-01 18:11:16.682\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:11:16.682\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:11:18.326\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:11:18.331\t- INFO:  Statistics for SPO: #relations = 2, #blocks = 1, #triples = 9\n2022-06-01 18:11:18.331\t- INFO:  Statistics for SOP: #relations = 2, #blocks = 1, #triples = 9\n2022-06-01 18:11:18.331\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:11:18.331\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:11:18.332\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:11:18.332\t- INFO:  Number of subjects with pattern: 2 [all]\n2022-06-01 18:11:18.332\t- INFO:  Total number of distinct subject-predicate pairs: 8\n2022-06-01 18:11:18.332\t- INFO:  Average number of predicates per subject: 4.0\n2022-06-01 18:11:18.332\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 18:11:19.262\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:11:19.268\t- INFO:  Statistics for OSP: #relations = 8, #blocks = 1, #triples = 9\n2022-06-01 18:11:19.269\t- INFO:  Statistics for OPS: #relations = 8, #blocks = 1, #triples = 9\n2022-06-01 18:11:19.269\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:11:19.269\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:11:19.270\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i construct-1 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \nPREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n\nCONSTRUCT { ?s ?p ?o . }\nWHERE {\n  ?s ?p ?o .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/result-ident.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E+%0APREFIX++foaf%3A+++++++%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E%0A%0ACONSTRUCT+%7B+%3Fs+%3Fp+%3Fo+.+%7D%0AWHERE+%7B%0A++%3Fs+%3Fp+%3Fo+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "SPARQL-compliant JSON format is only supported for SELECT queries", "query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \nPREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n\nCONSTRUCT { ?s ?p ?o . }\nWHERE {\n  ?s ?p ?o .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 1, "total": 1}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:11:19.507\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:11:19.509\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:11:19.521\t- INFO:  Reading internal vocabulary from file construct-1.vocabulary.internal ...\n'
b'2022-06-01 18:11:19.525\t- INFO:  Done, number of words: 13\n'
b'2022-06-01 18:11:19.530\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:11:19.533\t- INFO:  Registered PSO permutation: #relations = 4, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:19.536\t- INFO:  Registered POS permutation: #relations = 4, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:19.542\t- INFO:  Registered OPS permutation: #relations = 8, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:19.549\t- INFO:  Registered OSP permutation: #relations = 8, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:19.555\t- INFO:  Registered SPO permutation: #relations = 2, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:19.561\t- INFO:  Registered SOP permutation: #relations = 2, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:19.561\t- INFO:  Reading patterns from file construct-1.index.patterns ...\n'
b'2022-06-01 18:11:19.565\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:11:19.568\t- INFO:  The server is ready\n'
b'2022-06-01 18:11:19.477\t- INFO:  Query: PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n'
b'PREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n'
b'\n'
b'CONSTRUCT { ?s ?p ?o . }\n'
b'WHERE {\n'
b'  ?s ?p ?o .\n'
b'}\n'
b'\n'
b'2022-06-01 18:11:49.465\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  45  = {'name': 'construct-2', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-construct-subgraph"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<query-subgraph.rq>'], ['qt:data', '<data-ident.ttl>']], 'result': ['<result-subgraph.ttl>'], 'comment': {'rdfs:comment': '"Result subgraph of original graph"'}, 'query_form': {'qt:queryForm': 'qt:QueryConstruct'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-r2/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i construct-2 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/data-ident.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:11:50.036\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:11:50.037\t- INFO:  You specified the input format: TTL\n2022-06-01 18:11:50.037\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:11:50.037\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:11:50.037\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:11:50.037\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:11:50.037\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:11:50.037\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/data-ident.ttl ...\n2022-06-01 18:11:50.371\t- INFO:  Done, total number of triples read: 9 [may contain duplicates]\n2022-06-01 18:11:50.371\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:11:50.371\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:11:50.371\t- INFO:  Number of words in internal vocabulary: 13\n2022-06-01 18:11:50.372\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:11:50.373\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:11:50.373\t- INFO:  Removing temporary files ...\n2022-06-01 18:11:50.379\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:11:50.381\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:11:51.152\t- INFO:  Done, total number of triples converted: 9\n2022-06-01 18:11:51.155\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:11:51.155\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:11:51.156\t- INFO:  Reduction of size of internal vocabulary: 35%\n2022-06-01 18:11:51.156\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:11:52.063\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:11:52.067\t- INFO:  Statistics for PSO: #relations = 4, #blocks = 1, #triples = 9\n2022-06-01 18:11:52.067\t- INFO:  Statistics for POS: #relations = 4, #blocks = 1, #triples = 9\n2022-06-01 18:11:52.067\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:11:52.067\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:11:53.710\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:11:53.715\t- INFO:  Statistics for SPO: #relations = 2, #blocks = 1, #triples = 9\n2022-06-01 18:11:53.715\t- INFO:  Statistics for SOP: #relations = 2, #blocks = 1, #triples = 9\n2022-06-01 18:11:53.715\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:11:53.715\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:11:53.716\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:11:53.716\t- INFO:  Number of subjects with pattern: 2 [all]\n2022-06-01 18:11:53.716\t- INFO:  Total number of distinct subject-predicate pairs: 8\n2022-06-01 18:11:53.716\t- INFO:  Average number of predicates per subject: 4.0\n2022-06-01 18:11:53.716\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 18:11:54.644\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:11:54.650\t- INFO:  Statistics for OSP: #relations = 8, #blocks = 1, #triples = 9\n2022-06-01 18:11:54.650\t- INFO:  Statistics for OPS: #relations = 8, #blocks = 1, #triples = 9\n2022-06-01 18:11:54.650\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:11:54.650\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:11:54.652\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i construct-2 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \nPREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n\nCONSTRUCT { ?s foaf:name ?o . }\nWHERE {\n  ?s foaf:name ?o .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/result-subgraph.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E+%0APREFIX++foaf%3A+++++++%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E%0A%0ACONSTRUCT+%7B+%3Fs+foaf%3Aname+%3Fo+.+%7D%0AWHERE+%7B%0A++%3Fs+foaf%3Aname+%3Fo+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "SPARQL-compliant JSON format is only supported for SELECT queries", "query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \nPREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n\nCONSTRUCT { ?s foaf:name ?o . }\nWHERE {\n  ?s foaf:name ?o .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:11:54.854\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:11:54.855\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:11:54.864\t- INFO:  Reading internal vocabulary from file construct-2.vocabulary.internal ...\n'
b'2022-06-01 18:11:54.866\t- INFO:  Done, number of words: 13\n'
b'2022-06-01 18:11:54.870\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:11:54.874\t- INFO:  Registered PSO permutation: #relations = 4, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:54.877\t- INFO:  Registered POS permutation: #relations = 4, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:54.883\t- INFO:  Registered OPS permutation: #relations = 8, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:54.890\t- INFO:  Registered OSP permutation: #relations = 8, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:54.896\t- INFO:  Registered SPO permutation: #relations = 2, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:54.901\t- INFO:  Registered SOP permutation: #relations = 2, #blocks = 1, #triples = 9\n'
b'2022-06-01 18:11:54.901\t- INFO:  Reading patterns from file construct-2.index.patterns ...\n'
b'2022-06-01 18:11:54.904\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:11:54.906\t- INFO:  The server is ready\n'
b'2022-06-01 18:11:54.834\t- INFO:  Query: PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n'
b'PREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n'
b'\n'
b'CONSTRUCT { ?s foaf:name ?o . }\n'
b'WHERE {\n'
b'  ?s foaf:name ?o .\n'
b'}\n'
b'\n'
b'2022-06-01 18:12:24.827\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  46  = {'name': 'construct-3', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-construct-reification-1"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<query-reif-1.rq>'], ['qt:data', '<data-reif.ttl>']], 'result': ['<result-reif.ttl>'], 'comment': {'rdfs:comment': '"Reification of the default graph"'}, 'query_form': {'qt:queryForm': 'qt:QueryConstruct'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-r2/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i construct-3 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/data-reif.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:12:25.391\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:12:25.392\t- INFO:  You specified the input format: TTL\n2022-06-01 18:12:25.392\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:12:25.392\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:12:25.392\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:12:25.392\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:12:25.392\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:12:25.392\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/data-reif.ttl ...\n2022-06-01 18:12:25.723\t- INFO:  Done, total number of triples read: 8 [may contain duplicates]\n2022-06-01 18:12:25.723\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:12:25.723\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:12:25.724\t- INFO:  Number of words in internal vocabulary: 12\n2022-06-01 18:12:25.724\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:12:25.726\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:12:25.726\t- INFO:  Removing temporary files ...\n2022-06-01 18:12:25.732\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:12:25.733\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:12:26.500\t- INFO:  Done, total number of triples converted: 8\n2022-06-01 18:12:26.504\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:12:26.504\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:12:26.504\t- INFO:  Reduction of size of internal vocabulary: 33%\n2022-06-01 18:12:26.505\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:12:27.400\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:12:27.403\t- INFO:  Statistics for PSO: #relations = 4, #blocks = 1, #triples = 8\n2022-06-01 18:12:27.404\t- INFO:  Statistics for POS: #relations = 4, #blocks = 1, #triples = 8\n2022-06-01 18:12:27.404\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:12:27.404\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:12:29.040\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:12:29.045\t- INFO:  Statistics for SPO: #relations = 2, #blocks = 1, #triples = 8\n2022-06-01 18:12:29.045\t- INFO:  Statistics for SOP: #relations = 2, #blocks = 1, #triples = 8\n2022-06-01 18:12:29.045\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:12:29.046\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:12:29.047\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:12:29.047\t- INFO:  Number of subjects with pattern: 2 [all]\n2022-06-01 18:12:29.047\t- INFO:  Total number of distinct subject-predicate pairs: 8\n2022-06-01 18:12:29.047\t- INFO:  Average number of predicates per subject: 4.0\n2022-06-01 18:12:29.047\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 18:12:29.971\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:12:29.977\t- INFO:  Statistics for OSP: #relations = 7, #blocks = 1, #triples = 8\n2022-06-01 18:12:29.977\t- INFO:  Statistics for OPS: #relations = 7, #blocks = 1, #triples = 8\n2022-06-01 18:12:29.977\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:12:29.977\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:12:29.978\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i construct-3 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \nPREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n\nCONSTRUCT { [ rdf:subject ?s ;\n              rdf:predicate ?p ;\n              rdf:object ?o ] . }\nWHERE {\n  ?s ?p ?o .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/result-reif.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E+%0APREFIX++foaf%3A+++++++%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E%0A%0ACONSTRUCT+%7B+%5B+rdf%3Asubject+%3Fs+%3B%0A++++++++++++++rdf%3Apredicate+%3Fp+%3B%0A++++++++++++++rdf%3Aobject+%3Fo+%5D+.+%7D%0AWHERE+%7B%0A++%3Fs+%3Fp+%3Fo+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "SPARQL-compliant JSON format is only supported for SELECT queries", "query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \nPREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n\nCONSTRUCT { [ rdf:subject ?s ;\n              rdf:predicate ?p ;\n              rdf:object ?o ] . }\nWHERE {\n  ?s ?p ?o .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 1, "total": 1}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:12:30.225\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:12:30.226\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:12:30.235\t- INFO:  Reading internal vocabulary from file construct-3.vocabulary.internal ...\n'
b'2022-06-01 18:12:30.238\t- INFO:  Done, number of words: 12\n'
b'2022-06-01 18:12:30.243\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:12:30.247\t- INFO:  Registered PSO permutation: #relations = 4, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:12:30.250\t- INFO:  Registered POS permutation: #relations = 4, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:12:30.256\t- INFO:  Registered OPS permutation: #relations = 7, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:12:30.264\t- INFO:  Registered OSP permutation: #relations = 7, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:12:30.269\t- INFO:  Registered SPO permutation: #relations = 2, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:12:30.276\t- INFO:  Registered SOP permutation: #relations = 2, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:12:30.276\t- INFO:  Reading patterns from file construct-3.index.patterns ...\n'
b'2022-06-01 18:12:30.278\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:12:30.281\t- INFO:  The server is ready\n'
b'2022-06-01 18:12:30.200\t- INFO:  Query: PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n'
b'PREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n'
b'\n'
b'CONSTRUCT { [ rdf:subject ?s ;\n'
b'              rdf:predicate ?p ;\n'
b'              rdf:object ?o ] . }\n'
b'WHERE {\n'
b'  ?s ?p ?o .\n'
b'}\n'
b'\n'
b'2022-06-01 18:13:00.194\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  47  = {'name': 'construct-4', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-construct-reification-2"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<query-reif-2.rq>'], ['qt:data', '<data-reif.ttl>']], 'result': ['<result-reif.ttl>'], 'comment': {'rdfs:comment': '"Reification of the default graph"'}, 'query_form': {'qt:queryForm': 'qt:QueryConstruct'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-r2/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i construct-4 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/data-reif.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:13:00.758\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:13:00.758\t- INFO:  You specified the input format: TTL\n2022-06-01 18:13:00.759\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:13:00.759\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:13:00.759\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:13:00.759\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:13:00.759\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:13:00.759\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/data-reif.ttl ...\n2022-06-01 18:13:01.092\t- INFO:  Done, total number of triples read: 8 [may contain duplicates]\n2022-06-01 18:13:01.092\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:13:01.092\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:13:01.092\t- INFO:  Number of words in internal vocabulary: 12\n2022-06-01 18:13:01.092\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:13:01.094\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:13:01.094\t- INFO:  Removing temporary files ...\n2022-06-01 18:13:01.100\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:13:01.101\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:13:01.867\t- INFO:  Done, total number of triples converted: 8\n2022-06-01 18:13:01.871\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:13:01.871\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:13:01.871\t- INFO:  Reduction of size of internal vocabulary: 33%\n2022-06-01 18:13:01.871\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:13:02.780\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:13:02.783\t- INFO:  Statistics for PSO: #relations = 4, #blocks = 1, #triples = 8\n2022-06-01 18:13:02.783\t- INFO:  Statistics for POS: #relations = 4, #blocks = 1, #triples = 8\n2022-06-01 18:13:02.783\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:13:02.783\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:13:04.423\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:13:04.428\t- INFO:  Statistics for SPO: #relations = 2, #blocks = 1, #triples = 8\n2022-06-01 18:13:04.428\t- INFO:  Statistics for SOP: #relations = 2, #blocks = 1, #triples = 8\n2022-06-01 18:13:04.428\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:13:04.428\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:13:04.429\t- INFO:  Number of distinct patterns: 1\n2022-06-01 18:13:04.429\t- INFO:  Number of subjects with pattern: 2 [all]\n2022-06-01 18:13:04.429\t- INFO:  Total number of distinct subject-predicate pairs: 8\n2022-06-01 18:13:04.429\t- INFO:  Average number of predicates per subject: 4.0\n2022-06-01 18:13:04.429\t- INFO:  Average number of subjects per predicate: 2\n2022-06-01 18:13:05.330\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:13:05.335\t- INFO:  Statistics for OSP: #relations = 7, #blocks = 1, #triples = 8\n2022-06-01 18:13:05.335\t- INFO:  Statistics for OPS: #relations = 7, #blocks = 1, #triples = 8\n2022-06-01 18:13:05.335\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:13:05.335\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:13:05.336\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i construct-4 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \nPREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n\nCONSTRUCT { _:a rdf:subject ?s ;\n                rdf:predicate ?p ;\n                rdf:object ?o  . }\nWHERE {\n  ?s ?p ?o .\n}\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/result-reif.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+rdf%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E+%0APREFIX++foaf%3A+++++++%3Chttp%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%3E%0A%0ACONSTRUCT+%7B+_%3Aa+rdf%3Asubject+%3Fs+%3B%0A++++++++++++++++rdf%3Apredicate+%3Fp+%3B%0A++++++++++++++++rdf%3Aobject+%3Fo++.+%7D%0AWHERE+%7B%0A++%3Fs+%3Fp+%3Fo+.%0A%7D%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "SPARQL-compliant JSON format is only supported for SELECT queries", "query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \nPREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n\nCONSTRUCT { _:a rdf:subject ?s ;\n                rdf:predicate ?p ;\n                rdf:object ?o  . }\nWHERE {\n  ?s ?p ?o .\n}\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:13:05.522\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:13:05.522\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:13:05.535\t- INFO:  Reading internal vocabulary from file construct-4.vocabulary.internal ...\n'
b'2022-06-01 18:13:05.538\t- INFO:  Done, number of words: 12\n'
b'2022-06-01 18:13:05.542\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:13:05.545\t- INFO:  Registered PSO permutation: #relations = 4, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:13:05.548\t- INFO:  Registered POS permutation: #relations = 4, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:13:05.554\t- INFO:  Registered OPS permutation: #relations = 7, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:13:05.560\t- INFO:  Registered OSP permutation: #relations = 7, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:13:05.566\t- INFO:  Registered SPO permutation: #relations = 2, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:13:05.572\t- INFO:  Registered SOP permutation: #relations = 2, #blocks = 1, #triples = 8\n'
b'2022-06-01 18:13:05.573\t- INFO:  Reading patterns from file construct-4.index.patterns ...\n'
b'2022-06-01 18:13:05.576\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:13:05.578\t- INFO:  The server is ready\n'
b'2022-06-01 18:13:05.501\t- INFO:  Query: PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n'
b'PREFIX  foaf:       <http://xmlns.com/foaf/0.1/>\n'
b'\n'
b'CONSTRUCT { _:a rdf:subject ?s ;\n'
b'                rdf:predicate ?p ;\n'
b'                rdf:object ?o  . }\n'
b'WHERE {\n'
b'  ?s ?p ?o .\n'
b'}\n'
b'\n'
b'2022-06-01 18:13:35.493\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  48  = {'name': 'construct-5', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dawg-construct-optional"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<query-construct-optional.rq>'], ['qt:data', '<data-opt.ttl>']], 'result': ['<result-construct-optional.ttl>'], 'comment': {'rdfs:comment': '"Reification of the default graph"'}, 'query_form': {'qt:queryForm': 'qt:QueryConstruct'}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'CONSTRUCT', 'manifest': 'sparql11/data-r2/construct/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
indexBuilderCommand = ./../IndexBuilderMain -l -i construct-5 -F ttl -f /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/data-opt.ttl -s /mnt/c/Users/Joao/Desktop/Mestrado/ERASMUS/Winter\ Semester/git_ad_freiburg_qlever/qlever-code/e2e/e2e-build-settings.json

SubProcess output = b'2022-06-01 18:13:36.058\t- INFO:  \x1b[1mQLever IndexBuilder, compiled on May 30 2022 20:21:17\x1b[22m\n2022-06-01 18:13:36.059\t- INFO:  You specified the input format: TTL\n2022-06-01 18:13:36.059\t- INFO:  Locale was not specified in settings file, default is en_US\n2022-06-01 18:13:36.059\t- INFO:  You specified "locale = en_US" and "ignore-punctuation = 0"\n2022-06-01 18:13:36.059\t- INFO:  You specified "num-triples-per-batch = 40,000", choose a lower value if the index builder runs out of memory\n2022-06-01 18:13:36.059\t- INFO:  Overriding setting parser-batch-size to 1,000 This might influence performance during index build.\n2022-06-01 18:13:36.059\t- INFO:  Integers that cannot be represented by QLever will throw an exception (this is the default behavior)\n2022-06-01 18:13:36.059\t- INFO:  Processing input triples from /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/data-opt.ttl ...\n2022-06-01 18:13:36.396\t- INFO:  Done, total number of triples read: 7 [may contain duplicates]\n2022-06-01 18:13:36.397\t- INFO:  Number of QLever-internal triples created: 0 [may contain duplicates]\n2022-06-01 18:13:36.397\t- INFO:  Merging partial vocabularies in byte order (internal only) ...\n2022-06-01 18:13:36.397\t- INFO:  Number of words in internal vocabulary: 8\n2022-06-01 18:13:36.397\t- INFO:  Merging partial vocabularies in Unicode order (internal and external) ...\n2022-06-01 18:13:36.399\t- INFO:  Number of words in external vocabulary: 0\n2022-06-01 18:13:36.399\t- INFO:  Removing temporary files ...\n2022-06-01 18:13:36.405\t- INFO:  Converting external vocabulary to binary format ...\n2022-06-01 18:13:36.407\t- INFO:  Converting triples from local IDs to global IDs ...\n2022-06-01 18:13:37.174\t- INFO:  Done, total number of triples converted: 7\n2022-06-01 18:13:37.178\t- INFO:  Building prefix tree from internal vocabulary ...\n2022-06-01 18:13:37.178\t- INFO:  Computing maximally compressing prefixes (greedy algorithm) ...\n2022-06-01 18:13:37.178\t- INFO:  Reduction of size of internal vocabulary: 56%\n2022-06-01 18:13:37.178\t- INFO:  Writing compressed vocabulary to disk ...\n2022-06-01 18:13:38.090\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:13:38.094\t- INFO:  Statistics for PSO: #relations = 3, #blocks = 1, #triples = 7\n2022-06-01 18:13:38.094\t- INFO:  Statistics for POS: #relations = 3, #blocks = 1, #triples = 7\n2022-06-01 18:13:38.094\t- INFO:  Exchanging multiplicities for PSO and POS ...\n2022-06-01 18:13:38.094\t- INFO:  Writing meta data for PSO and POS ...\n2022-06-01 18:13:39.732\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:13:39.736\t- INFO:  Statistics for SPO: #relations = 3, #blocks = 1, #triples = 7\n2022-06-01 18:13:39.736\t- INFO:  Statistics for SOP: #relations = 3, #blocks = 1, #triples = 7\n2022-06-01 18:13:39.736\t- INFO:  Exchanging multiplicities for SPO and SOP ...\n2022-06-01 18:13:39.736\t- INFO:  Writing meta data for SPO and SOP ...\n2022-06-01 18:13:39.737\t- INFO:  Number of distinct patterns: 3\n2022-06-01 18:13:39.737\t- INFO:  Number of subjects with pattern: 3 [all]\n2022-06-01 18:13:39.737\t- INFO:  Total number of distinct subject-predicate pairs: 4\n2022-06-01 18:13:39.737\t- INFO:  Average number of predicates per subject: 1.3\n2022-06-01 18:13:39.738\t- INFO:  Average number of subjects per predicate: 1\n2022-06-01 18:13:40.611\t- INFO:  Creating a pair of index permutations ... \n2022-06-01 18:13:40.616\t- INFO:  Statistics for OSP: #relations = 5, #blocks = 1, #triples = 7\n2022-06-01 18:13:40.616\t- INFO:  Statistics for OPS: #relations = 5, #blocks = 1, #triples = 7\n2022-06-01 18:13:40.616\t- INFO:  Exchanging multiplicities for OSP and OPS ...\n2022-06-01 18:13:40.616\t- INFO:  Writing meta data for OSP and OPS ...\n2022-06-01 18:13:40.617\t- INFO:  Index build completed\n'
indexBuilderProcess finished properly, continuing...

serverCommand = ./../ServerMain -i construct-5 -p 9099 -m 1

Port is open

Ascii Request_data: 'PREFIX : <http://example/> \n\nCONSTRUCT { ?x :p2 ?v }\n\nWHERE\n{\n  ?x :p ?o .\n  OPTIONAL {?o :q ?v }\n}\n\n'
Endpoint = http://localhost:9099
expected_result_file_data path = /mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/construct/result-construct-optional.ttl
Action = sparql_json_export
exec_query = http://localhost:9099/?query=PREFIX+%3A+%3Chttp%3A%2F%2Fexample%2F%3E+%0A%0ACONSTRUCT+%7B+%3Fx+%3Ap2+%3Fv+%7D%0A%0AWHERE%0A%7B%0A++%3Fx+%3Ap+%3Fo+.%0A++OPTIONAL+%7B%3Fo+%3Aq+%3Fv+%7D%0A%7D%0A%0A&send=4096&action=sparql_json_export
response_reason = Bad Request
response_statusCode =  400
response_json = {"exception": "SPARQL-compliant JSON format is only supported for SELECT queries", "query": "PREFIX : <http://example/> \n\nCONSTRUCT { ?x :p2 ?v }\n\nWHERE\n{\n  ?x :p ?o .\n  OPTIONAL {?o :q ?v }\n}\n\n", "resultsize": 0, "status": "ERROR", "time": {"computeResult": 0, "total": 0}}
	 »» file_result_suffix is *  ttl  *
Terminating the server...
Server_stdout:
b'2022-06-01 18:13:40.817\t- INFO:  \x1b[1mQLever Server, compiled on May 30 2022 20:21:54\x1b[22m\n'
b'2022-06-01 18:13:40.818\t- INFO:  Initializing server ...\n'
b'2022-06-01 18:13:40.825\t- INFO:  Reading internal vocabulary from file construct-5.vocabulary.internal ...\n'
b'2022-06-01 18:13:40.829\t- INFO:  Done, number of words: 8\n'
b'2022-06-01 18:13:40.833\t- INFO:  Number of words in external vocabulary: 0\n'
b'2022-06-01 18:13:40.835\t- INFO:  Registered PSO permutation: #relations = 3, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:13:40.838\t- INFO:  Registered POS permutation: #relations = 3, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:13:40.844\t- INFO:  Registered OPS permutation: #relations = 5, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:13:40.850\t- INFO:  Registered OSP permutation: #relations = 5, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:13:40.855\t- INFO:  Registered SPO permutation: #relations = 3, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:13:40.861\t- INFO:  Registered SOP permutation: #relations = 3, #blocks = 1, #triples = 7\n'
b'2022-06-01 18:13:40.861\t- INFO:  Reading patterns from file construct-5.index.patterns ...\n'
b'2022-06-01 18:13:40.864\t- INFO:  Sorting random result tables to estimate the sorting performance of this machine ...\n'
b'2022-06-01 18:13:40.867\t- INFO:  The server is ready\n'
b'2022-06-01 18:13:40.795\t- INFO:  Query: PREFIX : <http://example/> \n'
b'\n'
b'CONSTRUCT { ?x :p2 ?v }\n'
b'\n'
b'WHERE\n'
b'{\n'
b'  ?x :p ?o .\n'
b'  OPTIONAL {?o :q ?v }\n'
b'}\n'
b'\n'
b'\n'
b'2022-06-01 18:14:10.789\t- ERROR: The socket was closed due to a timeout: The socket was closed due to a timeout\n'
Server terminated!

*************************************************************************************************
*************************************************************************************************

	 »»» Current Test #  49  = {'name': 'dawg-dataset-01', 'type': {'rdf:type': 'mf:QueryEvaluationTest'}, 'mf_name': {'mf:name': '"dataset-01"'}, 'seeAlso': None, 'mf_description': None, 'mf:resultCardinality': None, 'approval_value': {'dawgt:approval': 'dawgt:Approved'}, '_approval_by': {'dawgt:approvedBy': '<http://lists.w3.org/Archives/Public/public-rdf-dawg/2007JulSep/att-0047/31-dawg-minutes>'}, 'actions': [['qt:query', '<dataset-01.rq>']], 'result': ['<dataset-01.ttl>'], 'comment': {'rdfs:comment': '"Data: default dataset / Query: default dataset"'}, 'query_form': {}, 'requires': [], 'notable': [], 'feature': {}, 'request': [], 'response': [], 'label': 'dataset', 'manifest': 'sparql11/data-r2/dataset/manifest.ttl', 'dir': '/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/sparql11/data-r2/dataset', 'version': 'Sparql 1.0'} 

type_name =  mf:QueryEvaluationTest
Traceback (most recent call last):
  File "/mnt/c/Users/Joao/PycharmProjects/Qlever_Python/w3c_sparql1.1_benchmarking.py", line 1264, in <module>
    '-f ' + test['dir'] + "/" + test['actions'][1][1][1:-1] + \
IndexError: list index out of range
